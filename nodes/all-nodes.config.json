[
    {
        "display_name": "Absolute",
        "description": "Returns absolute value of a number",
        "category": "math",
        "is_plugin": true,
        "inputs": [
            {
                "name": "number",
                "display_name": "Number",
                "description": "Number to get absolute value of",
                "type": "number",
                "required": true
            }
        ],
        "outputs": [
            {
                "name": "result",
                "display_name": "Result",
                "description": "Absolute value",
                "type": "number"
            }
        ],
        "id": "absolute"
    },
    {
        "display_name": "Absolute Value",
        "description": "Returns the absolute value of a number.",
        "category": "math",
        "is_plugin": true,
        "inputs": [
            {
                "name": "input",
                "display_name": "Input",
                "description": "The number to find the absolute value of",
                "type": "number",
                "required": true
            }
        ],
        "outputs": [
            {
                "name": "output",
                "display_name": "Output",
                "description": "The absolute value of the input number",
                "type": "number"
            }
        ],
        "id": "absolute-value"
    },
    {
        "display_name": "Add",
        "description": "Adds two numbers together",
        "category": "math",
        "is_plugin": true,
        "inputs": [
            {
                "name": "a",
                "display_name": "A",
                "description": "First number",
                "type": "number",
                "required": true
            },
            {
                "name": "b",
                "display_name": "B",
                "description": "Second number",
                "type": "number",
                "required": true
            }
        ],
        "outputs": [
            {
                "name": "result",
                "display_name": "Result",
                "description": "Sum of A and B",
                "type": "number"
            }
        ],
        "id": "add"
    },
    {
        "display_name": "AND Gate",
        "description": "A logic gate that outputs true if both inputs are true",
        "category": "logic",
        "inputs": [
            {
                "name": "input1",
                "display_name": "Input 1",
                "description": "The first input for the AND gate",
                "type": "boolean",
                "required": true
            },
            {
                "name": "input2",
                "display_name": "Input 2",
                "description": "The second input for the AND gate",
                "type": "boolean",
                "required": true
            }
        ],
        "outputs": [
            {
                "name": "value",
                "display_name": "Value",
                "description": "The output value of the AND gate",
                "type": "boolean"
            }
        ],
        "id": "and-gate"
    },
    {
        "display_name": "Anthropic: Claude 3.5 Haiku",
        "description": "Claude 3.5 Haiku features offers enhanced capabilities in speed, coding accuracy, and tool use. Engineered to excel in real-time applications, it delivers quick response times that are essential for dynamic tasks such as chat interactions and immediate coding suggestions.\n\nThis makes it highly suitable for environments that demand both speed and precision, such as software development, customer service bots, and data management systems.\n\nThis model is currently pointing to [Claude 3.5 Haiku (2024-10-22)](/anthropic/claude-3-5-haiku-20241022).",
        "category": "llm",
        "provider": "anthropic",
        "accepts_plugins": true,
        "model_id": "anthropic/claude-3.5-haiku",
        "context_length": 200000,
        "supported_parameters": [
            "max_tokens",
            "stop",
            "temperature",
            "tool_choice",
            "tools",
            "top_k",
            "top_p"
        ],
        "inputs": [
            {
                "name": "system_prompt",
                "display_name": "System Prompt",
                "type": "string or message",
                "description": "System prompt for the model",
                "default": null
            },
            {
                "name": "messages",
                "display_name": "Messages",
                "type": "array of messages or message or string",
                "description": "Array of chat messages",
                "required": true
            },
            {
                "name": "tools",
                "display_name": "Tools",
                "type": "tool",
                "description": "Array of tools to use",
                "default": null,
                "allow_multiple": true
            },
            {
                "name": "temperature",
                "display_name": "Temperature",
                "type": "number",
                "description": "Controls randomness (0-2)",
                "default": null
            },
            {
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "type": "number",
                "description": "Maximum tokens to generate",
                "default": null
            },
            {
                "name": "top_p",
                "display_name": "Top P",
                "type": "number",
                "description": "Controls diversity via nucleus sampling",
                "default": null
            },
            {
                "name": "stop",
                "display_name": "Stop",
                "type": "string or array",
                "description": "Custom stop sequences",
                "default": null
            },
            {
                "name": "tool_choice",
                "display_name": "Tool Choice",
                "type": "string",
                "description": "Tool selection control",
                "default": null
            }
        ],
        "outputs": [
            {
                "name": "content",
                "display_name": "Content",
                "can_stream": true,
                "type": "string",
                "description": "The content portion of the generated response message."
            },
            {
                "name": "message",
                "display_name": "Message",
                "type": "message",
                "can_stream": true,
                "description": "The full generated response message."
            },
            {
                "name": "role",
                "display_name": "Role",
                "can_stream": true,
                "type": "string",
                "description": "Role of the response (usually 'assistant')"
            },
            {
                "name": "tool_calls",
                "display_name": "Tool Calls",
                "type": "array of tools",
                "description": "Tool calls made by the model"
            },
            {
                "name": "finish_reason",
                "display_name": "Finish Reason",
                "type": "string",
                "description": "Why the completion finished"
            },
            {
                "name": "usage",
                "display_name": "Token Usage",
                "type": "object",
                "description": "Token usage statistics"
            },
            {
                "name": "cost_total",
                "display_name": "Total Cost",
                "type": "number",
                "description": "Total cost for processing this request (USD)"
            },
            {
                "name": "cost_itemized",
                "display_name": "Itemized Cost",
                "type": "array",
                "description": "Detailed breakdown of costs"
            }
        ],
        "pricing": {
            "reference": "https://openrouter.ai/models",
            "items": [
                {
                    "key": "input_cost_per_million",
                    "label": "Input Tokens (per 1M)",
                    "cost": 0.7999999999999999,
                    "currency": "USD"
                },
                {
                    "key": "output_cost_per_million",
                    "label": "Output Tokens (per 1M)",
                    "cost": 4,
                    "currency": "USD"
                }
            ]
        },
        "id": "anthropic-claude-3-5-haiku"
    },
    {
        "display_name": "Anthropic: Claude 3.5 Haiku (2024-10-22)",
        "description": "Claude 3.5 Haiku features enhancements across all skill sets including coding, tool use, and reasoning. As the fastest model in the Anthropic lineup, it offers rapid response times suitable for applications that require high interactivity and low latency, such as user-facing chatbots and on-the-fly code completions. It also excels in specialized tasks like data extraction and real-time content moderation, making it a versatile tool for a broad range of industries.\n\nIt does not support image inputs.\n\nSee the launch announcement and benchmark results [here](https://www.anthropic.com/news/3-5-models-and-computer-use)",
        "category": "llm",
        "provider": "anthropic",
        "accepts_plugins": true,
        "model_id": "anthropic/claude-3.5-haiku-20241022",
        "context_length": 200000,
        "supported_parameters": [
            "max_tokens",
            "stop",
            "temperature",
            "tool_choice",
            "tools",
            "top_k",
            "top_p"
        ],
        "inputs": [
            {
                "name": "system_prompt",
                "display_name": "System Prompt",
                "type": "string or message",
                "description": "System prompt for the model",
                "default": null
            },
            {
                "name": "messages",
                "display_name": "Messages",
                "type": "array of messages or message or string",
                "description": "Array of chat messages",
                "required": true
            },
            {
                "name": "tools",
                "display_name": "Tools",
                "type": "tool",
                "description": "Array of tools to use",
                "default": null,
                "allow_multiple": true
            },
            {
                "name": "temperature",
                "display_name": "Temperature",
                "type": "number",
                "description": "Controls randomness (0-2)",
                "default": null
            },
            {
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "type": "number",
                "description": "Maximum tokens to generate",
                "default": null
            },
            {
                "name": "top_p",
                "display_name": "Top P",
                "type": "number",
                "description": "Controls diversity via nucleus sampling",
                "default": null
            },
            {
                "name": "stop",
                "display_name": "Stop",
                "type": "string or array",
                "description": "Custom stop sequences",
                "default": null
            },
            {
                "name": "tool_choice",
                "display_name": "Tool Choice",
                "type": "string",
                "description": "Tool selection control",
                "default": null
            }
        ],
        "outputs": [
            {
                "name": "content",
                "display_name": "Content",
                "can_stream": true,
                "type": "string",
                "description": "The content portion of the generated response message."
            },
            {
                "name": "message",
                "display_name": "Message",
                "type": "message",
                "can_stream": true,
                "description": "The full generated response message."
            },
            {
                "name": "role",
                "display_name": "Role",
                "can_stream": true,
                "type": "string",
                "description": "Role of the response (usually 'assistant')"
            },
            {
                "name": "tool_calls",
                "display_name": "Tool Calls",
                "type": "array of tools",
                "description": "Tool calls made by the model"
            },
            {
                "name": "finish_reason",
                "display_name": "Finish Reason",
                "type": "string",
                "description": "Why the completion finished"
            },
            {
                "name": "usage",
                "display_name": "Token Usage",
                "type": "object",
                "description": "Token usage statistics"
            },
            {
                "name": "cost_total",
                "display_name": "Total Cost",
                "type": "number",
                "description": "Total cost for processing this request (USD)"
            },
            {
                "name": "cost_itemized",
                "display_name": "Itemized Cost",
                "type": "array",
                "description": "Detailed breakdown of costs"
            }
        ],
        "pricing": {
            "reference": "https://openrouter.ai/models",
            "items": [
                {
                    "key": "input_cost_per_million",
                    "label": "Input Tokens (per 1M)",
                    "cost": 0.7999999999999999,
                    "currency": "USD"
                },
                {
                    "key": "output_cost_per_million",
                    "label": "Output Tokens (per 1M)",
                    "cost": 4,
                    "currency": "USD"
                }
            ]
        },
        "id": "anthropic-claude-3-5-haiku-20241022"
    },
    {
        "display_name": "Anthropic: Claude 3.5 Sonnet",
        "description": "New Claude 3.5 Sonnet delivers better-than-Opus capabilities, faster-than-Sonnet speeds, at the same Sonnet prices. Sonnet is particularly good at:\n\n- Coding: Scores ~49% on SWE-Bench Verified, higher than the last best score, and without any fancy prompt scaffolding\n- Data science: Augments human data science expertise; navigates unstructured data while using multiple tools for insights\n- Visual processing: excelling at interpreting charts, graphs, and images, accurately transcribing text to derive insights beyond just the text alone\n- Agentic tasks: exceptional tool use, making it great at agentic tasks (i.e. complex, multi-step problem solving tasks that require engaging with other systems)\n\n#multimodal",
        "category": "llm",
        "provider": "anthropic",
        "accepts_plugins": true,
        "model_id": "anthropic/claude-3.5-sonnet",
        "context_length": 200000,
        "supported_parameters": [
            "max_tokens",
            "stop",
            "temperature",
            "tool_choice",
            "tools",
            "top_k",
            "top_p"
        ],
        "inputs": [
            {
                "name": "system_prompt",
                "display_name": "System Prompt",
                "type": "string or message",
                "description": "System prompt for the model",
                "default": null
            },
            {
                "name": "messages",
                "display_name": "Messages",
                "type": "array of messages or message or string",
                "description": "Array of chat messages",
                "required": true
            },
            {
                "name": "tools",
                "display_name": "Tools",
                "type": "tool",
                "description": "Array of tools to use",
                "default": null,
                "allow_multiple": true
            },
            {
                "name": "temperature",
                "display_name": "Temperature",
                "type": "number",
                "description": "Controls randomness (0-2)",
                "default": null
            },
            {
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "type": "number",
                "description": "Maximum tokens to generate",
                "default": null
            },
            {
                "name": "top_p",
                "display_name": "Top P",
                "type": "number",
                "description": "Controls diversity via nucleus sampling",
                "default": null
            },
            {
                "name": "stop",
                "display_name": "Stop",
                "type": "string or array",
                "description": "Custom stop sequences",
                "default": null
            },
            {
                "name": "tool_choice",
                "display_name": "Tool Choice",
                "type": "string",
                "description": "Tool selection control",
                "default": null
            }
        ],
        "outputs": [
            {
                "name": "content",
                "display_name": "Content",
                "can_stream": true,
                "type": "string",
                "description": "The content portion of the generated response message."
            },
            {
                "name": "message",
                "display_name": "Message",
                "type": "message",
                "can_stream": true,
                "description": "The full generated response message."
            },
            {
                "name": "role",
                "display_name": "Role",
                "can_stream": true,
                "type": "string",
                "description": "Role of the response (usually 'assistant')"
            },
            {
                "name": "tool_calls",
                "display_name": "Tool Calls",
                "type": "array of tools",
                "description": "Tool calls made by the model"
            },
            {
                "name": "finish_reason",
                "display_name": "Finish Reason",
                "type": "string",
                "description": "Why the completion finished"
            },
            {
                "name": "usage",
                "display_name": "Token Usage",
                "type": "object",
                "description": "Token usage statistics"
            },
            {
                "name": "cost_total",
                "display_name": "Total Cost",
                "type": "number",
                "description": "Total cost for processing this request (USD)"
            },
            {
                "name": "cost_itemized",
                "display_name": "Itemized Cost",
                "type": "array",
                "description": "Detailed breakdown of costs"
            }
        ],
        "pricing": {
            "reference": "https://openrouter.ai/models",
            "items": [
                {
                    "key": "input_cost_per_million",
                    "label": "Input Tokens (per 1M)",
                    "cost": 3,
                    "currency": "USD"
                },
                {
                    "key": "output_cost_per_million",
                    "label": "Output Tokens (per 1M)",
                    "cost": 15,
                    "currency": "USD"
                }
            ]
        },
        "id": "anthropic-claude-3-5-sonnet"
    },
    {
        "display_name": "Anthropic: Claude 3.5 Sonnet (2024-06-20)",
        "description": "Claude 3.5 Sonnet delivers better-than-Opus capabilities, faster-than-Sonnet speeds, at the same Sonnet prices. Sonnet is particularly good at:\n\n- Coding: Autonomously writes, edits, and runs code with reasoning and troubleshooting\n- Data science: Augments human data science expertise; navigates unstructured data while using multiple tools for insights\n- Visual processing: excelling at interpreting charts, graphs, and images, accurately transcribing text to derive insights beyond just the text alone\n- Agentic tasks: exceptional tool use, making it great at agentic tasks (i.e. complex, multi-step problem solving tasks that require engaging with other systems)\n\nFor the latest version (2024-10-23), check out [Claude 3.5 Sonnet](/anthropic/claude-3.5-sonnet).\n\n#multimodal",
        "category": "llm",
        "provider": "anthropic",
        "accepts_plugins": true,
        "model_id": "anthropic/claude-3.5-sonnet-20240620",
        "context_length": 200000,
        "supported_parameters": [
            "max_tokens",
            "stop",
            "temperature",
            "tool_choice",
            "tools",
            "top_k",
            "top_p"
        ],
        "inputs": [
            {
                "name": "system_prompt",
                "display_name": "System Prompt",
                "type": "string or message",
                "description": "System prompt for the model",
                "default": null
            },
            {
                "name": "messages",
                "display_name": "Messages",
                "type": "array of messages or message or string",
                "description": "Array of chat messages",
                "required": true
            },
            {
                "name": "tools",
                "display_name": "Tools",
                "type": "tool",
                "description": "Array of tools to use",
                "default": null,
                "allow_multiple": true
            },
            {
                "name": "temperature",
                "display_name": "Temperature",
                "type": "number",
                "description": "Controls randomness (0-2)",
                "default": null
            },
            {
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "type": "number",
                "description": "Maximum tokens to generate",
                "default": null
            },
            {
                "name": "top_p",
                "display_name": "Top P",
                "type": "number",
                "description": "Controls diversity via nucleus sampling",
                "default": null
            },
            {
                "name": "stop",
                "display_name": "Stop",
                "type": "string or array",
                "description": "Custom stop sequences",
                "default": null
            },
            {
                "name": "tool_choice",
                "display_name": "Tool Choice",
                "type": "string",
                "description": "Tool selection control",
                "default": null
            }
        ],
        "outputs": [
            {
                "name": "content",
                "display_name": "Content",
                "can_stream": true,
                "type": "string",
                "description": "The content portion of the generated response message."
            },
            {
                "name": "message",
                "display_name": "Message",
                "type": "message",
                "can_stream": true,
                "description": "The full generated response message."
            },
            {
                "name": "role",
                "display_name": "Role",
                "can_stream": true,
                "type": "string",
                "description": "Role of the response (usually 'assistant')"
            },
            {
                "name": "tool_calls",
                "display_name": "Tool Calls",
                "type": "array of tools",
                "description": "Tool calls made by the model"
            },
            {
                "name": "finish_reason",
                "display_name": "Finish Reason",
                "type": "string",
                "description": "Why the completion finished"
            },
            {
                "name": "usage",
                "display_name": "Token Usage",
                "type": "object",
                "description": "Token usage statistics"
            },
            {
                "name": "cost_total",
                "display_name": "Total Cost",
                "type": "number",
                "description": "Total cost for processing this request (USD)"
            },
            {
                "name": "cost_itemized",
                "display_name": "Itemized Cost",
                "type": "array",
                "description": "Detailed breakdown of costs"
            }
        ],
        "pricing": {
            "reference": "https://openrouter.ai/models",
            "items": [
                {
                    "key": "input_cost_per_million",
                    "label": "Input Tokens (per 1M)",
                    "cost": 3,
                    "currency": "USD"
                },
                {
                    "key": "output_cost_per_million",
                    "label": "Output Tokens (per 1M)",
                    "cost": 15,
                    "currency": "USD"
                }
            ]
        },
        "id": "anthropic-claude-3-5-sonnet-20240620"
    },
    {
        "display_name": "Anthropic: Claude 3.7 Sonnet",
        "description": "Claude 3.7 Sonnet is an advanced large language model with improved reasoning, coding, and problem-solving capabilities. It introduces a hybrid reasoning approach, allowing users to choose between rapid responses and extended, step-by-step processing for complex tasks. The model demonstrates notable improvements in coding, particularly in front-end development and full-stack updates, and excels in agentic workflows, where it can autonomously navigate multi-step processes. \n\nClaude 3.7 Sonnet maintains performance parity with its predecessor in standard mode while offering an extended reasoning mode for enhanced accuracy in math, coding, and instruction-following tasks.\n\nRead more at the [blog post here](https://www.anthropic.com/news/claude-3-7-sonnet)",
        "category": "llm",
        "provider": "anthropic",
        "accepts_plugins": true,
        "model_id": "anthropic/claude-3.7-sonnet",
        "context_length": 200000,
        "supported_parameters": [
            "include_reasoning",
            "max_tokens",
            "reasoning",
            "stop",
            "temperature",
            "tool_choice",
            "tools",
            "top_k",
            "top_p"
        ],
        "inputs": [
            {
                "name": "system_prompt",
                "display_name": "System Prompt",
                "type": "string or message",
                "description": "System prompt for the model",
                "default": null
            },
            {
                "name": "messages",
                "display_name": "Messages",
                "type": "array of messages or message or string",
                "description": "Array of chat messages",
                "required": true
            },
            {
                "name": "tools",
                "display_name": "Tools",
                "type": "tool",
                "description": "Array of tools to use",
                "default": null,
                "allow_multiple": true
            },
            {
                "name": "temperature",
                "display_name": "Temperature",
                "type": "number",
                "description": "Controls randomness (0-2)",
                "default": null
            },
            {
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "type": "number",
                "description": "Maximum tokens to generate",
                "default": null
            },
            {
                "name": "top_p",
                "display_name": "Top P",
                "type": "number",
                "description": "Controls diversity via nucleus sampling",
                "default": null
            },
            {
                "name": "include_reasoning",
                "display_name": "Include Reasoning",
                "type": "boolean",
                "description": "Include reasoning in response",
                "default": null
            },
            {
                "name": "reasoning",
                "display_name": "Reasoning",
                "type": "boolean",
                "description": "Internal reasoning mode",
                "default": null
            },
            {
                "name": "stop",
                "display_name": "Stop",
                "type": "string or array",
                "description": "Custom stop sequences",
                "default": null
            },
            {
                "name": "tool_choice",
                "display_name": "Tool Choice",
                "type": "string",
                "description": "Tool selection control",
                "default": null
            }
        ],
        "outputs": [
            {
                "name": "content",
                "display_name": "Content",
                "can_stream": true,
                "type": "string",
                "description": "The content portion of the generated response message."
            },
            {
                "name": "message",
                "display_name": "Message",
                "type": "message",
                "can_stream": true,
                "description": "The full generated response message."
            },
            {
                "name": "role",
                "display_name": "Role",
                "can_stream": true,
                "type": "string",
                "description": "Role of the response (usually 'assistant')"
            },
            {
                "name": "tool_calls",
                "display_name": "Tool Calls",
                "type": "array of tools",
                "description": "Tool calls made by the model"
            },
            {
                "name": "finish_reason",
                "display_name": "Finish Reason",
                "type": "string",
                "description": "Why the completion finished"
            },
            {
                "name": "usage",
                "display_name": "Token Usage",
                "type": "object",
                "description": "Token usage statistics"
            },
            {
                "name": "cost_total",
                "display_name": "Total Cost",
                "type": "number",
                "description": "Total cost for processing this request (USD)"
            },
            {
                "name": "cost_itemized",
                "display_name": "Itemized Cost",
                "type": "array",
                "description": "Detailed breakdown of costs"
            },
            {
                "name": "reasoning",
                "display_name": "Reasoning",
                "type": "string",
                "description": "The detailed reasoning chain from the model"
            },
            {
                "name": "refusal",
                "display_name": "Refusal",
                "type": "string",
                "description": "Model refusal response (if any)"
            }
        ],
        "pricing": {
            "reference": "https://openrouter.ai/models",
            "items": [
                {
                    "key": "input_cost_per_million",
                    "label": "Input Tokens (per 1M)",
                    "cost": 3,
                    "currency": "USD"
                },
                {
                    "key": "output_cost_per_million",
                    "label": "Output Tokens (per 1M)",
                    "cost": 15,
                    "currency": "USD"
                }
            ]
        },
        "id": "anthropic-claude-3-7-sonnet"
    },
    {
        "display_name": "Anthropic: Claude 3.7 Sonnet (thinking)",
        "description": "Claude 3.7 Sonnet is an advanced large language model with improved reasoning, coding, and problem-solving capabilities. It introduces a hybrid reasoning approach, allowing users to choose between rapid responses and extended, step-by-step processing for complex tasks. The model demonstrates notable improvements in coding, particularly in front-end development and full-stack updates, and excels in agentic workflows, where it can autonomously navigate multi-step processes. \n\nClaude 3.7 Sonnet maintains performance parity with its predecessor in standard mode while offering an extended reasoning mode for enhanced accuracy in math, coding, and instruction-following tasks.\n\nRead more at the [blog post here](https://www.anthropic.com/news/claude-3-7-sonnet)",
        "category": "llm",
        "provider": "anthropic",
        "accepts_plugins": true,
        "model_id": "anthropic/claude-3.7-sonnet:thinking",
        "context_length": 200000,
        "supported_parameters": [
            "include_reasoning",
            "max_tokens",
            "reasoning",
            "stop",
            "temperature",
            "tool_choice",
            "tools"
        ],
        "inputs": [
            {
                "name": "system_prompt",
                "display_name": "System Prompt",
                "type": "string or message",
                "description": "System prompt for the model",
                "default": null
            },
            {
                "name": "messages",
                "display_name": "Messages",
                "type": "array of messages or message or string",
                "description": "Array of chat messages",
                "required": true
            },
            {
                "name": "tools",
                "display_name": "Tools",
                "type": "tool",
                "description": "Array of tools to use",
                "default": null,
                "allow_multiple": true
            },
            {
                "name": "temperature",
                "display_name": "Temperature",
                "type": "number",
                "description": "Controls randomness (0-2)",
                "default": null
            },
            {
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "type": "number",
                "description": "Maximum tokens to generate",
                "default": null
            },
            {
                "name": "include_reasoning",
                "display_name": "Include Reasoning",
                "type": "boolean",
                "description": "Include reasoning in response",
                "default": null
            },
            {
                "name": "reasoning",
                "display_name": "Reasoning",
                "type": "boolean",
                "description": "Internal reasoning mode",
                "default": null
            },
            {
                "name": "stop",
                "display_name": "Stop",
                "type": "string or array",
                "description": "Custom stop sequences",
                "default": null
            },
            {
                "name": "tool_choice",
                "display_name": "Tool Choice",
                "type": "string",
                "description": "Tool selection control",
                "default": null
            }
        ],
        "outputs": [
            {
                "name": "content",
                "display_name": "Content",
                "can_stream": true,
                "type": "string",
                "description": "The content portion of the generated response message."
            },
            {
                "name": "message",
                "display_name": "Message",
                "type": "message",
                "can_stream": true,
                "description": "The full generated response message."
            },
            {
                "name": "role",
                "display_name": "Role",
                "can_stream": true,
                "type": "string",
                "description": "Role of the response (usually 'assistant')"
            },
            {
                "name": "tool_calls",
                "display_name": "Tool Calls",
                "type": "array of tools",
                "description": "Tool calls made by the model"
            },
            {
                "name": "finish_reason",
                "display_name": "Finish Reason",
                "type": "string",
                "description": "Why the completion finished"
            },
            {
                "name": "usage",
                "display_name": "Token Usage",
                "type": "object",
                "description": "Token usage statistics"
            },
            {
                "name": "cost_total",
                "display_name": "Total Cost",
                "type": "number",
                "description": "Total cost for processing this request (USD)"
            },
            {
                "name": "cost_itemized",
                "display_name": "Itemized Cost",
                "type": "array",
                "description": "Detailed breakdown of costs"
            },
            {
                "name": "reasoning",
                "display_name": "Reasoning",
                "type": "string",
                "description": "The detailed reasoning chain from the model"
            },
            {
                "name": "refusal",
                "display_name": "Refusal",
                "type": "string",
                "description": "Model refusal response (if any)"
            }
        ],
        "pricing": {
            "reference": "https://openrouter.ai/models",
            "items": [
                {
                    "key": "input_cost_per_million",
                    "label": "Input Tokens (per 1M)",
                    "cost": 3,
                    "currency": "USD"
                },
                {
                    "key": "output_cost_per_million",
                    "label": "Output Tokens (per 1M)",
                    "cost": 15,
                    "currency": "USD"
                }
            ]
        },
        "id": "anthropic-claude-3-7-sonnet-thinking"
    },
    {
        "display_name": "Anthropic: Claude 3 Haiku",
        "description": "Claude 3 Haiku is Anthropic's fastest and most compact model for\nnear-instant responsiveness. Quick and accurate targeted performance.\n\nSee the launch announcement and benchmark results [here](https://www.anthropic.com/news/claude-3-haiku)\n\n#multimodal",
        "category": "llm",
        "provider": "anthropic",
        "accepts_plugins": true,
        "model_id": "anthropic/claude-3-haiku",
        "context_length": 200000,
        "supported_parameters": [
            "max_tokens",
            "stop",
            "temperature",
            "tool_choice",
            "tools",
            "top_k",
            "top_p"
        ],
        "inputs": [
            {
                "name": "system_prompt",
                "display_name": "System Prompt",
                "type": "string or message",
                "description": "System prompt for the model",
                "default": null
            },
            {
                "name": "messages",
                "display_name": "Messages",
                "type": "array of messages or message or string",
                "description": "Array of chat messages",
                "required": true
            },
            {
                "name": "tools",
                "display_name": "Tools",
                "type": "tool",
                "description": "Array of tools to use",
                "default": null,
                "allow_multiple": true
            },
            {
                "name": "temperature",
                "display_name": "Temperature",
                "type": "number",
                "description": "Controls randomness (0-2)",
                "default": null
            },
            {
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "type": "number",
                "description": "Maximum tokens to generate",
                "default": null
            },
            {
                "name": "top_p",
                "display_name": "Top P",
                "type": "number",
                "description": "Controls diversity via nucleus sampling",
                "default": null
            },
            {
                "name": "stop",
                "display_name": "Stop",
                "type": "string or array",
                "description": "Custom stop sequences",
                "default": null
            },
            {
                "name": "tool_choice",
                "display_name": "Tool Choice",
                "type": "string",
                "description": "Tool selection control",
                "default": null
            }
        ],
        "outputs": [
            {
                "name": "content",
                "display_name": "Content",
                "can_stream": true,
                "type": "string",
                "description": "The content portion of the generated response message."
            },
            {
                "name": "message",
                "display_name": "Message",
                "type": "message",
                "can_stream": true,
                "description": "The full generated response message."
            },
            {
                "name": "role",
                "display_name": "Role",
                "can_stream": true,
                "type": "string",
                "description": "Role of the response (usually 'assistant')"
            },
            {
                "name": "tool_calls",
                "display_name": "Tool Calls",
                "type": "array of tools",
                "description": "Tool calls made by the model"
            },
            {
                "name": "finish_reason",
                "display_name": "Finish Reason",
                "type": "string",
                "description": "Why the completion finished"
            },
            {
                "name": "usage",
                "display_name": "Token Usage",
                "type": "object",
                "description": "Token usage statistics"
            },
            {
                "name": "cost_total",
                "display_name": "Total Cost",
                "type": "number",
                "description": "Total cost for processing this request (USD)"
            },
            {
                "name": "cost_itemized",
                "display_name": "Itemized Cost",
                "type": "array",
                "description": "Detailed breakdown of costs"
            }
        ],
        "pricing": {
            "reference": "https://openrouter.ai/models",
            "items": [
                {
                    "key": "input_cost_per_million",
                    "label": "Input Tokens (per 1M)",
                    "cost": 0.25,
                    "currency": "USD"
                },
                {
                    "key": "output_cost_per_million",
                    "label": "Output Tokens (per 1M)",
                    "cost": 1.25,
                    "currency": "USD"
                }
            ]
        },
        "id": "anthropic-claude-3-haiku"
    },
    {
        "display_name": "Anthropic: Claude 3 Opus",
        "description": "Claude 3 Opus is Anthropic's most powerful model for highly complex tasks. It boasts top-level performance, intelligence, fluency, and understanding.\n\nSee the launch announcement and benchmark results [here](https://www.anthropic.com/news/claude-3-family)\n\n#multimodal",
        "category": "llm",
        "provider": "anthropic",
        "accepts_plugins": true,
        "model_id": "anthropic/claude-3-opus",
        "context_length": 200000,
        "supported_parameters": [
            "max_tokens",
            "stop",
            "temperature",
            "tool_choice",
            "tools",
            "top_k",
            "top_p"
        ],
        "inputs": [
            {
                "name": "system_prompt",
                "display_name": "System Prompt",
                "type": "string or message",
                "description": "System prompt for the model",
                "default": null
            },
            {
                "name": "messages",
                "display_name": "Messages",
                "type": "array of messages or message or string",
                "description": "Array of chat messages",
                "required": true
            },
            {
                "name": "tools",
                "display_name": "Tools",
                "type": "tool",
                "description": "Array of tools to use",
                "default": null,
                "allow_multiple": true
            },
            {
                "name": "temperature",
                "display_name": "Temperature",
                "type": "number",
                "description": "Controls randomness (0-2)",
                "default": null
            },
            {
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "type": "number",
                "description": "Maximum tokens to generate",
                "default": null
            },
            {
                "name": "top_p",
                "display_name": "Top P",
                "type": "number",
                "description": "Controls diversity via nucleus sampling",
                "default": null
            },
            {
                "name": "stop",
                "display_name": "Stop",
                "type": "string or array",
                "description": "Custom stop sequences",
                "default": null
            },
            {
                "name": "tool_choice",
                "display_name": "Tool Choice",
                "type": "string",
                "description": "Tool selection control",
                "default": null
            }
        ],
        "outputs": [
            {
                "name": "content",
                "display_name": "Content",
                "can_stream": true,
                "type": "string",
                "description": "The content portion of the generated response message."
            },
            {
                "name": "message",
                "display_name": "Message",
                "type": "message",
                "can_stream": true,
                "description": "The full generated response message."
            },
            {
                "name": "role",
                "display_name": "Role",
                "can_stream": true,
                "type": "string",
                "description": "Role of the response (usually 'assistant')"
            },
            {
                "name": "tool_calls",
                "display_name": "Tool Calls",
                "type": "array of tools",
                "description": "Tool calls made by the model"
            },
            {
                "name": "finish_reason",
                "display_name": "Finish Reason",
                "type": "string",
                "description": "Why the completion finished"
            },
            {
                "name": "usage",
                "display_name": "Token Usage",
                "type": "object",
                "description": "Token usage statistics"
            },
            {
                "name": "cost_total",
                "display_name": "Total Cost",
                "type": "number",
                "description": "Total cost for processing this request (USD)"
            },
            {
                "name": "cost_itemized",
                "display_name": "Itemized Cost",
                "type": "array",
                "description": "Detailed breakdown of costs"
            }
        ],
        "pricing": {
            "reference": "https://openrouter.ai/models",
            "items": [
                {
                    "key": "input_cost_per_million",
                    "label": "Input Tokens (per 1M)",
                    "cost": 15,
                    "currency": "USD"
                },
                {
                    "key": "output_cost_per_million",
                    "label": "Output Tokens (per 1M)",
                    "cost": 75,
                    "currency": "USD"
                }
            ]
        },
        "id": "anthropic-claude-3-opus"
    },
    {
        "display_name": "Anthropic: Claude Opus 4",
        "description": "Claude Opus 4 is benchmarked as the world’s best coding model, at time of release, bringing sustained performance on complex, long-running tasks and agent workflows. It sets new benchmarks in software engineering, achieving leading results on SWE-bench (72.5%) and Terminal-bench (43.2%). Opus 4 supports extended, agentic workflows, handling thousands of task steps continuously for hours without degradation. \n\nRead more at the [blog post here](https://www.anthropic.com/news/claude-4)",
        "category": "llm",
        "provider": "anthropic",
        "accepts_plugins": true,
        "model_id": "anthropic/claude-opus-4",
        "context_length": 200000,
        "supported_parameters": [
            "include_reasoning",
            "max_tokens",
            "reasoning",
            "stop",
            "temperature",
            "tool_choice",
            "tools",
            "top_k",
            "top_p"
        ],
        "inputs": [
            {
                "name": "system_prompt",
                "display_name": "System Prompt",
                "type": "string or message",
                "description": "System prompt for the model",
                "default": null
            },
            {
                "name": "messages",
                "display_name": "Messages",
                "type": "array of messages or message or string",
                "description": "Array of chat messages",
                "required": true
            },
            {
                "name": "tools",
                "display_name": "Tools",
                "type": "tool",
                "description": "Array of tools to use",
                "default": null,
                "allow_multiple": true
            },
            {
                "name": "temperature",
                "display_name": "Temperature",
                "type": "number",
                "description": "Controls randomness (0-2)",
                "default": null
            },
            {
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "type": "number",
                "description": "Maximum tokens to generate",
                "default": null
            },
            {
                "name": "top_p",
                "display_name": "Top P",
                "type": "number",
                "description": "Controls diversity via nucleus sampling",
                "default": null
            },
            {
                "name": "include_reasoning",
                "display_name": "Include Reasoning",
                "type": "boolean",
                "description": "Include reasoning in response",
                "default": null
            },
            {
                "name": "reasoning",
                "display_name": "Reasoning",
                "type": "boolean",
                "description": "Internal reasoning mode",
                "default": null
            },
            {
                "name": "stop",
                "display_name": "Stop",
                "type": "string or array",
                "description": "Custom stop sequences",
                "default": null
            },
            {
                "name": "tool_choice",
                "display_name": "Tool Choice",
                "type": "string",
                "description": "Tool selection control",
                "default": null
            }
        ],
        "outputs": [
            {
                "name": "content",
                "display_name": "Content",
                "can_stream": true,
                "type": "string",
                "description": "The content portion of the generated response message."
            },
            {
                "name": "message",
                "display_name": "Message",
                "type": "message",
                "can_stream": true,
                "description": "The full generated response message."
            },
            {
                "name": "role",
                "display_name": "Role",
                "can_stream": true,
                "type": "string",
                "description": "Role of the response (usually 'assistant')"
            },
            {
                "name": "tool_calls",
                "display_name": "Tool Calls",
                "type": "array of tools",
                "description": "Tool calls made by the model"
            },
            {
                "name": "finish_reason",
                "display_name": "Finish Reason",
                "type": "string",
                "description": "Why the completion finished"
            },
            {
                "name": "usage",
                "display_name": "Token Usage",
                "type": "object",
                "description": "Token usage statistics"
            },
            {
                "name": "cost_total",
                "display_name": "Total Cost",
                "type": "number",
                "description": "Total cost for processing this request (USD)"
            },
            {
                "name": "cost_itemized",
                "display_name": "Itemized Cost",
                "type": "array",
                "description": "Detailed breakdown of costs"
            },
            {
                "name": "reasoning",
                "display_name": "Reasoning",
                "type": "string",
                "description": "The detailed reasoning chain from the model"
            },
            {
                "name": "refusal",
                "display_name": "Refusal",
                "type": "string",
                "description": "Model refusal response (if any)"
            }
        ],
        "pricing": {
            "reference": "https://openrouter.ai/models",
            "items": [
                {
                    "key": "input_cost_per_million",
                    "label": "Input Tokens (per 1M)",
                    "cost": 15,
                    "currency": "USD"
                },
                {
                    "key": "output_cost_per_million",
                    "label": "Output Tokens (per 1M)",
                    "cost": 75,
                    "currency": "USD"
                }
            ]
        },
        "id": "anthropic-claude-opus-4"
    },
    {
        "display_name": "Anthropic: Claude Opus 4.1",
        "description": "Claude Opus 4.1 is an updated version of Anthropic’s flagship model, offering improved performance in coding, reasoning, and agentic tasks. It achieves 74.5% on SWE-bench Verified and shows notable gains in multi-file code refactoring, debugging precision, and detail-oriented reasoning. The model supports extended thinking up to 64K tokens and is optimized for tasks involving research, data analysis, and tool-assisted reasoning.",
        "category": "llm",
        "provider": "anthropic",
        "accepts_plugins": true,
        "model_id": "anthropic/claude-opus-4.1",
        "context_length": 200000,
        "supported_parameters": [
            "include_reasoning",
            "max_tokens",
            "reasoning",
            "stop",
            "temperature",
            "tool_choice",
            "tools"
        ],
        "inputs": [
            {
                "name": "system_prompt",
                "display_name": "System Prompt",
                "type": "string or message",
                "description": "System prompt for the model",
                "default": null
            },
            {
                "name": "messages",
                "display_name": "Messages",
                "type": "array of messages or message or string",
                "description": "Array of chat messages",
                "required": true
            },
            {
                "name": "tools",
                "display_name": "Tools",
                "type": "tool",
                "description": "Array of tools to use",
                "default": null,
                "allow_multiple": true
            },
            {
                "name": "temperature",
                "display_name": "Temperature",
                "type": "number",
                "description": "Controls randomness (0-2)",
                "default": null
            },
            {
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "type": "number",
                "description": "Maximum tokens to generate",
                "default": null
            },
            {
                "name": "include_reasoning",
                "display_name": "Include Reasoning",
                "type": "boolean",
                "description": "Include reasoning in response",
                "default": null
            },
            {
                "name": "reasoning",
                "display_name": "Reasoning",
                "type": "boolean",
                "description": "Internal reasoning mode",
                "default": null
            },
            {
                "name": "stop",
                "display_name": "Stop",
                "type": "string or array",
                "description": "Custom stop sequences",
                "default": null
            },
            {
                "name": "tool_choice",
                "display_name": "Tool Choice",
                "type": "string",
                "description": "Tool selection control",
                "default": null
            }
        ],
        "outputs": [
            {
                "name": "content",
                "display_name": "Content",
                "can_stream": true,
                "type": "string",
                "description": "The content portion of the generated response message."
            },
            {
                "name": "message",
                "display_name": "Message",
                "type": "message",
                "can_stream": true,
                "description": "The full generated response message."
            },
            {
                "name": "role",
                "display_name": "Role",
                "can_stream": true,
                "type": "string",
                "description": "Role of the response (usually 'assistant')"
            },
            {
                "name": "tool_calls",
                "display_name": "Tool Calls",
                "type": "array of tools",
                "description": "Tool calls made by the model"
            },
            {
                "name": "finish_reason",
                "display_name": "Finish Reason",
                "type": "string",
                "description": "Why the completion finished"
            },
            {
                "name": "usage",
                "display_name": "Token Usage",
                "type": "object",
                "description": "Token usage statistics"
            },
            {
                "name": "cost_total",
                "display_name": "Total Cost",
                "type": "number",
                "description": "Total cost for processing this request (USD)"
            },
            {
                "name": "cost_itemized",
                "display_name": "Itemized Cost",
                "type": "array",
                "description": "Detailed breakdown of costs"
            },
            {
                "name": "reasoning",
                "display_name": "Reasoning",
                "type": "string",
                "description": "The detailed reasoning chain from the model"
            },
            {
                "name": "refusal",
                "display_name": "Refusal",
                "type": "string",
                "description": "Model refusal response (if any)"
            }
        ],
        "pricing": {
            "reference": "https://openrouter.ai/models",
            "items": [
                {
                    "key": "input_cost_per_million",
                    "label": "Input Tokens (per 1M)",
                    "cost": 15,
                    "currency": "USD"
                },
                {
                    "key": "output_cost_per_million",
                    "label": "Output Tokens (per 1M)",
                    "cost": 75,
                    "currency": "USD"
                }
            ]
        },
        "id": "anthropic-claude-opus-4-1"
    },
    {
        "display_name": "Anthropic: Claude Sonnet 4",
        "description": "Claude Sonnet 4 significantly enhances the capabilities of its predecessor, Sonnet 3.7, excelling in both coding and reasoning tasks with improved precision and controllability. Achieving state-of-the-art performance on SWE-bench (72.7%), Sonnet 4 balances capability and computational efficiency, making it suitable for a broad range of applications from routine coding tasks to complex software development projects. Key enhancements include improved autonomous codebase navigation, reduced error rates in agent-driven workflows, and increased reliability in following intricate instructions. Sonnet 4 is optimized for practical everyday use, providing advanced reasoning capabilities while maintaining efficiency and responsiveness in diverse internal and external scenarios.\n\nRead more at the [blog post here](https://www.anthropic.com/news/claude-4)",
        "category": "llm",
        "provider": "anthropic",
        "accepts_plugins": true,
        "model_id": "anthropic/claude-sonnet-4",
        "context_length": 200000,
        "supported_parameters": [
            "include_reasoning",
            "max_tokens",
            "reasoning",
            "stop",
            "temperature",
            "tool_choice",
            "tools",
            "top_k",
            "top_p"
        ],
        "inputs": [
            {
                "name": "system_prompt",
                "display_name": "System Prompt",
                "type": "string or message",
                "description": "System prompt for the model",
                "default": null
            },
            {
                "name": "messages",
                "display_name": "Messages",
                "type": "array of messages or message or string",
                "description": "Array of chat messages",
                "required": true
            },
            {
                "name": "tools",
                "display_name": "Tools",
                "type": "tool",
                "description": "Array of tools to use",
                "default": null,
                "allow_multiple": true
            },
            {
                "name": "temperature",
                "display_name": "Temperature",
                "type": "number",
                "description": "Controls randomness (0-2)",
                "default": null
            },
            {
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "type": "number",
                "description": "Maximum tokens to generate",
                "default": null
            },
            {
                "name": "top_p",
                "display_name": "Top P",
                "type": "number",
                "description": "Controls diversity via nucleus sampling",
                "default": null
            },
            {
                "name": "include_reasoning",
                "display_name": "Include Reasoning",
                "type": "boolean",
                "description": "Include reasoning in response",
                "default": null
            },
            {
                "name": "reasoning",
                "display_name": "Reasoning",
                "type": "boolean",
                "description": "Internal reasoning mode",
                "default": null
            },
            {
                "name": "stop",
                "display_name": "Stop",
                "type": "string or array",
                "description": "Custom stop sequences",
                "default": null
            },
            {
                "name": "tool_choice",
                "display_name": "Tool Choice",
                "type": "string",
                "description": "Tool selection control",
                "default": null
            }
        ],
        "outputs": [
            {
                "name": "content",
                "display_name": "Content",
                "can_stream": true,
                "type": "string",
                "description": "The content portion of the generated response message."
            },
            {
                "name": "message",
                "display_name": "Message",
                "type": "message",
                "can_stream": true,
                "description": "The full generated response message."
            },
            {
                "name": "role",
                "display_name": "Role",
                "can_stream": true,
                "type": "string",
                "description": "Role of the response (usually 'assistant')"
            },
            {
                "name": "tool_calls",
                "display_name": "Tool Calls",
                "type": "array of tools",
                "description": "Tool calls made by the model"
            },
            {
                "name": "finish_reason",
                "display_name": "Finish Reason",
                "type": "string",
                "description": "Why the completion finished"
            },
            {
                "name": "usage",
                "display_name": "Token Usage",
                "type": "object",
                "description": "Token usage statistics"
            },
            {
                "name": "cost_total",
                "display_name": "Total Cost",
                "type": "number",
                "description": "Total cost for processing this request (USD)"
            },
            {
                "name": "cost_itemized",
                "display_name": "Itemized Cost",
                "type": "array",
                "description": "Detailed breakdown of costs"
            },
            {
                "name": "reasoning",
                "display_name": "Reasoning",
                "type": "string",
                "description": "The detailed reasoning chain from the model"
            },
            {
                "name": "refusal",
                "display_name": "Refusal",
                "type": "string",
                "description": "Model refusal response (if any)"
            }
        ],
        "pricing": {
            "reference": "https://openrouter.ai/models",
            "items": [
                {
                    "key": "input_cost_per_million",
                    "label": "Input Tokens (per 1M)",
                    "cost": 3,
                    "currency": "USD"
                },
                {
                    "key": "output_cost_per_million",
                    "label": "Output Tokens (per 1M)",
                    "cost": 15,
                    "currency": "USD"
                }
            ]
        },
        "id": "anthropic-claude-sonnet-4"
    },
    {
        "display_name": "Array Builder",
        "description": "Connect an array of items to build an list of unspecified order.",
        "icon": "list-ol",
        "category": "lists",
        "inputs": [
            {
                "name": "items",
                "display_name": "Items",
                "type": "any",
                "description": "The items to add to the array",
                "allow_multiple": true
            }
        ],
        "outputs": [
            {
                "name": "array",
                "display_name": "Array",
                "type": "array",
                "description": "The array of items"
            }
        ],
        "settings": [],
        "timeout": 3000,
        "retry_limit": 3,
        "id": "array-builder"
    },
    {
        "display_name": "Array Filter",
        "description": "Filters array elements based on a condition",
        "category": "lists",
        "inputs": [
            {
                "name": "array",
                "display_name": "Array",
                "description": "The array to filter",
                "type": "array",
                "required": true
            },
            {
                "name": "value",
                "display_name": "Value",
                "description": "Value to compare against",
                "type": "any",
                "required": false
            }
        ],
        "settings": [
            {
                "name": "condition",
                "display_name": "Condition",
                "description": "The comparison condition",
                "type": "string",
                "options": [
                    "equals",
                    "not_equals",
                    "greater_than",
                    "less_than",
                    "contains",
                    "not_contains",
                    "exists",
                    "not_exists"
                ],
                "default": "equals"
            },
            {
                "name": "case_sensitive",
                "display_name": "Case Sensitive",
                "description": "Whether string comparisons should be case sensitive",
                "type": "boolean",
                "default": true
            }
        ],
        "outputs": [
            {
                "name": "array",
                "display_name": "Array",
                "description": "The filtered array",
                "type": "array"
            }
        ],
        "id": "array-filter"
    },
    {
        "display_name": "Array Find",
        "description": "Finds elements in an array that match given criteria",
        "category": "lists",
        "inputs": [
            {
                "name": "array",
                "display_name": "Array",
                "description": "The array to search in",
                "type": "array",
                "required": true
            },
            {
                "name": "value",
                "display_name": "Value",
                "description": "Value to search for",
                "type": "any",
                "required": false
            }
        ],
        "settings": [
            {
                "name": "mode",
                "display_name": "Search Mode",
                "description": "How to search for matches",
                "type": "string",
                "options": [
                    "equals",
                    "contains",
                    "starts_with",
                    "ends_with",
                    "regex"
                ],
                "default": "equals"
            },
            {
                "name": "case_sensitive",
                "display_name": "Case Sensitive",
                "description": "Whether string comparisons should be case sensitive",
                "type": "boolean",
                "default": true
            },
            {
                "name": "property",
                "display_name": "Property",
                "description": "Property to check when searching objects",
                "type": "string",
                "required": false
            }
        ],
        "outputs": [
            {
                "name": "found",
                "display_name": "Found",
                "description": "Whether any matching element was found",
                "type": "boolean"
            },
            {
                "name": "item",
                "display_name": "Found Item",
                "description": "The first matching element (null if none found)",
                "type": "any"
            },
            {
                "name": "index",
                "display_name": "Found Index",
                "description": "Position of the first match (-1 if none found)",
                "type": "number"
            }
        ],
        "id": "array-find"
    },
    {
        "display_name": "Array Flatten",
        "description": "Flattens nested arrays into a single array",
        "category": "lists",
        "inputs": [
            {
                "name": "array",
                "display_name": "Array",
                "description": "The array to flatten",
                "type": "array",
                "required": true
            }
        ],
        "settings": [
            {
                "name": "depth",
                "display_name": "Depth",
                "description": "Maximum depth to flatten (-1 for infinite)",
                "type": "number",
                "default": -1
            },
            {
                "name": "skip_empty",
                "display_name": "Skip Empty",
                "description": "Whether to remove empty arrays",
                "type": "boolean",
                "default": false
            }
        ],
        "outputs": [
            {
                "name": "array",
                "display_name": "Flattened Array",
                "description": "The flattened array result",
                "type": "array"
            }
        ],
        "id": "array-flatten"
    },
    {
        "display_name": "Array Index Selector",
        "description": "Select a specific index from an array, safely handling cases where the index does not exist.",
        "icon": "list-ol",
        "category": "lists",
        "inputs": [
            {
                "name": "array",
                "display_name": "Array",
                "type": "array",
                "description": "The array to select the element from",
                "required": true,
                "allow_multiple": false
            },
            {
                "name": "index",
                "display_name": "Index",
                "type": "number",
                "description": "The index of the element to select",
                "allow_multiple": false,
                "default": 0
            }
        ],
        "outputs": [
            {
                "name": "element",
                "display_name": "Element",
                "type": "any",
                "description": "The element at the specified index, or undefined if the index does not exist"
            }
        ],
        "settings": [],
        "timeout": 3000,
        "retry_limit": 3,
        "id": "array-index-selector"
    },
    {
        "display_name": "Array Join",
        "description": "Combines array elements into a single string with a separator",
        "category": "lists",
        "inputs": [
            {
                "name": "array",
                "display_name": "Array",
                "description": "The array to join",
                "type": "array",
                "required": true
            },
            {
                "name": "separator",
                "display_name": "Separator",
                "description": "Text to insert between elements",
                "type": "string",
                "required": false
            }
        ],
        "outputs": [
            {
                "name": "text",
                "display_name": "Text",
                "description": "The joined string",
                "type": "string"
            }
        ],
        "id": "array-join"
    },
    {
        "display_name": "Array Length",
        "description": "Measures the length of an array.",
        "icon": "ruler",
        "category": "lists",
        "inputs": [
            {
                "name": "array",
                "display_name": "Array",
                "type": "array",
                "description": "The array to measure the length of",
                "required": true,
                "allow_multiple": false
            }
        ],
        "outputs": [
            {
                "name": "length",
                "display_name": "Length",
                "type": "number",
                "description": "The length of the array"
            }
        ],
        "settings": [],
        "timeout": 3000,
        "retry_limit": 3,
        "id": "array-length"
    },
    {
        "display_name": "Array Get Property",
        "description": "Extracts a specific property from each object in an array",
        "category": "lists",
        "inputs": [
            {
                "name": "array",
                "display_name": "Array",
                "description": "The array of objects to extract properties from",
                "type": "array",
                "required": true
            },
            {
                "name": "property",
                "display_name": "Property Name",
                "description": "The name of the property to extract from each object",
                "type": "string",
                "required": true
            }
        ],
        "outputs": [
            {
                "name": "array",
                "display_name": "Result Array",
                "description": "Array containing the extracted property values",
                "type": "array"
            }
        ],
        "id": "array-map"
    },
    {
        "display_name": "Array Reverse",
        "description": "Reverses the order of elements in an array",
        "category": "lists",
        "inputs": [
            {
                "name": "array",
                "display_name": "Array",
                "description": "The array to reverse",
                "type": "array",
                "required": true
            }
        ],
        "outputs": [
            {
                "name": "array",
                "display_name": "Reversed Array",
                "description": "The array in reverse order",
                "type": "array"
            },
            {
                "name": "indices",
                "display_name": "New Indices",
                "description": "Mapping of original to new indices",
                "type": "array"
            }
        ],
        "id": "array-reverse"
    },
    {
        "display_name": "Array Shuffle",
        "description": "Randomly reorders elements in an array",
        "category": "lists",
        "inputs": [
            {
                "name": "array",
                "display_name": "Array",
                "description": "The array to shuffle",
                "type": "array",
                "required": true
            }
        ],
        "settings": [
            {
                "name": "seed",
                "display_name": "Random Seed",
                "description": "Seed for reproducible shuffling (optional)",
                "type": "number",
                "required": false
            }
        ],
        "outputs": [
            {
                "name": "array",
                "display_name": "Shuffled Array",
                "description": "The randomly reordered array",
                "type": "array"
            },
            {
                "name": "indices",
                "display_name": "New Indices",
                "description": "Mapping of original to new indices",
                "type": "array"
            }
        ],
        "id": "array-shuffle"
    },
    {
        "display_name": "Array Slice",
        "description": "Extracts a portion of an array between start and end indices",
        "category": "lists",
        "inputs": [
            {
                "name": "array",
                "display_name": "Array",
                "description": "The array to slice",
                "type": "array",
                "required": true
            },
            {
                "name": "start",
                "display_name": "Start Index",
                "description": "Starting position (0-based)",
                "type": "number",
                "required": false
            },
            {
                "name": "end",
                "display_name": "End Index",
                "description": "Ending position (optional)",
                "type": "number",
                "required": false
            }
        ],
        "outputs": [
            {
                "name": "array",
                "display_name": "Array",
                "description": "The sliced array",
                "type": "array"
            }
        ],
        "id": "array-slice"
    },
    {
        "display_name": "Array Sort",
        "description": "Sorts array elements in ascending or descending order",
        "category": "lists",
        "inputs": [
            {
                "name": "array",
                "display_name": "Array",
                "description": "The array to sort",
                "type": "array",
                "required": true
            }
        ],
        "settings": [
            {
                "name": "order",
                "display_name": "Sort Order",
                "description": "Whether to sort ascending or descending",
                "type": "string",
                "options": [
                    "ascending",
                    "descending"
                ],
                "default": "ascending"
            },
            {
                "name": "type",
                "display_name": "Sort Type",
                "description": "How to compare elements",
                "type": "string",
                "options": [
                    "string",
                    "number",
                    "date"
                ],
                "default": "string"
            },
            {
                "name": "property",
                "display_name": "Sort Property",
                "description": "Property to sort by when elements are objects",
                "type": "string",
                "required": false
            },
            {
                "name": "case_sensitive",
                "display_name": "Case Sensitive",
                "description": "Whether string comparisons should be case sensitive",
                "type": "boolean",
                "default": true
            }
        ],
        "outputs": [
            {
                "name": "array",
                "display_name": "Array",
                "description": "The sorted array",
                "type": "array"
            }
        ],
        "id": "array-sort"
    },
    {
        "display_name": "Array Split",
        "description": "Splits an array into multiple chunks based on different criteria",
        "category": "lists",
        "inputs": [
            {
                "name": "array",
                "display_name": "Array",
                "description": "The array to split",
                "type": "array",
                "required": true
            }
        ],
        "settings": [
            {
                "name": "mode",
                "display_name": "Split Mode",
                "description": "How to split the array",
                "type": "string",
                "options": [
                    "size",
                    "count"
                ],
                "default": "size"
            },
            {
                "name": "size",
                "display_name": "Chunk Size",
                "description": "Size of each chunk (for size mode)",
                "type": "number",
                "default": 2
            },
            {
                "name": "count",
                "display_name": "Chunk Count",
                "description": "Number of chunks to create (for count mode)",
                "type": "number",
                "default": 2
            }
        ],
        "outputs": [
            {
                "name": "chunks",
                "display_name": "Chunks",
                "description": "Array of chunks",
                "type": "array"
            }
        ],
        "id": "array-split"
    },
    {
        "display_name": "Array Unique",
        "description": "Removes duplicate elements from an array",
        "category": "lists",
        "inputs": [
            {
                "name": "array",
                "display_name": "Array",
                "description": "The array to deduplicate",
                "type": "array",
                "required": true
            }
        ],
        "settings": [
            {
                "name": "mode",
                "display_name": "Compare Mode",
                "description": "How to compare elements for uniqueness",
                "type": "string",
                "options": [
                    "value",
                    "property",
                    "json"
                ],
                "default": "value"
            },
            {
                "name": "property",
                "display_name": "Property",
                "description": "Property to compare when mode is 'property'",
                "type": "string",
                "required": false
            },
            {
                "name": "case_sensitive",
                "display_name": "Case Sensitive",
                "description": "Whether string comparisons should be case sensitive",
                "type": "boolean",
                "default": true
            }
        ],
        "outputs": [
            {
                "name": "array",
                "display_name": "Unique Array",
                "description": "Array with duplicates removed",
                "type": "array"
            },
            {
                "name": "count",
                "display_name": "Unique Count",
                "description": "Number of unique elements",
                "type": "number"
            },
            {
                "name": "duplicates",
                "display_name": "Duplicates",
                "description": "Array of removed duplicate elements",
                "type": "array"
            },
            {
                "name": "indices",
                "display_name": "Unique Indices",
                "description": "Original indices of kept elements",
                "type": "array"
            }
        ],
        "id": "array-unique"
    },
    {
        "display_name": "Boolean Switch",
        "description": "A simple switch node that outputs true or false",
        "icon": "toggle-on",
        "category": "logic",
        "custom_render_height": 42,
        "is_constant": true,
        "inputs": [
            {
                "name": "value",
                "display_name": "Value",
                "type": "boolean",
                "description": "Optional value to override the default value.",
                "required": false
            }
        ],
        "outputs": [
            {
                "name": "value",
                "display_name": "Value",
                "type": "boolean",
                "description": "The value of the switch."
            }
        ],
        "settings": [
            {
                "name": "value",
                "display_name": "Value",
                "type": "boolean",
                "description": "The initial value of the switch.",
                "default": false
            }
        ],
        "timeout": 3000,
        "retry_limit": 3,
        "id": "boolean"
    },
    {
        "display_name": "Boolean Inverter",
        "description": "Inverts the input boolean value",
        "icon": "toggle-off",
        "category": "logic",
        "is_constant": false,
        "needs_key_from": [],
        "inputs": [
            {
                "name": "input",
                "display_name": "Input",
                "type": "boolean",
                "description": "The boolean value to be inverted",
                "required": true,
                "allow_multiple": false
            }
        ],
        "outputs": [
            {
                "name": "output",
                "display_name": "Output",
                "type": "boolean",
                "description": "The inverted boolean value"
            },
            {
                "name": "plugin_config",
                "display_name": "Plugin Config",
                "type": "plugin",
                "description": "Configuration for plugins",
                "hidden": true
            }
        ],
        "settings": [],
        "timeout": 3000,
        "retry_limit": 3,
        "id": "boolean-inverter"
    },
    {
        "display_name": "Ceil",
        "description": "Rounds up to nearest integer",
        "category": "math",
        "inputs": [
            {
                "name": "number",
                "display_name": "Number",
                "description": "Number to ceil",
                "type": "number",
                "required": true
            }
        ],
        "outputs": [
            {
                "name": "result",
                "display_name": "Result",
                "description": "Ceiled number",
                "type": "number"
            }
        ],
        "id": "ceil"
    },
    {
        "display_name": "Combine Document Chunks",
        "description": "Retrieve all chunks for a document and combine them into a single markdown content string",
        "category": "knowledge",
        "is_plugin": true,
        "inputs": [
            {
                "name": "document_id",
                "display_name": "Document ID",
                "type": "string",
                "description": "The ID of the document to combine chunks for",
                "required": true
            },
            {
                "name": "include_metadata",
                "display_name": "Include Metadata",
                "type": "boolean",
                "description": "Whether to include chunk metadata in the output",
                "default": false
            },
            {
                "name": "separator",
                "display_name": "Separator",
                "type": "string",
                "description": "String to use as separator between chunks",
                "default": "\n\n---\n\n"
            }
        ],
        "outputs": [
            {
                "name": "content",
                "display_name": "Content",
                "type": "string",
                "description": "The combined markdown content of all chunks"
            },
            {
                "name": "chunk_count",
                "display_name": "Chunk Count",
                "type": "number",
                "description": "Number of chunks that were combined"
            },
            {
                "name": "document_info",
                "display_name": "Document Info",
                "type": "object",
                "description": "Information about the document (name, type, etc.)"
            },
            {
                "name": "error",
                "display_name": "Error",
                "type": "string",
                "description": "Error message if the operation failed"
            }
        ],
        "settings": [],
        "needs_key_from": [
            "openai"
        ],
        "id": "combine-document-chunks"
    },
    {
        "display_name": "CSV Parser",
        "description": "Parses a CSV string into an array of objects or arrays",
        "icon": "table",
        "category": "data",
        "inputs": [
            {
                "name": "csv",
                "display_name": "CSV String",
                "type": "string",
                "description": "The CSV string to parse",
                "required": true
            }
        ],
        "outputs": [
            {
                "name": "data",
                "display_name": "Data",
                "type": "array",
                "description": "The parsed CSV data"
            },
            {
                "name": "headers",
                "display_name": "Headers",
                "type": "array",
                "description": "The column headers (if present)"
            },
            {
                "name": "error",
                "display_name": "Error",
                "type": "string",
                "description": "Error message if parsing failed"
            },
            {
                "name": "success",
                "display_name": "Success",
                "type": "boolean",
                "description": "Whether parsing was successful"
            }
        ],
        "settings": [
            {
                "name": "delimiter",
                "display_name": "Delimiter",
                "type": "string",
                "description": "Character used to separate values",
                "default": ","
            },
            {
                "name": "has_headers",
                "display_name": "Has Headers",
                "type": "boolean",
                "description": "Whether the first row contains column headers",
                "default": true
            },
            {
                "name": "trim_values",
                "display_name": "Trim Values",
                "type": "boolean",
                "description": "Whether to trim whitespace from values",
                "default": true
            },
            {
                "name": "skip_empty_lines",
                "display_name": "Skip Empty Lines",
                "type": "boolean",
                "description": "Whether to skip empty lines",
                "default": true
            }
        ],
        "timeout": 5000,
        "retry_limit": 3,
        "id": "csv-parser"
    },
    {
        "display_name": "CSV Stringifier",
        "description": "Converts an array of objects or arrays into a CSV string",
        "icon": "table",
        "category": "data",
        "inputs": [
            {
                "name": "data",
                "display_name": "Data",
                "type": "array",
                "description": "The array of objects or arrays to convert to CSV",
                "required": true
            },
            {
                "name": "headers",
                "display_name": "Headers",
                "type": "array",
                "description": "Optional column headers (if not provided, will be extracted from data)",
                "required": false
            }
        ],
        "outputs": [
            {
                "name": "csv",
                "display_name": "CSV String",
                "type": "string",
                "description": "The generated CSV string"
            },
            {
                "name": "error",
                "display_name": "Error",
                "type": "string",
                "description": "Error message if conversion failed"
            },
            {
                "name": "success",
                "display_name": "Success",
                "type": "boolean",
                "description": "Whether conversion was successful"
            }
        ],
        "settings": [
            {
                "name": "delimiter",
                "display_name": "Delimiter",
                "type": "string",
                "description": "Character used to separate values",
                "default": ","
            },
            {
                "name": "include_headers",
                "display_name": "Include Headers",
                "type": "boolean",
                "description": "Whether to include column headers in the output",
                "default": true
            },
            {
                "name": "quote_strings",
                "display_name": "Quote Strings",
                "type": "boolean",
                "description": "Whether to quote string values",
                "default": true
            },
            {
                "name": "newline",
                "display_name": "Newline Character",
                "type": "string",
                "description": "Character(s) used for line breaks",
                "default": "\n",
                "options": [
                    "\n",
                    "\r\n"
                ]
            }
        ],
        "timeout": 5000,
        "retry_limit": 3,
        "id": "csv-stringifier"
    },
    {
        "display_name": "Date Formatter",
        "description": "Formats a date or timestamp into a string using various formats",
        "icon": "calendar",
        "category": "date",
        "inputs": [
            {
                "name": "date",
                "display_name": "Date",
                "type": "any",
                "description": "The date to format (string, timestamp, or Date object)",
                "required": true
            }
        ],
        "outputs": [
            {
                "name": "formatted",
                "display_name": "Formatted Date",
                "type": "string",
                "description": "The formatted date string"
            },
            {
                "name": "timestamp",
                "display_name": "Timestamp",
                "type": "number",
                "description": "The date as a Unix timestamp (milliseconds)"
            },
            {
                "name": "iso",
                "display_name": "ISO String",
                "type": "string",
                "description": "The date in ISO format"
            },
            {
                "name": "error",
                "display_name": "Error",
                "type": "string",
                "description": "Error message if formatting failed"
            },
            {
                "name": "success",
                "display_name": "Success",
                "type": "boolean",
                "description": "Whether formatting was successful"
            }
        ],
        "settings": [
            {
                "name": "format",
                "display_name": "Format",
                "type": "string",
                "description": "The format string (e.g., 'YYYY-MM-DD HH:mm:ss')",
                "default": "YYYY-MM-DD"
            },
            {
                "name": "timezone",
                "display_name": "Timezone",
                "type": "string",
                "description": "The timezone to use (e.g., 'UTC', 'America/New_York')",
                "default": "UTC"
            }
        ],
        "timeout": 3000,
        "retry_limit": 3,
        "id": "date-formatter"
    },
    {
        "display_name": "DeepSeek: DeepSeek V3",
        "description": "DeepSeek-V3 is the latest model from the DeepSeek team, building upon the instruction following and coding abilities of the previous versions. Pre-trained on nearly 15 trillion tokens, the reported evaluations reveal that the model outperforms other open-source models and rivals leading closed-source models.\n\nFor model details, please visit [the DeepSeek-V3 repo](https://github.com/deepseek-ai/DeepSeek-V3) for more information, or see the [launch announcement](https://api-docs.deepseek.com/news/news1226).",
        "category": "llm",
        "provider": "deepseek",
        "accepts_plugins": true,
        "model_id": "deepseek/deepseek-chat",
        "context_length": 163840,
        "supported_parameters": [
            "frequency_penalty",
            "logit_bias",
            "logprobs",
            "max_tokens",
            "min_p",
            "presence_penalty",
            "repetition_penalty",
            "response_format",
            "seed",
            "stop",
            "structured_outputs",
            "temperature",
            "tool_choice",
            "tools",
            "top_k",
            "top_logprobs",
            "top_p"
        ],
        "inputs": [
            {
                "name": "system_prompt",
                "display_name": "System Prompt",
                "type": "string or message",
                "description": "System prompt for the model",
                "default": null
            },
            {
                "name": "messages",
                "display_name": "Messages",
                "type": "array of messages or message or string",
                "description": "Array of chat messages",
                "required": true
            },
            {
                "name": "tools",
                "display_name": "Tools",
                "type": "tool",
                "description": "Array of tools to use",
                "default": null,
                "allow_multiple": true
            },
            {
                "name": "temperature",
                "display_name": "Temperature",
                "type": "number",
                "description": "Controls randomness (0-2)",
                "default": null
            },
            {
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "type": "number",
                "description": "Maximum tokens to generate",
                "default": null
            },
            {
                "name": "top_p",
                "display_name": "Top P",
                "type": "number",
                "description": "Controls diversity via nucleus sampling",
                "default": null
            },
            {
                "name": "frequency_penalty",
                "display_name": "Frequency Penalty",
                "type": "number",
                "description": "Reduces repetition (-2 to 2)",
                "default": null
            },
            {
                "name": "presence_penalty",
                "display_name": "Presence Penalty",
                "type": "number",
                "description": "Encourages new topics (-2 to 2)",
                "default": null
            },
            {
                "name": "response_format",
                "display_name": "Response Format",
                "type": "string or object",
                "description": "Output format specification",
                "default": null
            },
            {
                "name": "seed",
                "display_name": "Seed",
                "type": "number",
                "description": "Deterministic outputs",
                "default": null
            },
            {
                "name": "stop",
                "display_name": "Stop",
                "type": "string or array",
                "description": "Custom stop sequences",
                "default": null
            },
            {
                "name": "structured_outputs",
                "display_name": "Structured Outputs",
                "type": "string or object",
                "description": "JSON schema enforcement",
                "default": null
            },
            {
                "name": "tool_choice",
                "display_name": "Tool Choice",
                "type": "string",
                "description": "Tool selection control",
                "default": null
            }
        ],
        "outputs": [
            {
                "name": "content",
                "display_name": "Content",
                "can_stream": true,
                "type": "string",
                "description": "The content portion of the generated response message."
            },
            {
                "name": "message",
                "display_name": "Message",
                "type": "message",
                "can_stream": true,
                "description": "The full generated response message."
            },
            {
                "name": "role",
                "display_name": "Role",
                "can_stream": true,
                "type": "string",
                "description": "Role of the response (usually 'assistant')"
            },
            {
                "name": "tool_calls",
                "display_name": "Tool Calls",
                "type": "array of tools",
                "description": "Tool calls made by the model"
            },
            {
                "name": "finish_reason",
                "display_name": "Finish Reason",
                "type": "string",
                "description": "Why the completion finished"
            },
            {
                "name": "usage",
                "display_name": "Token Usage",
                "type": "object",
                "description": "Token usage statistics"
            },
            {
                "name": "cost_total",
                "display_name": "Total Cost",
                "type": "number",
                "description": "Total cost for processing this request (USD)"
            },
            {
                "name": "cost_itemized",
                "display_name": "Itemized Cost",
                "type": "array",
                "description": "Detailed breakdown of costs"
            },
            {
                "name": "logprobs",
                "display_name": "Log Probabilities",
                "type": "object",
                "description": "Token probabilities and logprobs from the model"
            }
        ],
        "pricing": {
            "reference": "https://openrouter.ai/models",
            "items": [
                {
                    "key": "input_cost_per_million",
                    "label": "Input Tokens (per 1M)",
                    "cost": 0.17992692,
                    "currency": "USD"
                },
                {
                    "key": "output_cost_per_million",
                    "label": "Output Tokens (per 1M)",
                    "cost": 0.7200576000000001,
                    "currency": "USD"
                }
            ]
        },
        "id": "deepseek-deepseek-chat"
    },
    {
        "display_name": "DeepSeek: DeepSeek V3 0324",
        "description": "DeepSeek V3, a 685B-parameter, mixture-of-experts model, is the latest iteration of the flagship chat model family from the DeepSeek team.\n\nIt succeeds the [DeepSeek V3](/deepseek/deepseek-chat-v3) model and performs really well on a variety of tasks.",
        "category": "llm",
        "provider": "deepseek",
        "accepts_plugins": true,
        "model_id": "deepseek/deepseek-chat-v3-0324",
        "context_length": 163840,
        "supported_parameters": [
            "frequency_penalty",
            "logit_bias",
            "logprobs",
            "max_tokens",
            "min_p",
            "presence_penalty",
            "repetition_penalty",
            "response_format",
            "seed",
            "stop",
            "structured_outputs",
            "temperature",
            "tool_choice",
            "tools",
            "top_k",
            "top_logprobs",
            "top_p"
        ],
        "inputs": [
            {
                "name": "system_prompt",
                "display_name": "System Prompt",
                "type": "string or message",
                "description": "System prompt for the model",
                "default": null
            },
            {
                "name": "messages",
                "display_name": "Messages",
                "type": "array of messages or message or string",
                "description": "Array of chat messages",
                "required": true
            },
            {
                "name": "tools",
                "display_name": "Tools",
                "type": "tool",
                "description": "Array of tools to use",
                "default": null,
                "allow_multiple": true
            },
            {
                "name": "temperature",
                "display_name": "Temperature",
                "type": "number",
                "description": "Controls randomness (0-2)",
                "default": null
            },
            {
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "type": "number",
                "description": "Maximum tokens to generate",
                "default": null
            },
            {
                "name": "top_p",
                "display_name": "Top P",
                "type": "number",
                "description": "Controls diversity via nucleus sampling",
                "default": null
            },
            {
                "name": "frequency_penalty",
                "display_name": "Frequency Penalty",
                "type": "number",
                "description": "Reduces repetition (-2 to 2)",
                "default": null
            },
            {
                "name": "presence_penalty",
                "display_name": "Presence Penalty",
                "type": "number",
                "description": "Encourages new topics (-2 to 2)",
                "default": null
            },
            {
                "name": "response_format",
                "display_name": "Response Format",
                "type": "string or object",
                "description": "Output format specification",
                "default": null
            },
            {
                "name": "seed",
                "display_name": "Seed",
                "type": "number",
                "description": "Deterministic outputs",
                "default": null
            },
            {
                "name": "stop",
                "display_name": "Stop",
                "type": "string or array",
                "description": "Custom stop sequences",
                "default": null
            },
            {
                "name": "structured_outputs",
                "display_name": "Structured Outputs",
                "type": "string or object",
                "description": "JSON schema enforcement",
                "default": null
            },
            {
                "name": "tool_choice",
                "display_name": "Tool Choice",
                "type": "string",
                "description": "Tool selection control",
                "default": null
            }
        ],
        "outputs": [
            {
                "name": "content",
                "display_name": "Content",
                "can_stream": true,
                "type": "string",
                "description": "The content portion of the generated response message."
            },
            {
                "name": "message",
                "display_name": "Message",
                "type": "message",
                "can_stream": true,
                "description": "The full generated response message."
            },
            {
                "name": "role",
                "display_name": "Role",
                "can_stream": true,
                "type": "string",
                "description": "Role of the response (usually 'assistant')"
            },
            {
                "name": "tool_calls",
                "display_name": "Tool Calls",
                "type": "array of tools",
                "description": "Tool calls made by the model"
            },
            {
                "name": "finish_reason",
                "display_name": "Finish Reason",
                "type": "string",
                "description": "Why the completion finished"
            },
            {
                "name": "usage",
                "display_name": "Token Usage",
                "type": "object",
                "description": "Token usage statistics"
            },
            {
                "name": "cost_total",
                "display_name": "Total Cost",
                "type": "number",
                "description": "Total cost for processing this request (USD)"
            },
            {
                "name": "cost_itemized",
                "display_name": "Itemized Cost",
                "type": "array",
                "description": "Detailed breakdown of costs"
            },
            {
                "name": "logprobs",
                "display_name": "Log Probabilities",
                "type": "object",
                "description": "Token probabilities and logprobs from the model"
            }
        ],
        "pricing": {
            "reference": "https://openrouter.ai/models",
            "items": [
                {
                    "key": "input_cost_per_million",
                    "label": "Input Tokens (per 1M)",
                    "cost": 0.17992692,
                    "currency": "USD"
                },
                {
                    "key": "output_cost_per_million",
                    "label": "Output Tokens (per 1M)",
                    "cost": 0.7200576000000001,
                    "currency": "USD"
                }
            ]
        },
        "id": "deepseek-deepseek-chat-v3-0324"
    },
    {
        "display_name": "DeepSeek: DeepSeek V3 0324 (free)",
        "description": "DeepSeek V3, a 685B-parameter, mixture-of-experts model, is the latest iteration of the flagship chat model family from the DeepSeek team.\n\nIt succeeds the [DeepSeek V3](/deepseek/deepseek-chat-v3) model and performs really well on a variety of tasks.",
        "category": "llm",
        "provider": "deepseek",
        "accepts_plugins": true,
        "model_id": "deepseek/deepseek-chat-v3-0324:free",
        "context_length": 163840,
        "supported_parameters": [
            "frequency_penalty",
            "logit_bias",
            "logprobs",
            "max_tokens",
            "min_p",
            "presence_penalty",
            "repetition_penalty",
            "seed",
            "stop",
            "temperature",
            "tool_choice",
            "tools",
            "top_k",
            "top_logprobs",
            "top_p"
        ],
        "inputs": [
            {
                "name": "system_prompt",
                "display_name": "System Prompt",
                "type": "string or message",
                "description": "System prompt for the model",
                "default": null
            },
            {
                "name": "messages",
                "display_name": "Messages",
                "type": "array of messages or message or string",
                "description": "Array of chat messages",
                "required": true
            },
            {
                "name": "tools",
                "display_name": "Tools",
                "type": "tool",
                "description": "Array of tools to use",
                "default": null,
                "allow_multiple": true
            },
            {
                "name": "temperature",
                "display_name": "Temperature",
                "type": "number",
                "description": "Controls randomness (0-2)",
                "default": null
            },
            {
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "type": "number",
                "description": "Maximum tokens to generate",
                "default": null
            },
            {
                "name": "top_p",
                "display_name": "Top P",
                "type": "number",
                "description": "Controls diversity via nucleus sampling",
                "default": null
            },
            {
                "name": "frequency_penalty",
                "display_name": "Frequency Penalty",
                "type": "number",
                "description": "Reduces repetition (-2 to 2)",
                "default": null
            },
            {
                "name": "presence_penalty",
                "display_name": "Presence Penalty",
                "type": "number",
                "description": "Encourages new topics (-2 to 2)",
                "default": null
            },
            {
                "name": "seed",
                "display_name": "Seed",
                "type": "number",
                "description": "Deterministic outputs",
                "default": null
            },
            {
                "name": "stop",
                "display_name": "Stop",
                "type": "string or array",
                "description": "Custom stop sequences",
                "default": null
            },
            {
                "name": "tool_choice",
                "display_name": "Tool Choice",
                "type": "string",
                "description": "Tool selection control",
                "default": null
            }
        ],
        "outputs": [
            {
                "name": "content",
                "display_name": "Content",
                "can_stream": true,
                "type": "string",
                "description": "The content portion of the generated response message."
            },
            {
                "name": "message",
                "display_name": "Message",
                "type": "message",
                "can_stream": true,
                "description": "The full generated response message."
            },
            {
                "name": "role",
                "display_name": "Role",
                "can_stream": true,
                "type": "string",
                "description": "Role of the response (usually 'assistant')"
            },
            {
                "name": "tool_calls",
                "display_name": "Tool Calls",
                "type": "array of tools",
                "description": "Tool calls made by the model"
            },
            {
                "name": "finish_reason",
                "display_name": "Finish Reason",
                "type": "string",
                "description": "Why the completion finished"
            },
            {
                "name": "usage",
                "display_name": "Token Usage",
                "type": "object",
                "description": "Token usage statistics"
            },
            {
                "name": "cost_total",
                "display_name": "Total Cost",
                "type": "number",
                "description": "Total cost for processing this request (USD)"
            },
            {
                "name": "cost_itemized",
                "display_name": "Itemized Cost",
                "type": "array",
                "description": "Detailed breakdown of costs"
            },
            {
                "name": "logprobs",
                "display_name": "Log Probabilities",
                "type": "object",
                "description": "Token probabilities and logprobs from the model"
            }
        ],
        "pricing": {
            "reference": "https://openrouter.ai/models",
            "items": [
                {
                    "key": "input_cost_per_million",
                    "label": "Input Tokens (per 1M)",
                    "cost": 0,
                    "currency": "USD"
                },
                {
                    "key": "output_cost_per_million",
                    "label": "Output Tokens (per 1M)",
                    "cost": 0,
                    "currency": "USD"
                }
            ]
        },
        "id": "deepseek-deepseek-chat-v3-0324-free"
    },
    {
        "display_name": "DeepSeek: DeepSeek Prover V2",
        "description": "DeepSeek Prover V2 is a 671B parameter model, speculated to be geared towards logic and mathematics. Likely an upgrade from [DeepSeek-Prover-V1.5](https://huggingface.co/deepseek-ai/DeepSeek-Prover-V1.5-RL) Not much is known about the model yet, as DeepSeek released it on Hugging Face without an announcement or description.",
        "category": "llm",
        "provider": "deepseek",
        "accepts_plugins": false,
        "model_id": "deepseek/deepseek-prover-v2",
        "context_length": 163840,
        "supported_parameters": [
            "frequency_penalty",
            "max_tokens",
            "min_p",
            "presence_penalty",
            "repetition_penalty",
            "response_format",
            "seed",
            "stop",
            "temperature",
            "top_k",
            "top_p"
        ],
        "inputs": [
            {
                "name": "prompt",
                "display_name": "Prompt",
                "type": "string",
                "description": "Text prompt for completion",
                "required": true
            },
            {
                "name": "temperature",
                "display_name": "Temperature",
                "type": "number",
                "description": "Controls randomness (0-2)",
                "default": null
            },
            {
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "type": "number",
                "description": "Maximum tokens to generate",
                "default": null
            },
            {
                "name": "top_p",
                "display_name": "Top P",
                "type": "number",
                "description": "Controls diversity via nucleus sampling",
                "default": null
            },
            {
                "name": "frequency_penalty",
                "display_name": "Frequency Penalty",
                "type": "number",
                "description": "Reduces repetition (-2 to 2)",
                "default": null
            },
            {
                "name": "presence_penalty",
                "display_name": "Presence Penalty",
                "type": "number",
                "description": "Encourages new topics (-2 to 2)",
                "default": null
            },
            {
                "name": "response_format",
                "display_name": "Response Format",
                "type": "string or object",
                "description": "Output format specification",
                "default": null
            },
            {
                "name": "seed",
                "display_name": "Seed",
                "type": "number",
                "description": "Deterministic outputs",
                "default": null
            },
            {
                "name": "stop",
                "display_name": "Stop",
                "type": "string or array",
                "description": "Custom stop sequences",
                "default": null
            }
        ],
        "outputs": [
            {
                "name": "content",
                "display_name": "Content",
                "can_stream": true,
                "type": "string",
                "description": "The generated completion text"
            },
            {
                "name": "finish_reason",
                "display_name": "Finish Reason",
                "type": "string",
                "description": "Why the completion finished"
            },
            {
                "name": "usage",
                "display_name": "Token Usage",
                "type": "object",
                "description": "Token usage statistics"
            },
            {
                "name": "cost_total",
                "display_name": "Total Cost",
                "type": "number",
                "description": "Total cost for processing this request (USD)"
            },
            {
                "name": "cost_itemized",
                "display_name": "Itemized Cost",
                "type": "array",
                "description": "Detailed breakdown of costs"
            }
        ],
        "pricing": {
            "reference": "https://openrouter.ai/models",
            "items": [
                {
                    "key": "input_cost_per_million",
                    "label": "Input Tokens (per 1M)",
                    "cost": 0.5,
                    "currency": "USD"
                },
                {
                    "key": "output_cost_per_million",
                    "label": "Output Tokens (per 1M)",
                    "cost": 2.1799999999999997,
                    "currency": "USD"
                }
            ]
        },
        "id": "deepseek-deepseek-prover-v2"
    },
    {
        "display_name": "DeepSeek: R1",
        "description": "DeepSeek R1 is here: Performance on par with [OpenAI o1](/openai/o1), but open-sourced and with fully open reasoning tokens. It's 671B parameters in size, with 37B active in an inference pass.\n\nFully open-source model & [technical report](https://api-docs.deepseek.com/news/news250120).\n\nMIT licensed: Distill & commercialize freely!",
        "category": "llm",
        "provider": "deepseek",
        "accepts_plugins": true,
        "model_id": "deepseek/deepseek-r1",
        "context_length": 163840,
        "supported_parameters": [
            "frequency_penalty",
            "include_reasoning",
            "logit_bias",
            "logprobs",
            "max_tokens",
            "min_p",
            "presence_penalty",
            "reasoning",
            "repetition_penalty",
            "response_format",
            "seed",
            "stop",
            "structured_outputs",
            "temperature",
            "tool_choice",
            "tools",
            "top_k",
            "top_logprobs",
            "top_p"
        ],
        "inputs": [
            {
                "name": "system_prompt",
                "display_name": "System Prompt",
                "type": "string or message",
                "description": "System prompt for the model",
                "default": null
            },
            {
                "name": "messages",
                "display_name": "Messages",
                "type": "array of messages or message or string",
                "description": "Array of chat messages",
                "required": true
            },
            {
                "name": "tools",
                "display_name": "Tools",
                "type": "tool",
                "description": "Array of tools to use",
                "default": null,
                "allow_multiple": true
            },
            {
                "name": "temperature",
                "display_name": "Temperature",
                "type": "number",
                "description": "Controls randomness (0-2)",
                "default": null
            },
            {
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "type": "number",
                "description": "Maximum tokens to generate",
                "default": null
            },
            {
                "name": "top_p",
                "display_name": "Top P",
                "type": "number",
                "description": "Controls diversity via nucleus sampling",
                "default": null
            },
            {
                "name": "frequency_penalty",
                "display_name": "Frequency Penalty",
                "type": "number",
                "description": "Reduces repetition (-2 to 2)",
                "default": null
            },
            {
                "name": "include_reasoning",
                "display_name": "Include Reasoning",
                "type": "boolean",
                "description": "Include reasoning in response",
                "default": null
            },
            {
                "name": "presence_penalty",
                "display_name": "Presence Penalty",
                "type": "number",
                "description": "Encourages new topics (-2 to 2)",
                "default": null
            },
            {
                "name": "reasoning",
                "display_name": "Reasoning",
                "type": "boolean",
                "description": "Internal reasoning mode",
                "default": null
            },
            {
                "name": "response_format",
                "display_name": "Response Format",
                "type": "string or object",
                "description": "Output format specification",
                "default": null
            },
            {
                "name": "seed",
                "display_name": "Seed",
                "type": "number",
                "description": "Deterministic outputs",
                "default": null
            },
            {
                "name": "stop",
                "display_name": "Stop",
                "type": "string or array",
                "description": "Custom stop sequences",
                "default": null
            },
            {
                "name": "structured_outputs",
                "display_name": "Structured Outputs",
                "type": "string or object",
                "description": "JSON schema enforcement",
                "default": null
            },
            {
                "name": "tool_choice",
                "display_name": "Tool Choice",
                "type": "string",
                "description": "Tool selection control",
                "default": null
            }
        ],
        "outputs": [
            {
                "name": "content",
                "display_name": "Content",
                "can_stream": true,
                "type": "string",
                "description": "The content portion of the generated response message."
            },
            {
                "name": "message",
                "display_name": "Message",
                "type": "message",
                "can_stream": true,
                "description": "The full generated response message."
            },
            {
                "name": "role",
                "display_name": "Role",
                "can_stream": true,
                "type": "string",
                "description": "Role of the response (usually 'assistant')"
            },
            {
                "name": "tool_calls",
                "display_name": "Tool Calls",
                "type": "array of tools",
                "description": "Tool calls made by the model"
            },
            {
                "name": "finish_reason",
                "display_name": "Finish Reason",
                "type": "string",
                "description": "Why the completion finished"
            },
            {
                "name": "usage",
                "display_name": "Token Usage",
                "type": "object",
                "description": "Token usage statistics"
            },
            {
                "name": "cost_total",
                "display_name": "Total Cost",
                "type": "number",
                "description": "Total cost for processing this request (USD)"
            },
            {
                "name": "cost_itemized",
                "display_name": "Itemized Cost",
                "type": "array",
                "description": "Detailed breakdown of costs"
            },
            {
                "name": "logprobs",
                "display_name": "Log Probabilities",
                "type": "object",
                "description": "Token probabilities and logprobs from the model"
            },
            {
                "name": "reasoning",
                "display_name": "Reasoning",
                "type": "string",
                "description": "The detailed reasoning chain from the model"
            },
            {
                "name": "refusal",
                "display_name": "Refusal",
                "type": "string",
                "description": "Model refusal response (if any)"
            }
        ],
        "pricing": {
            "reference": "https://openrouter.ai/models",
            "items": [
                {
                    "key": "input_cost_per_million",
                    "label": "Input Tokens (per 1M)",
                    "cost": 0.39999999999999997,
                    "currency": "USD"
                },
                {
                    "key": "output_cost_per_million",
                    "label": "Output Tokens (per 1M)",
                    "cost": 2,
                    "currency": "USD"
                }
            ]
        },
        "id": "deepseek-deepseek-r1"
    },
    {
        "display_name": "DeepSeek: R1 0528",
        "description": "May 28th update to the [original DeepSeek R1](/deepseek/deepseek-r1) Performance on par with [OpenAI o1](/openai/o1), but open-sourced and with fully open reasoning tokens. It's 671B parameters in size, with 37B active in an inference pass.\n\nFully open-source model.",
        "category": "llm",
        "provider": "deepseek",
        "accepts_plugins": true,
        "model_id": "deepseek/deepseek-r1-0528",
        "context_length": 163840,
        "supported_parameters": [
            "frequency_penalty",
            "include_reasoning",
            "logit_bias",
            "logprobs",
            "max_tokens",
            "min_p",
            "presence_penalty",
            "reasoning",
            "repetition_penalty",
            "response_format",
            "seed",
            "stop",
            "structured_outputs",
            "temperature",
            "tool_choice",
            "tools",
            "top_k",
            "top_logprobs",
            "top_p"
        ],
        "inputs": [
            {
                "name": "system_prompt",
                "display_name": "System Prompt",
                "type": "string or message",
                "description": "System prompt for the model",
                "default": null
            },
            {
                "name": "messages",
                "display_name": "Messages",
                "type": "array of messages or message or string",
                "description": "Array of chat messages",
                "required": true
            },
            {
                "name": "tools",
                "display_name": "Tools",
                "type": "tool",
                "description": "Array of tools to use",
                "default": null,
                "allow_multiple": true
            },
            {
                "name": "temperature",
                "display_name": "Temperature",
                "type": "number",
                "description": "Controls randomness (0-2)",
                "default": null
            },
            {
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "type": "number",
                "description": "Maximum tokens to generate",
                "default": null
            },
            {
                "name": "top_p",
                "display_name": "Top P",
                "type": "number",
                "description": "Controls diversity via nucleus sampling",
                "default": null
            },
            {
                "name": "frequency_penalty",
                "display_name": "Frequency Penalty",
                "type": "number",
                "description": "Reduces repetition (-2 to 2)",
                "default": null
            },
            {
                "name": "include_reasoning",
                "display_name": "Include Reasoning",
                "type": "boolean",
                "description": "Include reasoning in response",
                "default": null
            },
            {
                "name": "presence_penalty",
                "display_name": "Presence Penalty",
                "type": "number",
                "description": "Encourages new topics (-2 to 2)",
                "default": null
            },
            {
                "name": "reasoning",
                "display_name": "Reasoning",
                "type": "boolean",
                "description": "Internal reasoning mode",
                "default": null
            },
            {
                "name": "response_format",
                "display_name": "Response Format",
                "type": "string or object",
                "description": "Output format specification",
                "default": null
            },
            {
                "name": "seed",
                "display_name": "Seed",
                "type": "number",
                "description": "Deterministic outputs",
                "default": null
            },
            {
                "name": "stop",
                "display_name": "Stop",
                "type": "string or array",
                "description": "Custom stop sequences",
                "default": null
            },
            {
                "name": "structured_outputs",
                "display_name": "Structured Outputs",
                "type": "string or object",
                "description": "JSON schema enforcement",
                "default": null
            },
            {
                "name": "tool_choice",
                "display_name": "Tool Choice",
                "type": "string",
                "description": "Tool selection control",
                "default": null
            }
        ],
        "outputs": [
            {
                "name": "content",
                "display_name": "Content",
                "can_stream": true,
                "type": "string",
                "description": "The content portion of the generated response message."
            },
            {
                "name": "message",
                "display_name": "Message",
                "type": "message",
                "can_stream": true,
                "description": "The full generated response message."
            },
            {
                "name": "role",
                "display_name": "Role",
                "can_stream": true,
                "type": "string",
                "description": "Role of the response (usually 'assistant')"
            },
            {
                "name": "tool_calls",
                "display_name": "Tool Calls",
                "type": "array of tools",
                "description": "Tool calls made by the model"
            },
            {
                "name": "finish_reason",
                "display_name": "Finish Reason",
                "type": "string",
                "description": "Why the completion finished"
            },
            {
                "name": "usage",
                "display_name": "Token Usage",
                "type": "object",
                "description": "Token usage statistics"
            },
            {
                "name": "cost_total",
                "display_name": "Total Cost",
                "type": "number",
                "description": "Total cost for processing this request (USD)"
            },
            {
                "name": "cost_itemized",
                "display_name": "Itemized Cost",
                "type": "array",
                "description": "Detailed breakdown of costs"
            },
            {
                "name": "logprobs",
                "display_name": "Log Probabilities",
                "type": "object",
                "description": "Token probabilities and logprobs from the model"
            },
            {
                "name": "reasoning",
                "display_name": "Reasoning",
                "type": "string",
                "description": "The detailed reasoning chain from the model"
            },
            {
                "name": "refusal",
                "display_name": "Refusal",
                "type": "string",
                "description": "Model refusal response (if any)"
            }
        ],
        "pricing": {
            "reference": "https://openrouter.ai/models",
            "items": [
                {
                    "key": "input_cost_per_million",
                    "label": "Input Tokens (per 1M)",
                    "cost": 0.17992692,
                    "currency": "USD"
                },
                {
                    "key": "output_cost_per_million",
                    "label": "Output Tokens (per 1M)",
                    "cost": 0.7200576000000001,
                    "currency": "USD"
                }
            ]
        },
        "id": "deepseek-deepseek-r1-0528"
    },
    {
        "display_name": "DeepSeek: R1 0528 (free)",
        "description": "May 28th update to the [original DeepSeek R1](/deepseek/deepseek-r1) Performance on par with [OpenAI o1](/openai/o1), but open-sourced and with fully open reasoning tokens. It's 671B parameters in size, with 37B active in an inference pass.\n\nFully open-source model.",
        "category": "llm",
        "provider": "deepseek",
        "accepts_plugins": false,
        "model_id": "deepseek/deepseek-r1-0528:free",
        "context_length": 163840,
        "supported_parameters": [
            "frequency_penalty",
            "include_reasoning",
            "logit_bias",
            "logprobs",
            "max_tokens",
            "min_p",
            "presence_penalty",
            "reasoning",
            "repetition_penalty",
            "seed",
            "stop",
            "temperature",
            "top_k",
            "top_logprobs",
            "top_p"
        ],
        "inputs": [
            {
                "name": "system_prompt",
                "display_name": "System Prompt",
                "type": "string or message",
                "description": "System prompt for the model",
                "default": null
            },
            {
                "name": "messages",
                "display_name": "Messages",
                "type": "array of messages or message or string",
                "description": "Array of chat messages",
                "required": true
            },
            {
                "name": "temperature",
                "display_name": "Temperature",
                "type": "number",
                "description": "Controls randomness (0-2)",
                "default": null
            },
            {
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "type": "number",
                "description": "Maximum tokens to generate",
                "default": null
            },
            {
                "name": "top_p",
                "display_name": "Top P",
                "type": "number",
                "description": "Controls diversity via nucleus sampling",
                "default": null
            },
            {
                "name": "frequency_penalty",
                "display_name": "Frequency Penalty",
                "type": "number",
                "description": "Reduces repetition (-2 to 2)",
                "default": null
            },
            {
                "name": "include_reasoning",
                "display_name": "Include Reasoning",
                "type": "boolean",
                "description": "Include reasoning in response",
                "default": null
            },
            {
                "name": "presence_penalty",
                "display_name": "Presence Penalty",
                "type": "number",
                "description": "Encourages new topics (-2 to 2)",
                "default": null
            },
            {
                "name": "reasoning",
                "display_name": "Reasoning",
                "type": "boolean",
                "description": "Internal reasoning mode",
                "default": null
            },
            {
                "name": "seed",
                "display_name": "Seed",
                "type": "number",
                "description": "Deterministic outputs",
                "default": null
            },
            {
                "name": "stop",
                "display_name": "Stop",
                "type": "string or array",
                "description": "Custom stop sequences",
                "default": null
            }
        ],
        "outputs": [
            {
                "name": "content",
                "display_name": "Content",
                "can_stream": true,
                "type": "string",
                "description": "The content portion of the generated response message."
            },
            {
                "name": "message",
                "display_name": "Message",
                "type": "message",
                "can_stream": true,
                "description": "The full generated response message."
            },
            {
                "name": "role",
                "display_name": "Role",
                "can_stream": true,
                "type": "string",
                "description": "Role of the response (usually 'assistant')"
            },
            {
                "name": "finish_reason",
                "display_name": "Finish Reason",
                "type": "string",
                "description": "Why the completion finished"
            },
            {
                "name": "usage",
                "display_name": "Token Usage",
                "type": "object",
                "description": "Token usage statistics"
            },
            {
                "name": "cost_total",
                "display_name": "Total Cost",
                "type": "number",
                "description": "Total cost for processing this request (USD)"
            },
            {
                "name": "cost_itemized",
                "display_name": "Itemized Cost",
                "type": "array",
                "description": "Detailed breakdown of costs"
            },
            {
                "name": "logprobs",
                "display_name": "Log Probabilities",
                "type": "object",
                "description": "Token probabilities and logprobs from the model"
            },
            {
                "name": "reasoning",
                "display_name": "Reasoning",
                "type": "string",
                "description": "The detailed reasoning chain from the model"
            },
            {
                "name": "refusal",
                "display_name": "Refusal",
                "type": "string",
                "description": "Model refusal response (if any)"
            }
        ],
        "pricing": {
            "reference": "https://openrouter.ai/models",
            "items": [
                {
                    "key": "input_cost_per_million",
                    "label": "Input Tokens (per 1M)",
                    "cost": 0,
                    "currency": "USD"
                },
                {
                    "key": "output_cost_per_million",
                    "label": "Output Tokens (per 1M)",
                    "cost": 0,
                    "currency": "USD"
                }
            ]
        },
        "id": "deepseek-deepseek-r1-0528-free"
    },
    {
        "display_name": "DeepSeek: Deepseek R1 0528 Qwen3 8B",
        "description": "DeepSeek-R1-0528 is a lightly upgraded release of DeepSeek R1 that taps more compute and smarter post-training tricks, pushing its reasoning and inference to the brink of flagship models like O3 and Gemini 2.5 Pro.\nIt now tops math, programming, and logic leaderboards, showcasing a step-change in depth-of-thought.\nThe distilled variant, DeepSeek-R1-0528-Qwen3-8B, transfers this chain-of-thought into an 8 B-parameter form, beating standard Qwen3 8B by +10 pp and tying the 235 B “thinking” giant on AIME 2024.",
        "category": "llm",
        "provider": "deepseek",
        "accepts_plugins": false,
        "model_id": "deepseek/deepseek-r1-0528-qwen3-8b",
        "context_length": 32000,
        "supported_parameters": [
            "frequency_penalty",
            "include_reasoning",
            "logit_bias",
            "logprobs",
            "max_tokens",
            "min_p",
            "presence_penalty",
            "reasoning",
            "repetition_penalty",
            "seed",
            "stop",
            "temperature",
            "top_k",
            "top_logprobs",
            "top_p"
        ],
        "inputs": [
            {
                "name": "system_prompt",
                "display_name": "System Prompt",
                "type": "string or message",
                "description": "System prompt for the model",
                "default": null
            },
            {
                "name": "messages",
                "display_name": "Messages",
                "type": "array of messages or message or string",
                "description": "Array of chat messages",
                "required": true
            },
            {
                "name": "temperature",
                "display_name": "Temperature",
                "type": "number",
                "description": "Controls randomness (0-2)",
                "default": null
            },
            {
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "type": "number",
                "description": "Maximum tokens to generate",
                "default": null
            },
            {
                "name": "top_p",
                "display_name": "Top P",
                "type": "number",
                "description": "Controls diversity via nucleus sampling",
                "default": null
            },
            {
                "name": "frequency_penalty",
                "display_name": "Frequency Penalty",
                "type": "number",
                "description": "Reduces repetition (-2 to 2)",
                "default": null
            },
            {
                "name": "include_reasoning",
                "display_name": "Include Reasoning",
                "type": "boolean",
                "description": "Include reasoning in response",
                "default": null
            },
            {
                "name": "presence_penalty",
                "display_name": "Presence Penalty",
                "type": "number",
                "description": "Encourages new topics (-2 to 2)",
                "default": null
            },
            {
                "name": "reasoning",
                "display_name": "Reasoning",
                "type": "boolean",
                "description": "Internal reasoning mode",
                "default": null
            },
            {
                "name": "seed",
                "display_name": "Seed",
                "type": "number",
                "description": "Deterministic outputs",
                "default": null
            },
            {
                "name": "stop",
                "display_name": "Stop",
                "type": "string or array",
                "description": "Custom stop sequences",
                "default": null
            }
        ],
        "outputs": [
            {
                "name": "content",
                "display_name": "Content",
                "can_stream": true,
                "type": "string",
                "description": "The content portion of the generated response message."
            },
            {
                "name": "message",
                "display_name": "Message",
                "type": "message",
                "can_stream": true,
                "description": "The full generated response message."
            },
            {
                "name": "role",
                "display_name": "Role",
                "can_stream": true,
                "type": "string",
                "description": "Role of the response (usually 'assistant')"
            },
            {
                "name": "finish_reason",
                "display_name": "Finish Reason",
                "type": "string",
                "description": "Why the completion finished"
            },
            {
                "name": "usage",
                "display_name": "Token Usage",
                "type": "object",
                "description": "Token usage statistics"
            },
            {
                "name": "cost_total",
                "display_name": "Total Cost",
                "type": "number",
                "description": "Total cost for processing this request (USD)"
            },
            {
                "name": "cost_itemized",
                "display_name": "Itemized Cost",
                "type": "array",
                "description": "Detailed breakdown of costs"
            },
            {
                "name": "logprobs",
                "display_name": "Log Probabilities",
                "type": "object",
                "description": "Token probabilities and logprobs from the model"
            },
            {
                "name": "reasoning",
                "display_name": "Reasoning",
                "type": "string",
                "description": "The detailed reasoning chain from the model"
            },
            {
                "name": "refusal",
                "display_name": "Refusal",
                "type": "string",
                "description": "Model refusal response (if any)"
            }
        ],
        "pricing": {
            "reference": "https://openrouter.ai/models",
            "items": [
                {
                    "key": "input_cost_per_million",
                    "label": "Input Tokens (per 1M)",
                    "cost": 0.01,
                    "currency": "USD"
                },
                {
                    "key": "output_cost_per_million",
                    "label": "Output Tokens (per 1M)",
                    "cost": 0.02,
                    "currency": "USD"
                }
            ]
        },
        "id": "deepseek-deepseek-r1-0528-qwen3-8b"
    },
    {
        "display_name": "DeepSeek: Deepseek R1 0528 Qwen3 8B (free)",
        "description": "DeepSeek-R1-0528 is a lightly upgraded release of DeepSeek R1 that taps more compute and smarter post-training tricks, pushing its reasoning and inference to the brink of flagship models like O3 and Gemini 2.5 Pro.\nIt now tops math, programming, and logic leaderboards, showcasing a step-change in depth-of-thought.\nThe distilled variant, DeepSeek-R1-0528-Qwen3-8B, transfers this chain-of-thought into an 8 B-parameter form, beating standard Qwen3 8B by +10 pp and tying the 235 B “thinking” giant on AIME 2024.",
        "category": "llm",
        "provider": "deepseek",
        "accepts_plugins": false,
        "model_id": "deepseek/deepseek-r1-0528-qwen3-8b:free",
        "context_length": 131072,
        "supported_parameters": [
            "frequency_penalty",
            "include_reasoning",
            "logit_bias",
            "logprobs",
            "max_tokens",
            "min_p",
            "presence_penalty",
            "reasoning",
            "repetition_penalty",
            "seed",
            "stop",
            "temperature",
            "top_k",
            "top_logprobs",
            "top_p"
        ],
        "inputs": [
            {
                "name": "system_prompt",
                "display_name": "System Prompt",
                "type": "string or message",
                "description": "System prompt for the model",
                "default": null
            },
            {
                "name": "messages",
                "display_name": "Messages",
                "type": "array of messages or message or string",
                "description": "Array of chat messages",
                "required": true
            },
            {
                "name": "temperature",
                "display_name": "Temperature",
                "type": "number",
                "description": "Controls randomness (0-2)",
                "default": null
            },
            {
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "type": "number",
                "description": "Maximum tokens to generate",
                "default": null
            },
            {
                "name": "top_p",
                "display_name": "Top P",
                "type": "number",
                "description": "Controls diversity via nucleus sampling",
                "default": null
            },
            {
                "name": "frequency_penalty",
                "display_name": "Frequency Penalty",
                "type": "number",
                "description": "Reduces repetition (-2 to 2)",
                "default": null
            },
            {
                "name": "include_reasoning",
                "display_name": "Include Reasoning",
                "type": "boolean",
                "description": "Include reasoning in response",
                "default": null
            },
            {
                "name": "presence_penalty",
                "display_name": "Presence Penalty",
                "type": "number",
                "description": "Encourages new topics (-2 to 2)",
                "default": null
            },
            {
                "name": "reasoning",
                "display_name": "Reasoning",
                "type": "boolean",
                "description": "Internal reasoning mode",
                "default": null
            },
            {
                "name": "seed",
                "display_name": "Seed",
                "type": "number",
                "description": "Deterministic outputs",
                "default": null
            },
            {
                "name": "stop",
                "display_name": "Stop",
                "type": "string or array",
                "description": "Custom stop sequences",
                "default": null
            }
        ],
        "outputs": [
            {
                "name": "content",
                "display_name": "Content",
                "can_stream": true,
                "type": "string",
                "description": "The content portion of the generated response message."
            },
            {
                "name": "message",
                "display_name": "Message",
                "type": "message",
                "can_stream": true,
                "description": "The full generated response message."
            },
            {
                "name": "role",
                "display_name": "Role",
                "can_stream": true,
                "type": "string",
                "description": "Role of the response (usually 'assistant')"
            },
            {
                "name": "finish_reason",
                "display_name": "Finish Reason",
                "type": "string",
                "description": "Why the completion finished"
            },
            {
                "name": "usage",
                "display_name": "Token Usage",
                "type": "object",
                "description": "Token usage statistics"
            },
            {
                "name": "cost_total",
                "display_name": "Total Cost",
                "type": "number",
                "description": "Total cost for processing this request (USD)"
            },
            {
                "name": "cost_itemized",
                "display_name": "Itemized Cost",
                "type": "array",
                "description": "Detailed breakdown of costs"
            },
            {
                "name": "logprobs",
                "display_name": "Log Probabilities",
                "type": "object",
                "description": "Token probabilities and logprobs from the model"
            },
            {
                "name": "reasoning",
                "display_name": "Reasoning",
                "type": "string",
                "description": "The detailed reasoning chain from the model"
            },
            {
                "name": "refusal",
                "display_name": "Refusal",
                "type": "string",
                "description": "Model refusal response (if any)"
            }
        ],
        "pricing": {
            "reference": "https://openrouter.ai/models",
            "items": [
                {
                    "key": "input_cost_per_million",
                    "label": "Input Tokens (per 1M)",
                    "cost": 0,
                    "currency": "USD"
                },
                {
                    "key": "output_cost_per_million",
                    "label": "Output Tokens (per 1M)",
                    "cost": 0,
                    "currency": "USD"
                }
            ]
        },
        "id": "deepseek-deepseek-r1-0528-qwen3-8b-free"
    },
    {
        "display_name": "DeepSeek: R1 Distill Llama 70B",
        "description": "DeepSeek R1 Distill Llama 70B is a distilled large language model based on [Llama-3.3-70B-Instruct](/meta-llama/llama-3.3-70b-instruct), using outputs from [DeepSeek R1](/deepseek/deepseek-r1). The model combines advanced distillation techniques to achieve high performance across multiple benchmarks, including:\n\n- AIME 2024 pass@1: 70.0\n- MATH-500 pass@1: 94.5\n- CodeForces Rating: 1633\n\nThe model leverages fine-tuning from DeepSeek R1's outputs, enabling competitive performance comparable to larger frontier models.",
        "category": "llm",
        "provider": "deepseek",
        "accepts_plugins": true,
        "model_id": "deepseek/deepseek-r1-distill-llama-70b",
        "context_length": 131072,
        "supported_parameters": [
            "frequency_penalty",
            "include_reasoning",
            "logit_bias",
            "logprobs",
            "max_tokens",
            "min_p",
            "presence_penalty",
            "reasoning",
            "repetition_penalty",
            "response_format",
            "seed",
            "stop",
            "temperature",
            "tool_choice",
            "tools",
            "top_k",
            "top_logprobs",
            "top_p"
        ],
        "inputs": [
            {
                "name": "system_prompt",
                "display_name": "System Prompt",
                "type": "string or message",
                "description": "System prompt for the model",
                "default": null
            },
            {
                "name": "messages",
                "display_name": "Messages",
                "type": "array of messages or message or string",
                "description": "Array of chat messages",
                "required": true
            },
            {
                "name": "tools",
                "display_name": "Tools",
                "type": "tool",
                "description": "Array of tools to use",
                "default": null,
                "allow_multiple": true
            },
            {
                "name": "temperature",
                "display_name": "Temperature",
                "type": "number",
                "description": "Controls randomness (0-2)",
                "default": null
            },
            {
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "type": "number",
                "description": "Maximum tokens to generate",
                "default": null
            },
            {
                "name": "top_p",
                "display_name": "Top P",
                "type": "number",
                "description": "Controls diversity via nucleus sampling",
                "default": null
            },
            {
                "name": "frequency_penalty",
                "display_name": "Frequency Penalty",
                "type": "number",
                "description": "Reduces repetition (-2 to 2)",
                "default": null
            },
            {
                "name": "include_reasoning",
                "display_name": "Include Reasoning",
                "type": "boolean",
                "description": "Include reasoning in response",
                "default": null
            },
            {
                "name": "presence_penalty",
                "display_name": "Presence Penalty",
                "type": "number",
                "description": "Encourages new topics (-2 to 2)",
                "default": null
            },
            {
                "name": "reasoning",
                "display_name": "Reasoning",
                "type": "boolean",
                "description": "Internal reasoning mode",
                "default": null
            },
            {
                "name": "response_format",
                "display_name": "Response Format",
                "type": "string or object",
                "description": "Output format specification",
                "default": null
            },
            {
                "name": "seed",
                "display_name": "Seed",
                "type": "number",
                "description": "Deterministic outputs",
                "default": null
            },
            {
                "name": "stop",
                "display_name": "Stop",
                "type": "string or array",
                "description": "Custom stop sequences",
                "default": null
            },
            {
                "name": "tool_choice",
                "display_name": "Tool Choice",
                "type": "string",
                "description": "Tool selection control",
                "default": null
            }
        ],
        "outputs": [
            {
                "name": "content",
                "display_name": "Content",
                "can_stream": true,
                "type": "string",
                "description": "The content portion of the generated response message."
            },
            {
                "name": "message",
                "display_name": "Message",
                "type": "message",
                "can_stream": true,
                "description": "The full generated response message."
            },
            {
                "name": "role",
                "display_name": "Role",
                "can_stream": true,
                "type": "string",
                "description": "Role of the response (usually 'assistant')"
            },
            {
                "name": "tool_calls",
                "display_name": "Tool Calls",
                "type": "array of tools",
                "description": "Tool calls made by the model"
            },
            {
                "name": "finish_reason",
                "display_name": "Finish Reason",
                "type": "string",
                "description": "Why the completion finished"
            },
            {
                "name": "usage",
                "display_name": "Token Usage",
                "type": "object",
                "description": "Token usage statistics"
            },
            {
                "name": "cost_total",
                "display_name": "Total Cost",
                "type": "number",
                "description": "Total cost for processing this request (USD)"
            },
            {
                "name": "cost_itemized",
                "display_name": "Itemized Cost",
                "type": "array",
                "description": "Detailed breakdown of costs"
            },
            {
                "name": "logprobs",
                "display_name": "Log Probabilities",
                "type": "object",
                "description": "Token probabilities and logprobs from the model"
            },
            {
                "name": "reasoning",
                "display_name": "Reasoning",
                "type": "string",
                "description": "The detailed reasoning chain from the model"
            },
            {
                "name": "refusal",
                "display_name": "Refusal",
                "type": "string",
                "description": "Model refusal response (if any)"
            }
        ],
        "pricing": {
            "reference": "https://openrouter.ai/models",
            "items": [
                {
                    "key": "input_cost_per_million",
                    "label": "Input Tokens (per 1M)",
                    "cost": 0.0333198,
                    "currency": "USD"
                },
                {
                    "key": "output_cost_per_million",
                    "label": "Output Tokens (per 1M)",
                    "cost": 0.13334400000000002,
                    "currency": "USD"
                }
            ]
        },
        "id": "deepseek-deepseek-r1-distill-llama-70b"
    },
    {
        "display_name": "DeepSeek: R1 Distill Llama 70B (free)",
        "description": "DeepSeek R1 Distill Llama 70B is a distilled large language model based on [Llama-3.3-70B-Instruct](/meta-llama/llama-3.3-70b-instruct), using outputs from [DeepSeek R1](/deepseek/deepseek-r1). The model combines advanced distillation techniques to achieve high performance across multiple benchmarks, including:\n\n- AIME 2024 pass@1: 70.0\n- MATH-500 pass@1: 94.5\n- CodeForces Rating: 1633\n\nThe model leverages fine-tuning from DeepSeek R1's outputs, enabling competitive performance comparable to larger frontier models.",
        "category": "llm",
        "provider": "deepseek",
        "accepts_plugins": false,
        "model_id": "deepseek/deepseek-r1-distill-llama-70b:free",
        "context_length": 8192,
        "supported_parameters": [
            "frequency_penalty",
            "include_reasoning",
            "logit_bias",
            "logprobs",
            "max_tokens",
            "min_p",
            "presence_penalty",
            "reasoning",
            "repetition_penalty",
            "seed",
            "stop",
            "temperature",
            "top_k",
            "top_logprobs",
            "top_p"
        ],
        "inputs": [
            {
                "name": "system_prompt",
                "display_name": "System Prompt",
                "type": "string or message",
                "description": "System prompt for the model",
                "default": null
            },
            {
                "name": "messages",
                "display_name": "Messages",
                "type": "array of messages or message or string",
                "description": "Array of chat messages",
                "required": true
            },
            {
                "name": "temperature",
                "display_name": "Temperature",
                "type": "number",
                "description": "Controls randomness (0-2)",
                "default": null
            },
            {
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "type": "number",
                "description": "Maximum tokens to generate",
                "default": null
            },
            {
                "name": "top_p",
                "display_name": "Top P",
                "type": "number",
                "description": "Controls diversity via nucleus sampling",
                "default": null
            },
            {
                "name": "frequency_penalty",
                "display_name": "Frequency Penalty",
                "type": "number",
                "description": "Reduces repetition (-2 to 2)",
                "default": null
            },
            {
                "name": "include_reasoning",
                "display_name": "Include Reasoning",
                "type": "boolean",
                "description": "Include reasoning in response",
                "default": null
            },
            {
                "name": "presence_penalty",
                "display_name": "Presence Penalty",
                "type": "number",
                "description": "Encourages new topics (-2 to 2)",
                "default": null
            },
            {
                "name": "reasoning",
                "display_name": "Reasoning",
                "type": "boolean",
                "description": "Internal reasoning mode",
                "default": null
            },
            {
                "name": "seed",
                "display_name": "Seed",
                "type": "number",
                "description": "Deterministic outputs",
                "default": null
            },
            {
                "name": "stop",
                "display_name": "Stop",
                "type": "string or array",
                "description": "Custom stop sequences",
                "default": null
            }
        ],
        "outputs": [
            {
                "name": "content",
                "display_name": "Content",
                "can_stream": true,
                "type": "string",
                "description": "The content portion of the generated response message."
            },
            {
                "name": "message",
                "display_name": "Message",
                "type": "message",
                "can_stream": true,
                "description": "The full generated response message."
            },
            {
                "name": "role",
                "display_name": "Role",
                "can_stream": true,
                "type": "string",
                "description": "Role of the response (usually 'assistant')"
            },
            {
                "name": "finish_reason",
                "display_name": "Finish Reason",
                "type": "string",
                "description": "Why the completion finished"
            },
            {
                "name": "usage",
                "display_name": "Token Usage",
                "type": "object",
                "description": "Token usage statistics"
            },
            {
                "name": "cost_total",
                "display_name": "Total Cost",
                "type": "number",
                "description": "Total cost for processing this request (USD)"
            },
            {
                "name": "cost_itemized",
                "display_name": "Itemized Cost",
                "type": "array",
                "description": "Detailed breakdown of costs"
            },
            {
                "name": "logprobs",
                "display_name": "Log Probabilities",
                "type": "object",
                "description": "Token probabilities and logprobs from the model"
            },
            {
                "name": "reasoning",
                "display_name": "Reasoning",
                "type": "string",
                "description": "The detailed reasoning chain from the model"
            },
            {
                "name": "refusal",
                "display_name": "Refusal",
                "type": "string",
                "description": "Model refusal response (if any)"
            }
        ],
        "pricing": {
            "reference": "https://openrouter.ai/models",
            "items": [
                {
                    "key": "input_cost_per_million",
                    "label": "Input Tokens (per 1M)",
                    "cost": 0,
                    "currency": "USD"
                },
                {
                    "key": "output_cost_per_million",
                    "label": "Output Tokens (per 1M)",
                    "cost": 0,
                    "currency": "USD"
                }
            ]
        },
        "id": "deepseek-deepseek-r1-distill-llama-70b-free"
    },
    {
        "display_name": "DeepSeek: R1 Distill Llama 8B",
        "description": "DeepSeek R1 Distill Llama 8B is a distilled large language model based on [Llama-3.1-8B-Instruct](/meta-llama/llama-3.1-8b-instruct), using outputs from [DeepSeek R1](/deepseek/deepseek-r1). The model combines advanced distillation techniques to achieve high performance across multiple benchmarks, including:\n\n- AIME 2024 pass@1: 50.4\n- MATH-500 pass@1: 89.1\n- CodeForces Rating: 1205\n\nThe model leverages fine-tuning from DeepSeek R1's outputs, enabling competitive performance comparable to larger frontier models.\n\nHugging Face: \n- [Llama-3.1-8B](https://huggingface.co/meta-llama/Llama-3.1-8B) \n- [DeepSeek-R1-Distill-Llama-8B](https://huggingface.co/deepseek-ai/DeepSeek-R1-Distill-Llama-8B)   |",
        "category": "llm",
        "provider": "deepseek",
        "accepts_plugins": false,
        "model_id": "deepseek/deepseek-r1-distill-llama-8b",
        "context_length": 32000,
        "supported_parameters": [
            "frequency_penalty",
            "include_reasoning",
            "logit_bias",
            "max_tokens",
            "min_p",
            "presence_penalty",
            "reasoning",
            "repetition_penalty",
            "seed",
            "stop",
            "temperature",
            "top_k",
            "top_p"
        ],
        "inputs": [
            {
                "name": "system_prompt",
                "display_name": "System Prompt",
                "type": "string or message",
                "description": "System prompt for the model",
                "default": null
            },
            {
                "name": "messages",
                "display_name": "Messages",
                "type": "array of messages or message or string",
                "description": "Array of chat messages",
                "required": true
            },
            {
                "name": "temperature",
                "display_name": "Temperature",
                "type": "number",
                "description": "Controls randomness (0-2)",
                "default": null
            },
            {
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "type": "number",
                "description": "Maximum tokens to generate",
                "default": null
            },
            {
                "name": "top_p",
                "display_name": "Top P",
                "type": "number",
                "description": "Controls diversity via nucleus sampling",
                "default": null
            },
            {
                "name": "frequency_penalty",
                "display_name": "Frequency Penalty",
                "type": "number",
                "description": "Reduces repetition (-2 to 2)",
                "default": null
            },
            {
                "name": "include_reasoning",
                "display_name": "Include Reasoning",
                "type": "boolean",
                "description": "Include reasoning in response",
                "default": null
            },
            {
                "name": "presence_penalty",
                "display_name": "Presence Penalty",
                "type": "number",
                "description": "Encourages new topics (-2 to 2)",
                "default": null
            },
            {
                "name": "reasoning",
                "display_name": "Reasoning",
                "type": "boolean",
                "description": "Internal reasoning mode",
                "default": null
            },
            {
                "name": "seed",
                "display_name": "Seed",
                "type": "number",
                "description": "Deterministic outputs",
                "default": null
            },
            {
                "name": "stop",
                "display_name": "Stop",
                "type": "string or array",
                "description": "Custom stop sequences",
                "default": null
            }
        ],
        "outputs": [
            {
                "name": "content",
                "display_name": "Content",
                "can_stream": true,
                "type": "string",
                "description": "The content portion of the generated response message."
            },
            {
                "name": "message",
                "display_name": "Message",
                "type": "message",
                "can_stream": true,
                "description": "The full generated response message."
            },
            {
                "name": "role",
                "display_name": "Role",
                "can_stream": true,
                "type": "string",
                "description": "Role of the response (usually 'assistant')"
            },
            {
                "name": "finish_reason",
                "display_name": "Finish Reason",
                "type": "string",
                "description": "Why the completion finished"
            },
            {
                "name": "usage",
                "display_name": "Token Usage",
                "type": "object",
                "description": "Token usage statistics"
            },
            {
                "name": "cost_total",
                "display_name": "Total Cost",
                "type": "number",
                "description": "Total cost for processing this request (USD)"
            },
            {
                "name": "cost_itemized",
                "display_name": "Itemized Cost",
                "type": "array",
                "description": "Detailed breakdown of costs"
            },
            {
                "name": "reasoning",
                "display_name": "Reasoning",
                "type": "string",
                "description": "The detailed reasoning chain from the model"
            },
            {
                "name": "refusal",
                "display_name": "Refusal",
                "type": "string",
                "description": "Model refusal response (if any)"
            }
        ],
        "pricing": {
            "reference": "https://openrouter.ai/models",
            "items": [
                {
                    "key": "input_cost_per_million",
                    "label": "Input Tokens (per 1M)",
                    "cost": 0.04,
                    "currency": "USD"
                },
                {
                    "key": "output_cost_per_million",
                    "label": "Output Tokens (per 1M)",
                    "cost": 0.04,
                    "currency": "USD"
                }
            ]
        },
        "id": "deepseek-deepseek-r1-distill-llama-8b"
    },
    {
        "display_name": "DeepSeek: R1 Distill Qwen 1.5B",
        "description": "DeepSeek R1 Distill Qwen 1.5B is a distilled large language model based on  [Qwen 2.5 Math 1.5B](https://huggingface.co/Qwen/Qwen2.5-Math-1.5B), using outputs from [DeepSeek R1](/deepseek/deepseek-r1). It's a very small and efficient model which outperforms [GPT 4o 0513](/openai/gpt-4o-2024-05-13) on Math Benchmarks.\n\nOther benchmark results include:\n\n- AIME 2024 pass@1: 28.9\n- AIME 2024 cons@64: 52.7\n- MATH-500 pass@1: 83.9\n\nThe model leverages fine-tuning from DeepSeek R1's outputs, enabling competitive performance comparable to larger frontier models.",
        "category": "llm",
        "provider": "deepseek",
        "accepts_plugins": false,
        "model_id": "deepseek/deepseek-r1-distill-qwen-1.5b",
        "context_length": 131072,
        "supported_parameters": [
            "frequency_penalty",
            "include_reasoning",
            "logit_bias",
            "max_tokens",
            "min_p",
            "presence_penalty",
            "reasoning",
            "repetition_penalty",
            "stop",
            "temperature",
            "top_k",
            "top_p"
        ],
        "inputs": [
            {
                "name": "system_prompt",
                "display_name": "System Prompt",
                "type": "string or message",
                "description": "System prompt for the model",
                "default": null
            },
            {
                "name": "messages",
                "display_name": "Messages",
                "type": "array of messages or message or string",
                "description": "Array of chat messages",
                "required": true
            },
            {
                "name": "temperature",
                "display_name": "Temperature",
                "type": "number",
                "description": "Controls randomness (0-2)",
                "default": null
            },
            {
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "type": "number",
                "description": "Maximum tokens to generate",
                "default": null
            },
            {
                "name": "top_p",
                "display_name": "Top P",
                "type": "number",
                "description": "Controls diversity via nucleus sampling",
                "default": null
            },
            {
                "name": "frequency_penalty",
                "display_name": "Frequency Penalty",
                "type": "number",
                "description": "Reduces repetition (-2 to 2)",
                "default": null
            },
            {
                "name": "include_reasoning",
                "display_name": "Include Reasoning",
                "type": "boolean",
                "description": "Include reasoning in response",
                "default": null
            },
            {
                "name": "presence_penalty",
                "display_name": "Presence Penalty",
                "type": "number",
                "description": "Encourages new topics (-2 to 2)",
                "default": null
            },
            {
                "name": "reasoning",
                "display_name": "Reasoning",
                "type": "boolean",
                "description": "Internal reasoning mode",
                "default": null
            },
            {
                "name": "stop",
                "display_name": "Stop",
                "type": "string or array",
                "description": "Custom stop sequences",
                "default": null
            }
        ],
        "outputs": [
            {
                "name": "content",
                "display_name": "Content",
                "can_stream": true,
                "type": "string",
                "description": "The content portion of the generated response message."
            },
            {
                "name": "message",
                "display_name": "Message",
                "type": "message",
                "can_stream": true,
                "description": "The full generated response message."
            },
            {
                "name": "role",
                "display_name": "Role",
                "can_stream": true,
                "type": "string",
                "description": "Role of the response (usually 'assistant')"
            },
            {
                "name": "finish_reason",
                "display_name": "Finish Reason",
                "type": "string",
                "description": "Why the completion finished"
            },
            {
                "name": "usage",
                "display_name": "Token Usage",
                "type": "object",
                "description": "Token usage statistics"
            },
            {
                "name": "cost_total",
                "display_name": "Total Cost",
                "type": "number",
                "description": "Total cost for processing this request (USD)"
            },
            {
                "name": "cost_itemized",
                "display_name": "Itemized Cost",
                "type": "array",
                "description": "Detailed breakdown of costs"
            },
            {
                "name": "reasoning",
                "display_name": "Reasoning",
                "type": "string",
                "description": "The detailed reasoning chain from the model"
            },
            {
                "name": "refusal",
                "display_name": "Refusal",
                "type": "string",
                "description": "Model refusal response (if any)"
            }
        ],
        "pricing": {
            "reference": "https://openrouter.ai/models",
            "items": [
                {
                    "key": "input_cost_per_million",
                    "label": "Input Tokens (per 1M)",
                    "cost": 0.18,
                    "currency": "USD"
                },
                {
                    "key": "output_cost_per_million",
                    "label": "Output Tokens (per 1M)",
                    "cost": 0.18,
                    "currency": "USD"
                }
            ]
        },
        "id": "deepseek-deepseek-r1-distill-qwen-1-5b"
    },
    {
        "display_name": "DeepSeek: R1 Distill Qwen 14B",
        "description": "DeepSeek R1 Distill Qwen 14B is a distilled large language model based on [Qwen 2.5 14B](https://huggingface.co/deepseek-ai/DeepSeek-R1-Distill-Qwen-14B), using outputs from [DeepSeek R1](/deepseek/deepseek-r1). It outperforms OpenAI's o1-mini across various benchmarks, achieving new state-of-the-art results for dense models.\n\nOther benchmark results include:\n\n- AIME 2024 pass@1: 69.7\n- MATH-500 pass@1: 93.9\n- CodeForces Rating: 1481\n\nThe model leverages fine-tuning from DeepSeek R1's outputs, enabling competitive performance comparable to larger frontier models.",
        "category": "llm",
        "provider": "deepseek",
        "accepts_plugins": false,
        "model_id": "deepseek/deepseek-r1-distill-qwen-14b",
        "context_length": 64000,
        "supported_parameters": [
            "frequency_penalty",
            "include_reasoning",
            "logit_bias",
            "max_tokens",
            "min_p",
            "presence_penalty",
            "reasoning",
            "repetition_penalty",
            "seed",
            "stop",
            "temperature",
            "top_k",
            "top_p"
        ],
        "inputs": [
            {
                "name": "system_prompt",
                "display_name": "System Prompt",
                "type": "string or message",
                "description": "System prompt for the model",
                "default": null
            },
            {
                "name": "messages",
                "display_name": "Messages",
                "type": "array of messages or message or string",
                "description": "Array of chat messages",
                "required": true
            },
            {
                "name": "temperature",
                "display_name": "Temperature",
                "type": "number",
                "description": "Controls randomness (0-2)",
                "default": null
            },
            {
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "type": "number",
                "description": "Maximum tokens to generate",
                "default": null
            },
            {
                "name": "top_p",
                "display_name": "Top P",
                "type": "number",
                "description": "Controls diversity via nucleus sampling",
                "default": null
            },
            {
                "name": "frequency_penalty",
                "display_name": "Frequency Penalty",
                "type": "number",
                "description": "Reduces repetition (-2 to 2)",
                "default": null
            },
            {
                "name": "include_reasoning",
                "display_name": "Include Reasoning",
                "type": "boolean",
                "description": "Include reasoning in response",
                "default": null
            },
            {
                "name": "presence_penalty",
                "display_name": "Presence Penalty",
                "type": "number",
                "description": "Encourages new topics (-2 to 2)",
                "default": null
            },
            {
                "name": "reasoning",
                "display_name": "Reasoning",
                "type": "boolean",
                "description": "Internal reasoning mode",
                "default": null
            },
            {
                "name": "seed",
                "display_name": "Seed",
                "type": "number",
                "description": "Deterministic outputs",
                "default": null
            },
            {
                "name": "stop",
                "display_name": "Stop",
                "type": "string or array",
                "description": "Custom stop sequences",
                "default": null
            }
        ],
        "outputs": [
            {
                "name": "content",
                "display_name": "Content",
                "can_stream": true,
                "type": "string",
                "description": "The content portion of the generated response message."
            },
            {
                "name": "message",
                "display_name": "Message",
                "type": "message",
                "can_stream": true,
                "description": "The full generated response message."
            },
            {
                "name": "role",
                "display_name": "Role",
                "can_stream": true,
                "type": "string",
                "description": "Role of the response (usually 'assistant')"
            },
            {
                "name": "finish_reason",
                "display_name": "Finish Reason",
                "type": "string",
                "description": "Why the completion finished"
            },
            {
                "name": "usage",
                "display_name": "Token Usage",
                "type": "object",
                "description": "Token usage statistics"
            },
            {
                "name": "cost_total",
                "display_name": "Total Cost",
                "type": "number",
                "description": "Total cost for processing this request (USD)"
            },
            {
                "name": "cost_itemized",
                "display_name": "Itemized Cost",
                "type": "array",
                "description": "Detailed breakdown of costs"
            },
            {
                "name": "reasoning",
                "display_name": "Reasoning",
                "type": "string",
                "description": "The detailed reasoning chain from the model"
            },
            {
                "name": "refusal",
                "display_name": "Refusal",
                "type": "string",
                "description": "Model refusal response (if any)"
            }
        ],
        "pricing": {
            "reference": "https://openrouter.ai/models",
            "items": [
                {
                    "key": "input_cost_per_million",
                    "label": "Input Tokens (per 1M)",
                    "cost": 0.15,
                    "currency": "USD"
                },
                {
                    "key": "output_cost_per_million",
                    "label": "Output Tokens (per 1M)",
                    "cost": 0.15,
                    "currency": "USD"
                }
            ]
        },
        "id": "deepseek-deepseek-r1-distill-qwen-14b"
    },
    {
        "display_name": "DeepSeek: R1 Distill Qwen 14B (free)",
        "description": "DeepSeek R1 Distill Qwen 14B is a distilled large language model based on [Qwen 2.5 14B](https://huggingface.co/deepseek-ai/DeepSeek-R1-Distill-Qwen-14B), using outputs from [DeepSeek R1](/deepseek/deepseek-r1). It outperforms OpenAI's o1-mini across various benchmarks, achieving new state-of-the-art results for dense models.\n\nOther benchmark results include:\n\n- AIME 2024 pass@1: 69.7\n- MATH-500 pass@1: 93.9\n- CodeForces Rating: 1481\n\nThe model leverages fine-tuning from DeepSeek R1's outputs, enabling competitive performance comparable to larger frontier models.",
        "category": "llm",
        "provider": "deepseek",
        "accepts_plugins": false,
        "model_id": "deepseek/deepseek-r1-distill-qwen-14b:free",
        "context_length": 64000,
        "supported_parameters": [
            "frequency_penalty",
            "include_reasoning",
            "logit_bias",
            "logprobs",
            "max_tokens",
            "min_p",
            "presence_penalty",
            "reasoning",
            "repetition_penalty",
            "seed",
            "stop",
            "temperature",
            "top_k",
            "top_logprobs",
            "top_p"
        ],
        "inputs": [
            {
                "name": "system_prompt",
                "display_name": "System Prompt",
                "type": "string or message",
                "description": "System prompt for the model",
                "default": null
            },
            {
                "name": "messages",
                "display_name": "Messages",
                "type": "array of messages or message or string",
                "description": "Array of chat messages",
                "required": true
            },
            {
                "name": "temperature",
                "display_name": "Temperature",
                "type": "number",
                "description": "Controls randomness (0-2)",
                "default": null
            },
            {
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "type": "number",
                "description": "Maximum tokens to generate",
                "default": null
            },
            {
                "name": "top_p",
                "display_name": "Top P",
                "type": "number",
                "description": "Controls diversity via nucleus sampling",
                "default": null
            },
            {
                "name": "frequency_penalty",
                "display_name": "Frequency Penalty",
                "type": "number",
                "description": "Reduces repetition (-2 to 2)",
                "default": null
            },
            {
                "name": "include_reasoning",
                "display_name": "Include Reasoning",
                "type": "boolean",
                "description": "Include reasoning in response",
                "default": null
            },
            {
                "name": "presence_penalty",
                "display_name": "Presence Penalty",
                "type": "number",
                "description": "Encourages new topics (-2 to 2)",
                "default": null
            },
            {
                "name": "reasoning",
                "display_name": "Reasoning",
                "type": "boolean",
                "description": "Internal reasoning mode",
                "default": null
            },
            {
                "name": "seed",
                "display_name": "Seed",
                "type": "number",
                "description": "Deterministic outputs",
                "default": null
            },
            {
                "name": "stop",
                "display_name": "Stop",
                "type": "string or array",
                "description": "Custom stop sequences",
                "default": null
            }
        ],
        "outputs": [
            {
                "name": "content",
                "display_name": "Content",
                "can_stream": true,
                "type": "string",
                "description": "The content portion of the generated response message."
            },
            {
                "name": "message",
                "display_name": "Message",
                "type": "message",
                "can_stream": true,
                "description": "The full generated response message."
            },
            {
                "name": "role",
                "display_name": "Role",
                "can_stream": true,
                "type": "string",
                "description": "Role of the response (usually 'assistant')"
            },
            {
                "name": "finish_reason",
                "display_name": "Finish Reason",
                "type": "string",
                "description": "Why the completion finished"
            },
            {
                "name": "usage",
                "display_name": "Token Usage",
                "type": "object",
                "description": "Token usage statistics"
            },
            {
                "name": "cost_total",
                "display_name": "Total Cost",
                "type": "number",
                "description": "Total cost for processing this request (USD)"
            },
            {
                "name": "cost_itemized",
                "display_name": "Itemized Cost",
                "type": "array",
                "description": "Detailed breakdown of costs"
            },
            {
                "name": "logprobs",
                "display_name": "Log Probabilities",
                "type": "object",
                "description": "Token probabilities and logprobs from the model"
            },
            {
                "name": "reasoning",
                "display_name": "Reasoning",
                "type": "string",
                "description": "The detailed reasoning chain from the model"
            },
            {
                "name": "refusal",
                "display_name": "Refusal",
                "type": "string",
                "description": "Model refusal response (if any)"
            }
        ],
        "pricing": {
            "reference": "https://openrouter.ai/models",
            "items": [
                {
                    "key": "input_cost_per_million",
                    "label": "Input Tokens (per 1M)",
                    "cost": 0,
                    "currency": "USD"
                },
                {
                    "key": "output_cost_per_million",
                    "label": "Output Tokens (per 1M)",
                    "cost": 0,
                    "currency": "USD"
                }
            ]
        },
        "id": "deepseek-deepseek-r1-distill-qwen-14b-free"
    },
    {
        "display_name": "DeepSeek: R1 Distill Qwen 32B",
        "description": "DeepSeek R1 Distill Qwen 32B is a distilled large language model based on [Qwen 2.5 32B](https://huggingface.co/Qwen/Qwen2.5-32B), using outputs from [DeepSeek R1](/deepseek/deepseek-r1). It outperforms OpenAI's o1-mini across various benchmarks, achieving new state-of-the-art results for dense models.\\n\\nOther benchmark results include:\\n\\n- AIME 2024 pass@1: 72.6\\n- MATH-500 pass@1: 94.3\\n- CodeForces Rating: 1691\\n\\nThe model leverages fine-tuning from DeepSeek R1's outputs, enabling competitive performance comparable to larger frontier models.",
        "category": "llm",
        "provider": "deepseek",
        "accepts_plugins": false,
        "model_id": "deepseek/deepseek-r1-distill-qwen-32b",
        "context_length": 131072,
        "supported_parameters": [
            "frequency_penalty",
            "include_reasoning",
            "logit_bias",
            "max_tokens",
            "min_p",
            "presence_penalty",
            "reasoning",
            "repetition_penalty",
            "response_format",
            "seed",
            "stop",
            "temperature",
            "top_k",
            "top_p"
        ],
        "inputs": [
            {
                "name": "system_prompt",
                "display_name": "System Prompt",
                "type": "string or message",
                "description": "System prompt for the model",
                "default": null
            },
            {
                "name": "messages",
                "display_name": "Messages",
                "type": "array of messages or message or string",
                "description": "Array of chat messages",
                "required": true
            },
            {
                "name": "temperature",
                "display_name": "Temperature",
                "type": "number",
                "description": "Controls randomness (0-2)",
                "default": null
            },
            {
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "type": "number",
                "description": "Maximum tokens to generate",
                "default": null
            },
            {
                "name": "top_p",
                "display_name": "Top P",
                "type": "number",
                "description": "Controls diversity via nucleus sampling",
                "default": null
            },
            {
                "name": "frequency_penalty",
                "display_name": "Frequency Penalty",
                "type": "number",
                "description": "Reduces repetition (-2 to 2)",
                "default": null
            },
            {
                "name": "include_reasoning",
                "display_name": "Include Reasoning",
                "type": "boolean",
                "description": "Include reasoning in response",
                "default": null
            },
            {
                "name": "presence_penalty",
                "display_name": "Presence Penalty",
                "type": "number",
                "description": "Encourages new topics (-2 to 2)",
                "default": null
            },
            {
                "name": "reasoning",
                "display_name": "Reasoning",
                "type": "boolean",
                "description": "Internal reasoning mode",
                "default": null
            },
            {
                "name": "response_format",
                "display_name": "Response Format",
                "type": "string or object",
                "description": "Output format specification",
                "default": null
            },
            {
                "name": "seed",
                "display_name": "Seed",
                "type": "number",
                "description": "Deterministic outputs",
                "default": null
            },
            {
                "name": "stop",
                "display_name": "Stop",
                "type": "string or array",
                "description": "Custom stop sequences",
                "default": null
            }
        ],
        "outputs": [
            {
                "name": "content",
                "display_name": "Content",
                "can_stream": true,
                "type": "string",
                "description": "The content portion of the generated response message."
            },
            {
                "name": "message",
                "display_name": "Message",
                "type": "message",
                "can_stream": true,
                "description": "The full generated response message."
            },
            {
                "name": "role",
                "display_name": "Role",
                "can_stream": true,
                "type": "string",
                "description": "Role of the response (usually 'assistant')"
            },
            {
                "name": "finish_reason",
                "display_name": "Finish Reason",
                "type": "string",
                "description": "Why the completion finished"
            },
            {
                "name": "usage",
                "display_name": "Token Usage",
                "type": "object",
                "description": "Token usage statistics"
            },
            {
                "name": "cost_total",
                "display_name": "Total Cost",
                "type": "number",
                "description": "Total cost for processing this request (USD)"
            },
            {
                "name": "cost_itemized",
                "display_name": "Itemized Cost",
                "type": "array",
                "description": "Detailed breakdown of costs"
            },
            {
                "name": "reasoning",
                "display_name": "Reasoning",
                "type": "string",
                "description": "The detailed reasoning chain from the model"
            },
            {
                "name": "refusal",
                "display_name": "Refusal",
                "type": "string",
                "description": "Model refusal response (if any)"
            }
        ],
        "pricing": {
            "reference": "https://openrouter.ai/models",
            "items": [
                {
                    "key": "input_cost_per_million",
                    "label": "Input Tokens (per 1M)",
                    "cost": 0.075,
                    "currency": "USD"
                },
                {
                    "key": "output_cost_per_million",
                    "label": "Output Tokens (per 1M)",
                    "cost": 0.15,
                    "currency": "USD"
                }
            ]
        },
        "id": "deepseek-deepseek-r1-distill-qwen-32b"
    },
    {
        "display_name": "DeepSeek: R1 (free)",
        "description": "DeepSeek R1 is here: Performance on par with [OpenAI o1](/openai/o1), but open-sourced and with fully open reasoning tokens. It's 671B parameters in size, with 37B active in an inference pass.\n\nFully open-source model & [technical report](https://api-docs.deepseek.com/news/news250120).\n\nMIT licensed: Distill & commercialize freely!",
        "category": "llm",
        "provider": "deepseek",
        "accepts_plugins": false,
        "model_id": "deepseek/deepseek-r1:free",
        "context_length": 163840,
        "supported_parameters": [
            "include_reasoning",
            "max_tokens",
            "reasoning",
            "temperature"
        ],
        "inputs": [
            {
                "name": "system_prompt",
                "display_name": "System Prompt",
                "type": "string or message",
                "description": "System prompt for the model",
                "default": null
            },
            {
                "name": "messages",
                "display_name": "Messages",
                "type": "array of messages or message or string",
                "description": "Array of chat messages",
                "required": true
            },
            {
                "name": "temperature",
                "display_name": "Temperature",
                "type": "number",
                "description": "Controls randomness (0-2)",
                "default": null
            },
            {
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "type": "number",
                "description": "Maximum tokens to generate",
                "default": null
            },
            {
                "name": "include_reasoning",
                "display_name": "Include Reasoning",
                "type": "boolean",
                "description": "Include reasoning in response",
                "default": null
            },
            {
                "name": "reasoning",
                "display_name": "Reasoning",
                "type": "boolean",
                "description": "Internal reasoning mode",
                "default": null
            }
        ],
        "outputs": [
            {
                "name": "content",
                "display_name": "Content",
                "can_stream": true,
                "type": "string",
                "description": "The content portion of the generated response message."
            },
            {
                "name": "message",
                "display_name": "Message",
                "type": "message",
                "can_stream": true,
                "description": "The full generated response message."
            },
            {
                "name": "role",
                "display_name": "Role",
                "can_stream": true,
                "type": "string",
                "description": "Role of the response (usually 'assistant')"
            },
            {
                "name": "finish_reason",
                "display_name": "Finish Reason",
                "type": "string",
                "description": "Why the completion finished"
            },
            {
                "name": "usage",
                "display_name": "Token Usage",
                "type": "object",
                "description": "Token usage statistics"
            },
            {
                "name": "cost_total",
                "display_name": "Total Cost",
                "type": "number",
                "description": "Total cost for processing this request (USD)"
            },
            {
                "name": "cost_itemized",
                "display_name": "Itemized Cost",
                "type": "array",
                "description": "Detailed breakdown of costs"
            },
            {
                "name": "reasoning",
                "display_name": "Reasoning",
                "type": "string",
                "description": "The detailed reasoning chain from the model"
            },
            {
                "name": "refusal",
                "display_name": "Refusal",
                "type": "string",
                "description": "Model refusal response (if any)"
            }
        ],
        "pricing": {
            "reference": "https://openrouter.ai/models",
            "items": [
                {
                    "key": "input_cost_per_million",
                    "label": "Input Tokens (per 1M)",
                    "cost": 0,
                    "currency": "USD"
                },
                {
                    "key": "output_cost_per_million",
                    "label": "Output Tokens (per 1M)",
                    "cost": 0,
                    "currency": "USD"
                }
            ]
        },
        "id": "deepseek-deepseek-r1-free"
    },
    {
        "display_name": "DeepSeek: DeepSeek V3 Base",
        "description": "Note that this is a base model mostly meant for testing, you need to provide detailed prompts for the model to return useful responses. \n\nDeepSeek-V3 Base is a 671B parameter open Mixture-of-Experts (MoE) language model with 37B active parameters per forward pass and a context length of 128K tokens. Trained on 14.8T tokens using FP8 mixed precision, it achieves high training efficiency and stability, with strong performance across language, reasoning, math, and coding tasks. \n\nDeepSeek-V3 Base is the pre-trained model behind [DeepSeek V3](/deepseek/deepseek-chat-v3)",
        "category": "llm",
        "provider": "deepseek",
        "accepts_plugins": false,
        "model_id": "deepseek/deepseek-v3-base",
        "context_length": 163840,
        "supported_parameters": [
            "frequency_penalty",
            "logit_bias",
            "logprobs",
            "max_tokens",
            "min_p",
            "presence_penalty",
            "repetition_penalty",
            "seed",
            "stop",
            "temperature",
            "top_k",
            "top_logprobs",
            "top_p"
        ],
        "inputs": [
            {
                "name": "prompt",
                "display_name": "Prompt",
                "type": "string",
                "description": "Text prompt for completion",
                "required": true
            },
            {
                "name": "temperature",
                "display_name": "Temperature",
                "type": "number",
                "description": "Controls randomness (0-2)",
                "default": null
            },
            {
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "type": "number",
                "description": "Maximum tokens to generate",
                "default": null
            },
            {
                "name": "top_p",
                "display_name": "Top P",
                "type": "number",
                "description": "Controls diversity via nucleus sampling",
                "default": null
            },
            {
                "name": "frequency_penalty",
                "display_name": "Frequency Penalty",
                "type": "number",
                "description": "Reduces repetition (-2 to 2)",
                "default": null
            },
            {
                "name": "presence_penalty",
                "display_name": "Presence Penalty",
                "type": "number",
                "description": "Encourages new topics (-2 to 2)",
                "default": null
            },
            {
                "name": "seed",
                "display_name": "Seed",
                "type": "number",
                "description": "Deterministic outputs",
                "default": null
            },
            {
                "name": "stop",
                "display_name": "Stop",
                "type": "string or array",
                "description": "Custom stop sequences",
                "default": null
            }
        ],
        "outputs": [
            {
                "name": "content",
                "display_name": "Content",
                "can_stream": true,
                "type": "string",
                "description": "The generated completion text"
            },
            {
                "name": "finish_reason",
                "display_name": "Finish Reason",
                "type": "string",
                "description": "Why the completion finished"
            },
            {
                "name": "usage",
                "display_name": "Token Usage",
                "type": "object",
                "description": "Token usage statistics"
            },
            {
                "name": "cost_total",
                "display_name": "Total Cost",
                "type": "number",
                "description": "Total cost for processing this request (USD)"
            },
            {
                "name": "cost_itemized",
                "display_name": "Itemized Cost",
                "type": "array",
                "description": "Detailed breakdown of costs"
            },
            {
                "name": "logprobs",
                "display_name": "Log Probabilities",
                "type": "object",
                "description": "Token probabilities and logprobs from the model"
            }
        ],
        "pricing": {
            "reference": "https://openrouter.ai/models",
            "items": [
                {
                    "key": "input_cost_per_million",
                    "label": "Input Tokens (per 1M)",
                    "cost": 0.1999188,
                    "currency": "USD"
                },
                {
                    "key": "output_cost_per_million",
                    "label": "Output Tokens (per 1M)",
                    "cost": 0.800064,
                    "currency": "USD"
                }
            ]
        },
        "id": "deepseek-deepseek-v3-base"
    },
    {
        "display_name": "Delay",
        "description": "Waits for specified time before continuing",
        "category": "logic",
        "inputs": [
            {
                "name": "value",
                "display_name": "Value",
                "description": "Value to pass through after delay",
                "type": "any"
            },
            {
                "name": "delay_ms",
                "display_name": "Delay (ms)",
                "description": "Time to wait in milliseconds",
                "type": "number",
                "default": 1000,
                "required": true
            },
            {
                "name": "max_delay_ms",
                "display_name": "Maximum Delay (ms)",
                "description": "Maximum allowed delay (for safety)",
                "type": "number",
                "default": 60000
            }
        ],
        "outputs": [
            {
                "name": "result",
                "display_name": "Result",
                "description": "Original value after delay",
                "type": "any"
            },
            {
                "name": "actual_delay_ms",
                "display_name": "Actual Delay (ms)",
                "description": "Actual time delayed in milliseconds",
                "type": "number"
            }
        ],
        "id": "delay"
    },
    {
        "display_name": "Delete Object Property",
        "description": "Remove a specific property from an object, returning a new object without that property.",
        "icon": "fa-trash",
        "category": "data",
        "inputs": [
            {
                "name": "object",
                "display_name": "Object",
                "type": "object",
                "description": "The object to remove the property from",
                "required": true
            },
            {
                "name": "key",
                "display_name": "Key",
                "type": "string",
                "description": "The name of the property to remove",
                "required": true
            }
        ],
        "outputs": [
            {
                "name": "object",
                "display_name": "Object",
                "type": "object",
                "description": "The new object without the specified property"
            },
            {
                "name": "key",
                "display_name": "Key",
                "type": "string",
                "description": "The key that was removed"
            },
            {
                "name": "removed_value",
                "display_name": "Removed Value",
                "type": "any",
                "description": "The value that was removed (null if property didn't exist)"
            },
            {
                "name": "was_removed",
                "display_name": "Was Removed",
                "type": "boolean",
                "description": "Whether the property was actually removed (true) or didn't exist (false)"
            }
        ],
        "settings": [],
        "timeout": 3000,
        "retry_limit": 3,
        "id": "delete-object-property"
    },
    {
        "display_name": "Divide",
        "description": "Divides first number by second",
        "category": "math",
        "is_plugin": true,
        "inputs": [
            {
                "name": "a",
                "display_name": "A",
                "description": "Number to divide",
                "type": "number",
                "required": true
            },
            {
                "name": "b",
                "display_name": "B",
                "description": "Number to divide by",
                "type": "number",
                "required": true
            }
        ],
        "outputs": [
            {
                "name": "result",
                "display_name": "Result",
                "description": "A divided by B",
                "type": "number"
            }
        ],
        "id": "divide"
    },
    {
        "display_name": "Equals",
        "description": "Checks if two values are equal, with deep comparison for objects and arrays",
        "icon": "equals",
        "category": "logic",
        "inputs": [
            {
                "name": "a",
                "display_name": "Value A",
                "type": "any",
                "description": "First value to compare",
                "required": true
            },
            {
                "name": "b",
                "display_name": "Value B",
                "type": "any",
                "description": "Second value to compare",
                "required": true
            }
        ],
        "outputs": [
            {
                "name": "result",
                "display_name": "Result",
                "type": "boolean",
                "description": "True if values are equal, false otherwise"
            }
        ],
        "settings": [],
        "id": "equals"
    },
    {
        "display_name": "Extract Text Content",
        "description": "Extract text content from messages, supporting multi-modal content and optional role prefixes.",
        "icon": "type",
        "category": "messages",
        "inputs": [
            {
                "name": "input",
                "display_name": "Input",
                "type": "string or message or array",
                "description": "Text string, Message object with {role, content}, or array of messages to extract text from.",
                "required": true
            }
        ],
        "outputs": [
            {
                "name": "text",
                "display_name": "Text",
                "type": "string",
                "description": "Extracted text content with optional role prefixes"
            },
            {
                "name": "message_count",
                "display_name": "Message Count",
                "type": "number",
                "description": "Number of messages processed"
            }
        ],
        "settings": [
            {
                "name": "include_role",
                "display_name": "Include Role",
                "type": "boolean",
                "description": "Whether to include role prefixes in the extracted text",
                "default": false,
                "required": true
            },
            {
                "name": "role_format",
                "display_name": "Role Format",
                "type": "string",
                "description": "Format for role prefixes (e.g., 'USER: ', 'User: ', '[user] '). Use {role} placeholder for the role name.",
                "default": "{role}: ",
                "required": true
            },
            {
                "name": "separator",
                "display_name": "Separator",
                "type": "string",
                "description": "Separator between messages when processing multiple messages",
                "default": "\n\n",
                "required": true
            }
        ],
        "id": "extract-text-content"
    },
    {
        "display_name": "Filter Messages",
        "description": "Filter messages by custom criteria (length, content, role, etc.).",
        "icon": "funnel",
        "category": "messages",
        "inputs": [
            {
                "name": "messages",
                "display_name": "Messages",
                "type": "array of messages",
                "description": "Array of message objects to filter",
                "required": true
            },
            {
                "name": "filter_type",
                "display_name": "Filter Type",
                "type": "string",
                "description": "Type of filter to apply",
                "required": true,
                "options": [
                    "min_length",
                    "max_length",
                    "contains_text",
                    "starts_with",
                    "ends_with",
                    "role_equals",
                    "role_not_equals"
                ]
            },
            {
                "name": "filter_value",
                "display_name": "Filter Value",
                "type": "string or number",
                "description": "Value to filter by (text for text filters, number for length filters)",
                "required": true
            }
        ],
        "outputs": [
            {
                "name": "messages",
                "display_name": "Messages",
                "type": "array of messages",
                "description": "Array containing filtered messages"
            },
            {
                "name": "count",
                "display_name": "Count",
                "type": "number",
                "description": "Number of messages that match the filter"
            }
        ],
        "id": "filter-messages"
    },
    {
        "display_name": "Floor",
        "description": "Rounds down to nearest integer",
        "category": "math",
        "inputs": [
            {
                "name": "number",
                "display_name": "Number",
                "description": "Number to floor",
                "type": "number",
                "required": true
            }
        ],
        "outputs": [
            {
                "name": "result",
                "display_name": "Result",
                "description": "Floored number",
                "type": "number"
            }
        ],
        "id": "floor"
    },
    {
        "display_name": "Get Chunk by Index",
        "description": "Retrieve a specific chunk from a knowledge base by document ID and chunk index",
        "category": "knowledge",
        "is_plugin": true,
        "inputs": [
            {
                "name": "document_id",
                "display_name": "Document ID",
                "type": "string",
                "description": "The ID of the document to search in",
                "required": true
            },
            {
                "name": "chunk_index",
                "display_name": "Chunk Index",
                "type": "number",
                "description": "The index of the chunk to retrieve (0-based)",
                "required": true
            }
        ],
        "outputs": [
            {
                "name": "chunk",
                "display_name": "Chunk",
                "type": "object",
                "description": "The retrieved chunk data including content, metadata, and position information"
            },
            {
                "name": "found",
                "display_name": "Found",
                "type": "boolean",
                "description": "Whether the chunk was found"
            },
            {
                "name": "error",
                "display_name": "Error",
                "type": "string",
                "description": "Error message if the operation failed"
            }
        ],
        "settings": [],
        "needs_key_from": [
            "openai"
        ],
        "id": "get-chunk-by-index"
    },
    {
        "display_name": "Get First N Messages",
        "description": "Extract the first N messages from an array of messages.",
        "icon": "arrow-up",
        "category": "messages",
        "inputs": [
            {
                "name": "messages",
                "display_name": "Messages",
                "type": "array of messages",
                "description": "Array of message objects to extract from",
                "required": true
            },
            {
                "name": "count",
                "display_name": "Count",
                "type": "number",
                "description": "Number of first messages to extract",
                "required": true
            }
        ],
        "outputs": [
            {
                "name": "messages",
                "display_name": "Messages",
                "type": "array of messages",
                "description": "Array containing the first N messages"
            },
            {
                "name": "count",
                "display_name": "Count",
                "type": "number",
                "description": "Actual number of messages returned"
            }
        ],
        "id": "get-first-n-messages"
    },
    {
        "display_name": "Get Last N Messages",
        "description": "Extract the most recent N messages from an array of messages.",
        "icon": "arrow-down",
        "category": "messages",
        "inputs": [
            {
                "name": "messages",
                "display_name": "Messages",
                "type": "array of messages",
                "description": "Array of message objects to extract from",
                "required": true
            },
            {
                "name": "count",
                "display_name": "Count",
                "type": "number",
                "description": "Number of recent messages to extract",
                "required": true
            }
        ],
        "outputs": [
            {
                "name": "messages",
                "display_name": "Messages",
                "type": "array of messages",
                "description": "Array containing the last N messages"
            },
            {
                "name": "count",
                "display_name": "Count",
                "type": "number",
                "description": "Actual number of messages returned"
            }
        ],
        "id": "get-last-n-messages"
    },
    {
        "display_name": "Get Messages by Role",
        "description": "Filter messages by specific role (user, assistant, system, etc.).",
        "icon": "filter",
        "category": "messages",
        "inputs": [
            {
                "name": "messages",
                "display_name": "Messages",
                "type": "array of messages",
                "description": "Array of message objects to filter",
                "required": true
            },
            {
                "name": "role",
                "display_name": "Role",
                "type": "string",
                "description": "Role to filter by (user, assistant, system, etc.)",
                "required": true
            }
        ],
        "outputs": [
            {
                "name": "messages",
                "display_name": "Messages",
                "type": "array of messages",
                "description": "Array containing only messages with the specified role"
            },
            {
                "name": "count",
                "display_name": "Count",
                "type": "number",
                "description": "Number of messages found with the specified role"
            }
        ],
        "id": "get-messages-by-role"
    },
    {
        "display_name": "Get Messages Range",
        "description": "Extract messages from a specific range (start index to end index).",
        "icon": "arrows-horizontal",
        "category": "messages",
        "inputs": [
            {
                "name": "messages",
                "display_name": "Messages",
                "type": "array of messages",
                "description": "Array of message objects to extract from",
                "required": true
            },
            {
                "name": "start",
                "display_name": "Start Index",
                "type": "number",
                "description": "Starting index (inclusive, 0-based)",
                "required": true
            },
            {
                "name": "end",
                "display_name": "End Index",
                "type": "number",
                "description": "Ending index (exclusive, 0-based). Use -1 for end of array.",
                "required": true
            }
        ],
        "outputs": [
            {
                "name": "messages",
                "display_name": "Messages",
                "type": "array of messages",
                "description": "Array containing messages from the specified range"
            },
            {
                "name": "count",
                "display_name": "Count",
                "type": "number",
                "description": "Number of messages in the range"
            }
        ],
        "id": "get-messages-range"
    },
    {
        "display_name": "Get Object Property",
        "description": "Extract a specific property value from an object by key name.",
        "icon": "fa-key",
        "category": "data",
        "inputs": [
            {
                "name": "object",
                "display_name": "Object",
                "type": "object",
                "description": "The object to extract the property from",
                "required": true
            },
            {
                "name": "key",
                "display_name": "Key",
                "type": "string",
                "description": "The name of the property to extract",
                "required": true
            }
        ],
        "outputs": [
            {
                "name": "value",
                "display_name": "Value",
                "type": "any",
                "description": "The value of the specified property"
            },
            {
                "name": "exists",
                "display_name": "Exists",
                "type": "boolean",
                "description": "Whether the property exists in the object"
            },
            {
                "name": "key",
                "display_name": "Key",
                "type": "string",
                "description": "The key that was accessed"
            }
        ],
        "settings": [
            {
                "name": "default_value",
                "display_name": "Default Value",
                "type": "any",
                "description": "Value to return if the property doesn't exist",
                "default": null
            }
        ],
        "timeout": 3000,
        "retry_limit": 3,
        "id": "get-object-property"
    },
    {
        "display_name": "Google: Gemini 2.0 Flash",
        "description": "Gemini Flash 2.0 offers a significantly faster time to first token (TTFT) compared to [Gemini Flash 1.5](/google/gemini-flash-1.5), while maintaining quality on par with larger models like [Gemini Pro 1.5](/google/gemini-pro-1.5). It introduces notable enhancements in multimodal understanding, coding capabilities, complex instruction following, and function calling. These advancements come together to deliver more seamless and robust agentic experiences.",
        "category": "llm",
        "provider": "google",
        "accepts_plugins": true,
        "model_id": "google/gemini-2.0-flash-001",
        "context_length": 1048576,
        "supported_parameters": [
            "max_tokens",
            "response_format",
            "seed",
            "stop",
            "structured_outputs",
            "temperature",
            "tool_choice",
            "tools",
            "top_p"
        ],
        "inputs": [
            {
                "name": "system_prompt",
                "display_name": "System Prompt",
                "type": "string or message",
                "description": "System prompt for the model",
                "default": null
            },
            {
                "name": "messages",
                "display_name": "Messages",
                "type": "array of messages or message or string",
                "description": "Array of chat messages",
                "required": true
            },
            {
                "name": "tools",
                "display_name": "Tools",
                "type": "tool",
                "description": "Array of tools to use",
                "default": null,
                "allow_multiple": true
            },
            {
                "name": "temperature",
                "display_name": "Temperature",
                "type": "number",
                "description": "Controls randomness (0-2)",
                "default": null
            },
            {
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "type": "number",
                "description": "Maximum tokens to generate",
                "default": null
            },
            {
                "name": "top_p",
                "display_name": "Top P",
                "type": "number",
                "description": "Controls diversity via nucleus sampling",
                "default": null
            },
            {
                "name": "response_format",
                "display_name": "Response Format",
                "type": "string or object",
                "description": "Output format specification",
                "default": null
            },
            {
                "name": "seed",
                "display_name": "Seed",
                "type": "number",
                "description": "Deterministic outputs",
                "default": null
            },
            {
                "name": "stop",
                "display_name": "Stop",
                "type": "string or array",
                "description": "Custom stop sequences",
                "default": null
            },
            {
                "name": "structured_outputs",
                "display_name": "Structured Outputs",
                "type": "string or object",
                "description": "JSON schema enforcement",
                "default": null
            },
            {
                "name": "tool_choice",
                "display_name": "Tool Choice",
                "type": "string",
                "description": "Tool selection control",
                "default": null
            }
        ],
        "outputs": [
            {
                "name": "content",
                "display_name": "Content",
                "can_stream": true,
                "type": "string",
                "description": "The content portion of the generated response message."
            },
            {
                "name": "message",
                "display_name": "Message",
                "type": "message",
                "can_stream": true,
                "description": "The full generated response message."
            },
            {
                "name": "role",
                "display_name": "Role",
                "can_stream": true,
                "type": "string",
                "description": "Role of the response (usually 'assistant')"
            },
            {
                "name": "tool_calls",
                "display_name": "Tool Calls",
                "type": "array of tools",
                "description": "Tool calls made by the model"
            },
            {
                "name": "finish_reason",
                "display_name": "Finish Reason",
                "type": "string",
                "description": "Why the completion finished"
            },
            {
                "name": "usage",
                "display_name": "Token Usage",
                "type": "object",
                "description": "Token usage statistics"
            },
            {
                "name": "cost_total",
                "display_name": "Total Cost",
                "type": "number",
                "description": "Total cost for processing this request (USD)"
            },
            {
                "name": "cost_itemized",
                "display_name": "Itemized Cost",
                "type": "array",
                "description": "Detailed breakdown of costs"
            }
        ],
        "pricing": {
            "reference": "https://openrouter.ai/models",
            "items": [
                {
                    "key": "input_cost_per_million",
                    "label": "Input Tokens (per 1M)",
                    "cost": 0.09999999999999999,
                    "currency": "USD"
                },
                {
                    "key": "output_cost_per_million",
                    "label": "Output Tokens (per 1M)",
                    "cost": 0.39999999999999997,
                    "currency": "USD"
                }
            ]
        },
        "id": "google-gemini-2-0-flash-001"
    },
    {
        "display_name": "Google: Gemini 2.0 Flash Experimental (free)",
        "description": "Gemini Flash 2.0 offers a significantly faster time to first token (TTFT) compared to [Gemini Flash 1.5](/google/gemini-flash-1.5), while maintaining quality on par with larger models like [Gemini Pro 1.5](/google/gemini-pro-1.5). It introduces notable enhancements in multimodal understanding, coding capabilities, complex instruction following, and function calling. These advancements come together to deliver more seamless and robust agentic experiences.",
        "category": "llm",
        "provider": "google",
        "accepts_plugins": true,
        "model_id": "google/gemini-2.0-flash-exp:free",
        "context_length": 1048576,
        "supported_parameters": [
            "max_tokens",
            "response_format",
            "seed",
            "stop",
            "temperature",
            "tool_choice",
            "tools",
            "top_p"
        ],
        "inputs": [
            {
                "name": "system_prompt",
                "display_name": "System Prompt",
                "type": "string or message",
                "description": "System prompt for the model",
                "default": null
            },
            {
                "name": "messages",
                "display_name": "Messages",
                "type": "array of messages or message or string",
                "description": "Array of chat messages",
                "required": true
            },
            {
                "name": "tools",
                "display_name": "Tools",
                "type": "tool",
                "description": "Array of tools to use",
                "default": null,
                "allow_multiple": true
            },
            {
                "name": "temperature",
                "display_name": "Temperature",
                "type": "number",
                "description": "Controls randomness (0-2)",
                "default": null
            },
            {
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "type": "number",
                "description": "Maximum tokens to generate",
                "default": null
            },
            {
                "name": "top_p",
                "display_name": "Top P",
                "type": "number",
                "description": "Controls diversity via nucleus sampling",
                "default": null
            },
            {
                "name": "response_format",
                "display_name": "Response Format",
                "type": "string or object",
                "description": "Output format specification",
                "default": null
            },
            {
                "name": "seed",
                "display_name": "Seed",
                "type": "number",
                "description": "Deterministic outputs",
                "default": null
            },
            {
                "name": "stop",
                "display_name": "Stop",
                "type": "string or array",
                "description": "Custom stop sequences",
                "default": null
            },
            {
                "name": "tool_choice",
                "display_name": "Tool Choice",
                "type": "string",
                "description": "Tool selection control",
                "default": null
            }
        ],
        "outputs": [
            {
                "name": "content",
                "display_name": "Content",
                "can_stream": true,
                "type": "string",
                "description": "The content portion of the generated response message."
            },
            {
                "name": "message",
                "display_name": "Message",
                "type": "message",
                "can_stream": true,
                "description": "The full generated response message."
            },
            {
                "name": "role",
                "display_name": "Role",
                "can_stream": true,
                "type": "string",
                "description": "Role of the response (usually 'assistant')"
            },
            {
                "name": "tool_calls",
                "display_name": "Tool Calls",
                "type": "array of tools",
                "description": "Tool calls made by the model"
            },
            {
                "name": "finish_reason",
                "display_name": "Finish Reason",
                "type": "string",
                "description": "Why the completion finished"
            },
            {
                "name": "usage",
                "display_name": "Token Usage",
                "type": "object",
                "description": "Token usage statistics"
            },
            {
                "name": "cost_total",
                "display_name": "Total Cost",
                "type": "number",
                "description": "Total cost for processing this request (USD)"
            },
            {
                "name": "cost_itemized",
                "display_name": "Itemized Cost",
                "type": "array",
                "description": "Detailed breakdown of costs"
            }
        ],
        "pricing": {
            "reference": "https://openrouter.ai/models",
            "items": [
                {
                    "key": "input_cost_per_million",
                    "label": "Input Tokens (per 1M)",
                    "cost": 0,
                    "currency": "USD"
                },
                {
                    "key": "output_cost_per_million",
                    "label": "Output Tokens (per 1M)",
                    "cost": 0,
                    "currency": "USD"
                }
            ]
        },
        "id": "google-gemini-2-0-flash-exp-free"
    },
    {
        "display_name": "Google: Gemini 2.0 Flash Lite",
        "description": "Gemini 2.0 Flash Lite offers a significantly faster time to first token (TTFT) compared to [Gemini Flash 1.5](/google/gemini-flash-1.5), while maintaining quality on par with larger models like [Gemini Pro 1.5](/google/gemini-pro-1.5), all at extremely economical token prices.",
        "category": "llm",
        "provider": "google",
        "accepts_plugins": true,
        "model_id": "google/gemini-2.0-flash-lite-001",
        "context_length": 1048576,
        "supported_parameters": [
            "max_tokens",
            "response_format",
            "seed",
            "stop",
            "structured_outputs",
            "temperature",
            "tool_choice",
            "tools",
            "top_p"
        ],
        "inputs": [
            {
                "name": "system_prompt",
                "display_name": "System Prompt",
                "type": "string or message",
                "description": "System prompt for the model",
                "default": null
            },
            {
                "name": "messages",
                "display_name": "Messages",
                "type": "array of messages or message or string",
                "description": "Array of chat messages",
                "required": true
            },
            {
                "name": "tools",
                "display_name": "Tools",
                "type": "tool",
                "description": "Array of tools to use",
                "default": null,
                "allow_multiple": true
            },
            {
                "name": "temperature",
                "display_name": "Temperature",
                "type": "number",
                "description": "Controls randomness (0-2)",
                "default": null
            },
            {
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "type": "number",
                "description": "Maximum tokens to generate",
                "default": null
            },
            {
                "name": "top_p",
                "display_name": "Top P",
                "type": "number",
                "description": "Controls diversity via nucleus sampling",
                "default": null
            },
            {
                "name": "response_format",
                "display_name": "Response Format",
                "type": "string or object",
                "description": "Output format specification",
                "default": null
            },
            {
                "name": "seed",
                "display_name": "Seed",
                "type": "number",
                "description": "Deterministic outputs",
                "default": null
            },
            {
                "name": "stop",
                "display_name": "Stop",
                "type": "string or array",
                "description": "Custom stop sequences",
                "default": null
            },
            {
                "name": "structured_outputs",
                "display_name": "Structured Outputs",
                "type": "string or object",
                "description": "JSON schema enforcement",
                "default": null
            },
            {
                "name": "tool_choice",
                "display_name": "Tool Choice",
                "type": "string",
                "description": "Tool selection control",
                "default": null
            }
        ],
        "outputs": [
            {
                "name": "content",
                "display_name": "Content",
                "can_stream": true,
                "type": "string",
                "description": "The content portion of the generated response message."
            },
            {
                "name": "message",
                "display_name": "Message",
                "type": "message",
                "can_stream": true,
                "description": "The full generated response message."
            },
            {
                "name": "role",
                "display_name": "Role",
                "can_stream": true,
                "type": "string",
                "description": "Role of the response (usually 'assistant')"
            },
            {
                "name": "tool_calls",
                "display_name": "Tool Calls",
                "type": "array of tools",
                "description": "Tool calls made by the model"
            },
            {
                "name": "finish_reason",
                "display_name": "Finish Reason",
                "type": "string",
                "description": "Why the completion finished"
            },
            {
                "name": "usage",
                "display_name": "Token Usage",
                "type": "object",
                "description": "Token usage statistics"
            },
            {
                "name": "cost_total",
                "display_name": "Total Cost",
                "type": "number",
                "description": "Total cost for processing this request (USD)"
            },
            {
                "name": "cost_itemized",
                "display_name": "Itemized Cost",
                "type": "array",
                "description": "Detailed breakdown of costs"
            }
        ],
        "pricing": {
            "reference": "https://openrouter.ai/models",
            "items": [
                {
                    "key": "input_cost_per_million",
                    "label": "Input Tokens (per 1M)",
                    "cost": 0.075,
                    "currency": "USD"
                },
                {
                    "key": "output_cost_per_million",
                    "label": "Output Tokens (per 1M)",
                    "cost": 0.3,
                    "currency": "USD"
                }
            ]
        },
        "id": "google-gemini-2-0-flash-lite-001"
    },
    {
        "display_name": "Google: Gemini 2.5 Flash",
        "description": "Gemini 2.5 Flash is Google's state-of-the-art workhorse model, specifically designed for advanced reasoning, coding, mathematics, and scientific tasks. It includes built-in \"thinking\" capabilities, enabling it to provide responses with greater accuracy and nuanced context handling. \n\nAdditionally, Gemini 2.5 Flash is configurable through the \"max tokens for reasoning\" parameter, as described in the documentation (https://openrouter.ai/docs/use-cases/reasoning-tokens#max-tokens-for-reasoning).",
        "category": "llm",
        "provider": "google",
        "accepts_plugins": true,
        "model_id": "google/gemini-2.5-flash",
        "context_length": 1048576,
        "supported_parameters": [
            "include_reasoning",
            "max_tokens",
            "reasoning",
            "response_format",
            "seed",
            "stop",
            "structured_outputs",
            "temperature",
            "tool_choice",
            "tools",
            "top_p"
        ],
        "inputs": [
            {
                "name": "system_prompt",
                "display_name": "System Prompt",
                "type": "string or message",
                "description": "System prompt for the model",
                "default": null
            },
            {
                "name": "messages",
                "display_name": "Messages",
                "type": "array of messages or message or string",
                "description": "Array of chat messages",
                "required": true
            },
            {
                "name": "tools",
                "display_name": "Tools",
                "type": "tool",
                "description": "Array of tools to use",
                "default": null,
                "allow_multiple": true
            },
            {
                "name": "temperature",
                "display_name": "Temperature",
                "type": "number",
                "description": "Controls randomness (0-2)",
                "default": null
            },
            {
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "type": "number",
                "description": "Maximum tokens to generate",
                "default": null
            },
            {
                "name": "top_p",
                "display_name": "Top P",
                "type": "number",
                "description": "Controls diversity via nucleus sampling",
                "default": null
            },
            {
                "name": "include_reasoning",
                "display_name": "Include Reasoning",
                "type": "boolean",
                "description": "Include reasoning in response",
                "default": null
            },
            {
                "name": "reasoning",
                "display_name": "Reasoning",
                "type": "boolean",
                "description": "Internal reasoning mode",
                "default": null
            },
            {
                "name": "response_format",
                "display_name": "Response Format",
                "type": "string or object",
                "description": "Output format specification",
                "default": null
            },
            {
                "name": "seed",
                "display_name": "Seed",
                "type": "number",
                "description": "Deterministic outputs",
                "default": null
            },
            {
                "name": "stop",
                "display_name": "Stop",
                "type": "string or array",
                "description": "Custom stop sequences",
                "default": null
            },
            {
                "name": "structured_outputs",
                "display_name": "Structured Outputs",
                "type": "string or object",
                "description": "JSON schema enforcement",
                "default": null
            },
            {
                "name": "tool_choice",
                "display_name": "Tool Choice",
                "type": "string",
                "description": "Tool selection control",
                "default": null
            }
        ],
        "outputs": [
            {
                "name": "content",
                "display_name": "Content",
                "can_stream": true,
                "type": "string",
                "description": "The content portion of the generated response message."
            },
            {
                "name": "message",
                "display_name": "Message",
                "type": "message",
                "can_stream": true,
                "description": "The full generated response message."
            },
            {
                "name": "role",
                "display_name": "Role",
                "can_stream": true,
                "type": "string",
                "description": "Role of the response (usually 'assistant')"
            },
            {
                "name": "tool_calls",
                "display_name": "Tool Calls",
                "type": "array of tools",
                "description": "Tool calls made by the model"
            },
            {
                "name": "finish_reason",
                "display_name": "Finish Reason",
                "type": "string",
                "description": "Why the completion finished"
            },
            {
                "name": "usage",
                "display_name": "Token Usage",
                "type": "object",
                "description": "Token usage statistics"
            },
            {
                "name": "cost_total",
                "display_name": "Total Cost",
                "type": "number",
                "description": "Total cost for processing this request (USD)"
            },
            {
                "name": "cost_itemized",
                "display_name": "Itemized Cost",
                "type": "array",
                "description": "Detailed breakdown of costs"
            },
            {
                "name": "reasoning",
                "display_name": "Reasoning",
                "type": "string",
                "description": "The detailed reasoning chain from the model"
            },
            {
                "name": "refusal",
                "display_name": "Refusal",
                "type": "string",
                "description": "Model refusal response (if any)"
            }
        ],
        "pricing": {
            "reference": "https://openrouter.ai/models",
            "items": [
                {
                    "key": "input_cost_per_million",
                    "label": "Input Tokens (per 1M)",
                    "cost": 0.3,
                    "currency": "USD"
                },
                {
                    "key": "output_cost_per_million",
                    "label": "Output Tokens (per 1M)",
                    "cost": 2.5,
                    "currency": "USD"
                }
            ]
        },
        "id": "google-gemini-2-5-flash"
    },
    {
        "display_name": "Google: Gemini 2.5 Flash Lite",
        "description": "Gemini 2.5 Flash-Lite is a lightweight reasoning model in the Gemini 2.5 family, optimized for ultra-low latency and cost efficiency. It offers improved throughput, faster token generation, and better performance across common benchmarks compared to earlier Flash models. By default, \"thinking\" (i.e. multi-pass reasoning) is disabled to prioritize speed, but developers can enable it via the [Reasoning API parameter](https://openrouter.ai/docs/use-cases/reasoning-tokens) to selectively trade off cost for intelligence. ",
        "category": "llm",
        "provider": "google",
        "accepts_plugins": true,
        "model_id": "google/gemini-2.5-flash-lite",
        "context_length": 1048576,
        "supported_parameters": [
            "include_reasoning",
            "max_tokens",
            "reasoning",
            "response_format",
            "seed",
            "stop",
            "structured_outputs",
            "temperature",
            "tool_choice",
            "tools",
            "top_p"
        ],
        "inputs": [
            {
                "name": "system_prompt",
                "display_name": "System Prompt",
                "type": "string or message",
                "description": "System prompt for the model",
                "default": null
            },
            {
                "name": "messages",
                "display_name": "Messages",
                "type": "array of messages or message or string",
                "description": "Array of chat messages",
                "required": true
            },
            {
                "name": "tools",
                "display_name": "Tools",
                "type": "tool",
                "description": "Array of tools to use",
                "default": null,
                "allow_multiple": true
            },
            {
                "name": "temperature",
                "display_name": "Temperature",
                "type": "number",
                "description": "Controls randomness (0-2)",
                "default": null
            },
            {
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "type": "number",
                "description": "Maximum tokens to generate",
                "default": null
            },
            {
                "name": "top_p",
                "display_name": "Top P",
                "type": "number",
                "description": "Controls diversity via nucleus sampling",
                "default": null
            },
            {
                "name": "include_reasoning",
                "display_name": "Include Reasoning",
                "type": "boolean",
                "description": "Include reasoning in response",
                "default": null
            },
            {
                "name": "reasoning",
                "display_name": "Reasoning",
                "type": "boolean",
                "description": "Internal reasoning mode",
                "default": null
            },
            {
                "name": "response_format",
                "display_name": "Response Format",
                "type": "string or object",
                "description": "Output format specification",
                "default": null
            },
            {
                "name": "seed",
                "display_name": "Seed",
                "type": "number",
                "description": "Deterministic outputs",
                "default": null
            },
            {
                "name": "stop",
                "display_name": "Stop",
                "type": "string or array",
                "description": "Custom stop sequences",
                "default": null
            },
            {
                "name": "structured_outputs",
                "display_name": "Structured Outputs",
                "type": "string or object",
                "description": "JSON schema enforcement",
                "default": null
            },
            {
                "name": "tool_choice",
                "display_name": "Tool Choice",
                "type": "string",
                "description": "Tool selection control",
                "default": null
            }
        ],
        "outputs": [
            {
                "name": "content",
                "display_name": "Content",
                "can_stream": true,
                "type": "string",
                "description": "The content portion of the generated response message."
            },
            {
                "name": "message",
                "display_name": "Message",
                "type": "message",
                "can_stream": true,
                "description": "The full generated response message."
            },
            {
                "name": "role",
                "display_name": "Role",
                "can_stream": true,
                "type": "string",
                "description": "Role of the response (usually 'assistant')"
            },
            {
                "name": "tool_calls",
                "display_name": "Tool Calls",
                "type": "array of tools",
                "description": "Tool calls made by the model"
            },
            {
                "name": "finish_reason",
                "display_name": "Finish Reason",
                "type": "string",
                "description": "Why the completion finished"
            },
            {
                "name": "usage",
                "display_name": "Token Usage",
                "type": "object",
                "description": "Token usage statistics"
            },
            {
                "name": "cost_total",
                "display_name": "Total Cost",
                "type": "number",
                "description": "Total cost for processing this request (USD)"
            },
            {
                "name": "cost_itemized",
                "display_name": "Itemized Cost",
                "type": "array",
                "description": "Detailed breakdown of costs"
            },
            {
                "name": "reasoning",
                "display_name": "Reasoning",
                "type": "string",
                "description": "The detailed reasoning chain from the model"
            },
            {
                "name": "refusal",
                "display_name": "Refusal",
                "type": "string",
                "description": "Model refusal response (if any)"
            }
        ],
        "pricing": {
            "reference": "https://openrouter.ai/models",
            "items": [
                {
                    "key": "input_cost_per_million",
                    "label": "Input Tokens (per 1M)",
                    "cost": 0.09999999999999999,
                    "currency": "USD"
                },
                {
                    "key": "output_cost_per_million",
                    "label": "Output Tokens (per 1M)",
                    "cost": 0.39999999999999997,
                    "currency": "USD"
                }
            ]
        },
        "id": "google-gemini-2-5-flash-lite"
    },
    {
        "display_name": "Google: Gemini 2.5 Flash Lite Preview 06-17",
        "description": "Gemini 2.5 Flash-Lite is a lightweight reasoning model in the Gemini 2.5 family, optimized for ultra-low latency and cost efficiency. It offers improved throughput, faster token generation, and better performance across common benchmarks compared to earlier Flash models. By default, \"thinking\" (i.e. multi-pass reasoning) is disabled to prioritize speed, but developers can enable it via the [Reasoning API parameter](https://openrouter.ai/docs/use-cases/reasoning-tokens) to selectively trade off cost for intelligence. ",
        "category": "llm",
        "provider": "google",
        "accepts_plugins": true,
        "model_id": "google/gemini-2.5-flash-lite-preview-06-17",
        "context_length": 1048576,
        "supported_parameters": [
            "include_reasoning",
            "max_tokens",
            "reasoning",
            "response_format",
            "seed",
            "stop",
            "structured_outputs",
            "temperature",
            "tool_choice",
            "tools",
            "top_p"
        ],
        "inputs": [
            {
                "name": "system_prompt",
                "display_name": "System Prompt",
                "type": "string or message",
                "description": "System prompt for the model",
                "default": null
            },
            {
                "name": "messages",
                "display_name": "Messages",
                "type": "array of messages or message or string",
                "description": "Array of chat messages",
                "required": true
            },
            {
                "name": "tools",
                "display_name": "Tools",
                "type": "tool",
                "description": "Array of tools to use",
                "default": null,
                "allow_multiple": true
            },
            {
                "name": "temperature",
                "display_name": "Temperature",
                "type": "number",
                "description": "Controls randomness (0-2)",
                "default": null
            },
            {
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "type": "number",
                "description": "Maximum tokens to generate",
                "default": null
            },
            {
                "name": "top_p",
                "display_name": "Top P",
                "type": "number",
                "description": "Controls diversity via nucleus sampling",
                "default": null
            },
            {
                "name": "include_reasoning",
                "display_name": "Include Reasoning",
                "type": "boolean",
                "description": "Include reasoning in response",
                "default": null
            },
            {
                "name": "reasoning",
                "display_name": "Reasoning",
                "type": "boolean",
                "description": "Internal reasoning mode",
                "default": null
            },
            {
                "name": "response_format",
                "display_name": "Response Format",
                "type": "string or object",
                "description": "Output format specification",
                "default": null
            },
            {
                "name": "seed",
                "display_name": "Seed",
                "type": "number",
                "description": "Deterministic outputs",
                "default": null
            },
            {
                "name": "stop",
                "display_name": "Stop",
                "type": "string or array",
                "description": "Custom stop sequences",
                "default": null
            },
            {
                "name": "structured_outputs",
                "display_name": "Structured Outputs",
                "type": "string or object",
                "description": "JSON schema enforcement",
                "default": null
            },
            {
                "name": "tool_choice",
                "display_name": "Tool Choice",
                "type": "string",
                "description": "Tool selection control",
                "default": null
            }
        ],
        "outputs": [
            {
                "name": "content",
                "display_name": "Content",
                "can_stream": true,
                "type": "string",
                "description": "The content portion of the generated response message."
            },
            {
                "name": "message",
                "display_name": "Message",
                "type": "message",
                "can_stream": true,
                "description": "The full generated response message."
            },
            {
                "name": "role",
                "display_name": "Role",
                "can_stream": true,
                "type": "string",
                "description": "Role of the response (usually 'assistant')"
            },
            {
                "name": "tool_calls",
                "display_name": "Tool Calls",
                "type": "array of tools",
                "description": "Tool calls made by the model"
            },
            {
                "name": "finish_reason",
                "display_name": "Finish Reason",
                "type": "string",
                "description": "Why the completion finished"
            },
            {
                "name": "usage",
                "display_name": "Token Usage",
                "type": "object",
                "description": "Token usage statistics"
            },
            {
                "name": "cost_total",
                "display_name": "Total Cost",
                "type": "number",
                "description": "Total cost for processing this request (USD)"
            },
            {
                "name": "cost_itemized",
                "display_name": "Itemized Cost",
                "type": "array",
                "description": "Detailed breakdown of costs"
            },
            {
                "name": "reasoning",
                "display_name": "Reasoning",
                "type": "string",
                "description": "The detailed reasoning chain from the model"
            },
            {
                "name": "refusal",
                "display_name": "Refusal",
                "type": "string",
                "description": "Model refusal response (if any)"
            }
        ],
        "pricing": {
            "reference": "https://openrouter.ai/models",
            "items": [
                {
                    "key": "input_cost_per_million",
                    "label": "Input Tokens (per 1M)",
                    "cost": 0.09999999999999999,
                    "currency": "USD"
                },
                {
                    "key": "output_cost_per_million",
                    "label": "Output Tokens (per 1M)",
                    "cost": 0.39999999999999997,
                    "currency": "USD"
                }
            ]
        },
        "id": "google-gemini-2-5-flash-lite-preview-06-17"
    },
    {
        "display_name": "Google: Gemini 2.5 Pro",
        "description": "Gemini 2.5 Pro is Google’s state-of-the-art AI model designed for advanced reasoning, coding, mathematics, and scientific tasks. It employs “thinking” capabilities, enabling it to reason through responses with enhanced accuracy and nuanced context handling. Gemini 2.5 Pro achieves top-tier performance on multiple benchmarks, including first-place positioning on the LMArena leaderboard, reflecting superior human-preference alignment and complex problem-solving abilities.",
        "category": "llm",
        "provider": "google",
        "accepts_plugins": true,
        "model_id": "google/gemini-2.5-pro",
        "context_length": 1048576,
        "supported_parameters": [
            "include_reasoning",
            "max_tokens",
            "reasoning",
            "response_format",
            "seed",
            "stop",
            "structured_outputs",
            "temperature",
            "tool_choice",
            "tools",
            "top_p"
        ],
        "inputs": [
            {
                "name": "system_prompt",
                "display_name": "System Prompt",
                "type": "string or message",
                "description": "System prompt for the model",
                "default": null
            },
            {
                "name": "messages",
                "display_name": "Messages",
                "type": "array of messages or message or string",
                "description": "Array of chat messages",
                "required": true
            },
            {
                "name": "tools",
                "display_name": "Tools",
                "type": "tool",
                "description": "Array of tools to use",
                "default": null,
                "allow_multiple": true
            },
            {
                "name": "temperature",
                "display_name": "Temperature",
                "type": "number",
                "description": "Controls randomness (0-2)",
                "default": null
            },
            {
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "type": "number",
                "description": "Maximum tokens to generate",
                "default": null
            },
            {
                "name": "top_p",
                "display_name": "Top P",
                "type": "number",
                "description": "Controls diversity via nucleus sampling",
                "default": null
            },
            {
                "name": "include_reasoning",
                "display_name": "Include Reasoning",
                "type": "boolean",
                "description": "Include reasoning in response",
                "default": null
            },
            {
                "name": "reasoning",
                "display_name": "Reasoning",
                "type": "boolean",
                "description": "Internal reasoning mode",
                "default": null
            },
            {
                "name": "response_format",
                "display_name": "Response Format",
                "type": "string or object",
                "description": "Output format specification",
                "default": null
            },
            {
                "name": "seed",
                "display_name": "Seed",
                "type": "number",
                "description": "Deterministic outputs",
                "default": null
            },
            {
                "name": "stop",
                "display_name": "Stop",
                "type": "string or array",
                "description": "Custom stop sequences",
                "default": null
            },
            {
                "name": "structured_outputs",
                "display_name": "Structured Outputs",
                "type": "string or object",
                "description": "JSON schema enforcement",
                "default": null
            },
            {
                "name": "tool_choice",
                "display_name": "Tool Choice",
                "type": "string",
                "description": "Tool selection control",
                "default": null
            }
        ],
        "outputs": [
            {
                "name": "content",
                "display_name": "Content",
                "can_stream": true,
                "type": "string",
                "description": "The content portion of the generated response message."
            },
            {
                "name": "message",
                "display_name": "Message",
                "type": "message",
                "can_stream": true,
                "description": "The full generated response message."
            },
            {
                "name": "role",
                "display_name": "Role",
                "can_stream": true,
                "type": "string",
                "description": "Role of the response (usually 'assistant')"
            },
            {
                "name": "tool_calls",
                "display_name": "Tool Calls",
                "type": "array of tools",
                "description": "Tool calls made by the model"
            },
            {
                "name": "finish_reason",
                "display_name": "Finish Reason",
                "type": "string",
                "description": "Why the completion finished"
            },
            {
                "name": "usage",
                "display_name": "Token Usage",
                "type": "object",
                "description": "Token usage statistics"
            },
            {
                "name": "cost_total",
                "display_name": "Total Cost",
                "type": "number",
                "description": "Total cost for processing this request (USD)"
            },
            {
                "name": "cost_itemized",
                "display_name": "Itemized Cost",
                "type": "array",
                "description": "Detailed breakdown of costs"
            },
            {
                "name": "reasoning",
                "display_name": "Reasoning",
                "type": "string",
                "description": "The detailed reasoning chain from the model"
            },
            {
                "name": "refusal",
                "display_name": "Refusal",
                "type": "string",
                "description": "Model refusal response (if any)"
            }
        ],
        "pricing": {
            "reference": "https://openrouter.ai/models",
            "items": [
                {
                    "key": "input_cost_per_million",
                    "label": "Input Tokens (per 1M)",
                    "cost": 1.25,
                    "currency": "USD"
                },
                {
                    "key": "output_cost_per_million",
                    "label": "Output Tokens (per 1M)",
                    "cost": 10,
                    "currency": "USD"
                }
            ]
        },
        "id": "google-gemini-2-5-pro"
    },
    {
        "display_name": "Google: Gemini 2.5 Pro Experimental",
        "description": "This model has been deprecated by Google in favor of the (paid Preview model)[google/gemini-2.5-pro-preview]\n \nGemini 2.5 Pro is Google’s state-of-the-art AI model designed for advanced reasoning, coding, mathematics, and scientific tasks. It employs “thinking” capabilities, enabling it to reason through responses with enhanced accuracy and nuanced context handling. Gemini 2.5 Pro achieves top-tier performance on multiple benchmarks, including first-place positioning on the LMArena leaderboard, reflecting superior human-preference alignment and complex problem-solving abilities.",
        "category": "llm",
        "provider": "google",
        "accepts_plugins": true,
        "model_id": "google/gemini-2.5-pro-exp-03-25",
        "context_length": 1048576,
        "supported_parameters": [
            "max_tokens",
            "response_format",
            "seed",
            "stop",
            "structured_outputs",
            "temperature",
            "tool_choice",
            "tools",
            "top_p"
        ],
        "inputs": [
            {
                "name": "system_prompt",
                "display_name": "System Prompt",
                "type": "string or message",
                "description": "System prompt for the model",
                "default": null
            },
            {
                "name": "messages",
                "display_name": "Messages",
                "type": "array of messages or message or string",
                "description": "Array of chat messages",
                "required": true
            },
            {
                "name": "tools",
                "display_name": "Tools",
                "type": "tool",
                "description": "Array of tools to use",
                "default": null,
                "allow_multiple": true
            },
            {
                "name": "temperature",
                "display_name": "Temperature",
                "type": "number",
                "description": "Controls randomness (0-2)",
                "default": null
            },
            {
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "type": "number",
                "description": "Maximum tokens to generate",
                "default": null
            },
            {
                "name": "top_p",
                "display_name": "Top P",
                "type": "number",
                "description": "Controls diversity via nucleus sampling",
                "default": null
            },
            {
                "name": "response_format",
                "display_name": "Response Format",
                "type": "string or object",
                "description": "Output format specification",
                "default": null
            },
            {
                "name": "seed",
                "display_name": "Seed",
                "type": "number",
                "description": "Deterministic outputs",
                "default": null
            },
            {
                "name": "stop",
                "display_name": "Stop",
                "type": "string or array",
                "description": "Custom stop sequences",
                "default": null
            },
            {
                "name": "structured_outputs",
                "display_name": "Structured Outputs",
                "type": "string or object",
                "description": "JSON schema enforcement",
                "default": null
            },
            {
                "name": "tool_choice",
                "display_name": "Tool Choice",
                "type": "string",
                "description": "Tool selection control",
                "default": null
            }
        ],
        "outputs": [
            {
                "name": "content",
                "display_name": "Content",
                "can_stream": true,
                "type": "string",
                "description": "The content portion of the generated response message."
            },
            {
                "name": "message",
                "display_name": "Message",
                "type": "message",
                "can_stream": true,
                "description": "The full generated response message."
            },
            {
                "name": "role",
                "display_name": "Role",
                "can_stream": true,
                "type": "string",
                "description": "Role of the response (usually 'assistant')"
            },
            {
                "name": "tool_calls",
                "display_name": "Tool Calls",
                "type": "array of tools",
                "description": "Tool calls made by the model"
            },
            {
                "name": "finish_reason",
                "display_name": "Finish Reason",
                "type": "string",
                "description": "Why the completion finished"
            },
            {
                "name": "usage",
                "display_name": "Token Usage",
                "type": "object",
                "description": "Token usage statistics"
            },
            {
                "name": "cost_total",
                "display_name": "Total Cost",
                "type": "number",
                "description": "Total cost for processing this request (USD)"
            },
            {
                "name": "cost_itemized",
                "display_name": "Itemized Cost",
                "type": "array",
                "description": "Detailed breakdown of costs"
            }
        ],
        "pricing": {
            "reference": "https://openrouter.ai/models",
            "items": [
                {
                    "key": "input_cost_per_million",
                    "label": "Input Tokens (per 1M)",
                    "cost": 0,
                    "currency": "USD"
                },
                {
                    "key": "output_cost_per_million",
                    "label": "Output Tokens (per 1M)",
                    "cost": 0,
                    "currency": "USD"
                }
            ]
        },
        "id": "google-gemini-2-5-pro-exp-03-25"
    },
    {
        "display_name": "Google: Gemini 2.5 Pro Preview 06-05",
        "description": "Gemini 2.5 Pro is Google’s state-of-the-art AI model designed for advanced reasoning, coding, mathematics, and scientific tasks. It employs “thinking” capabilities, enabling it to reason through responses with enhanced accuracy and nuanced context handling. Gemini 2.5 Pro achieves top-tier performance on multiple benchmarks, including first-place positioning on the LMArena leaderboard, reflecting superior human-preference alignment and complex problem-solving abilities.\n",
        "category": "llm",
        "provider": "google",
        "accepts_plugins": true,
        "model_id": "google/gemini-2.5-pro-preview",
        "context_length": 1048576,
        "supported_parameters": [
            "include_reasoning",
            "max_tokens",
            "reasoning",
            "response_format",
            "seed",
            "stop",
            "structured_outputs",
            "temperature",
            "tool_choice",
            "tools",
            "top_p"
        ],
        "inputs": [
            {
                "name": "system_prompt",
                "display_name": "System Prompt",
                "type": "string or message",
                "description": "System prompt for the model",
                "default": null
            },
            {
                "name": "messages",
                "display_name": "Messages",
                "type": "array of messages or message or string",
                "description": "Array of chat messages",
                "required": true
            },
            {
                "name": "tools",
                "display_name": "Tools",
                "type": "tool",
                "description": "Array of tools to use",
                "default": null,
                "allow_multiple": true
            },
            {
                "name": "temperature",
                "display_name": "Temperature",
                "type": "number",
                "description": "Controls randomness (0-2)",
                "default": null
            },
            {
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "type": "number",
                "description": "Maximum tokens to generate",
                "default": null
            },
            {
                "name": "top_p",
                "display_name": "Top P",
                "type": "number",
                "description": "Controls diversity via nucleus sampling",
                "default": null
            },
            {
                "name": "include_reasoning",
                "display_name": "Include Reasoning",
                "type": "boolean",
                "description": "Include reasoning in response",
                "default": null
            },
            {
                "name": "reasoning",
                "display_name": "Reasoning",
                "type": "boolean",
                "description": "Internal reasoning mode",
                "default": null
            },
            {
                "name": "response_format",
                "display_name": "Response Format",
                "type": "string or object",
                "description": "Output format specification",
                "default": null
            },
            {
                "name": "seed",
                "display_name": "Seed",
                "type": "number",
                "description": "Deterministic outputs",
                "default": null
            },
            {
                "name": "stop",
                "display_name": "Stop",
                "type": "string or array",
                "description": "Custom stop sequences",
                "default": null
            },
            {
                "name": "structured_outputs",
                "display_name": "Structured Outputs",
                "type": "string or object",
                "description": "JSON schema enforcement",
                "default": null
            },
            {
                "name": "tool_choice",
                "display_name": "Tool Choice",
                "type": "string",
                "description": "Tool selection control",
                "default": null
            }
        ],
        "outputs": [
            {
                "name": "content",
                "display_name": "Content",
                "can_stream": true,
                "type": "string",
                "description": "The content portion of the generated response message."
            },
            {
                "name": "message",
                "display_name": "Message",
                "type": "message",
                "can_stream": true,
                "description": "The full generated response message."
            },
            {
                "name": "role",
                "display_name": "Role",
                "can_stream": true,
                "type": "string",
                "description": "Role of the response (usually 'assistant')"
            },
            {
                "name": "tool_calls",
                "display_name": "Tool Calls",
                "type": "array of tools",
                "description": "Tool calls made by the model"
            },
            {
                "name": "finish_reason",
                "display_name": "Finish Reason",
                "type": "string",
                "description": "Why the completion finished"
            },
            {
                "name": "usage",
                "display_name": "Token Usage",
                "type": "object",
                "description": "Token usage statistics"
            },
            {
                "name": "cost_total",
                "display_name": "Total Cost",
                "type": "number",
                "description": "Total cost for processing this request (USD)"
            },
            {
                "name": "cost_itemized",
                "display_name": "Itemized Cost",
                "type": "array",
                "description": "Detailed breakdown of costs"
            },
            {
                "name": "reasoning",
                "display_name": "Reasoning",
                "type": "string",
                "description": "The detailed reasoning chain from the model"
            },
            {
                "name": "refusal",
                "display_name": "Refusal",
                "type": "string",
                "description": "Model refusal response (if any)"
            }
        ],
        "pricing": {
            "reference": "https://openrouter.ai/models",
            "items": [
                {
                    "key": "input_cost_per_million",
                    "label": "Input Tokens (per 1M)",
                    "cost": 1.25,
                    "currency": "USD"
                },
                {
                    "key": "output_cost_per_million",
                    "label": "Output Tokens (per 1M)",
                    "cost": 10,
                    "currency": "USD"
                }
            ]
        },
        "id": "google-gemini-2-5-pro-preview"
    },
    {
        "display_name": "Google: Gemini 2.5 Pro Preview 05-06",
        "description": "Gemini 2.5 Pro is Google’s state-of-the-art AI model designed for advanced reasoning, coding, mathematics, and scientific tasks. It employs “thinking” capabilities, enabling it to reason through responses with enhanced accuracy and nuanced context handling. Gemini 2.5 Pro achieves top-tier performance on multiple benchmarks, including first-place positioning on the LMArena leaderboard, reflecting superior human-preference alignment and complex problem-solving abilities.",
        "category": "llm",
        "provider": "google",
        "accepts_plugins": true,
        "model_id": "google/gemini-2.5-pro-preview-05-06",
        "context_length": 1048576,
        "supported_parameters": [
            "include_reasoning",
            "max_tokens",
            "reasoning",
            "response_format",
            "seed",
            "stop",
            "structured_outputs",
            "temperature",
            "tool_choice",
            "tools",
            "top_p"
        ],
        "inputs": [
            {
                "name": "system_prompt",
                "display_name": "System Prompt",
                "type": "string or message",
                "description": "System prompt for the model",
                "default": null
            },
            {
                "name": "messages",
                "display_name": "Messages",
                "type": "array of messages or message or string",
                "description": "Array of chat messages",
                "required": true
            },
            {
                "name": "tools",
                "display_name": "Tools",
                "type": "tool",
                "description": "Array of tools to use",
                "default": null,
                "allow_multiple": true
            },
            {
                "name": "temperature",
                "display_name": "Temperature",
                "type": "number",
                "description": "Controls randomness (0-2)",
                "default": null
            },
            {
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "type": "number",
                "description": "Maximum tokens to generate",
                "default": null
            },
            {
                "name": "top_p",
                "display_name": "Top P",
                "type": "number",
                "description": "Controls diversity via nucleus sampling",
                "default": null
            },
            {
                "name": "include_reasoning",
                "display_name": "Include Reasoning",
                "type": "boolean",
                "description": "Include reasoning in response",
                "default": null
            },
            {
                "name": "reasoning",
                "display_name": "Reasoning",
                "type": "boolean",
                "description": "Internal reasoning mode",
                "default": null
            },
            {
                "name": "response_format",
                "display_name": "Response Format",
                "type": "string or object",
                "description": "Output format specification",
                "default": null
            },
            {
                "name": "seed",
                "display_name": "Seed",
                "type": "number",
                "description": "Deterministic outputs",
                "default": null
            },
            {
                "name": "stop",
                "display_name": "Stop",
                "type": "string or array",
                "description": "Custom stop sequences",
                "default": null
            },
            {
                "name": "structured_outputs",
                "display_name": "Structured Outputs",
                "type": "string or object",
                "description": "JSON schema enforcement",
                "default": null
            },
            {
                "name": "tool_choice",
                "display_name": "Tool Choice",
                "type": "string",
                "description": "Tool selection control",
                "default": null
            }
        ],
        "outputs": [
            {
                "name": "content",
                "display_name": "Content",
                "can_stream": true,
                "type": "string",
                "description": "The content portion of the generated response message."
            },
            {
                "name": "message",
                "display_name": "Message",
                "type": "message",
                "can_stream": true,
                "description": "The full generated response message."
            },
            {
                "name": "role",
                "display_name": "Role",
                "can_stream": true,
                "type": "string",
                "description": "Role of the response (usually 'assistant')"
            },
            {
                "name": "tool_calls",
                "display_name": "Tool Calls",
                "type": "array of tools",
                "description": "Tool calls made by the model"
            },
            {
                "name": "finish_reason",
                "display_name": "Finish Reason",
                "type": "string",
                "description": "Why the completion finished"
            },
            {
                "name": "usage",
                "display_name": "Token Usage",
                "type": "object",
                "description": "Token usage statistics"
            },
            {
                "name": "cost_total",
                "display_name": "Total Cost",
                "type": "number",
                "description": "Total cost for processing this request (USD)"
            },
            {
                "name": "cost_itemized",
                "display_name": "Itemized Cost",
                "type": "array",
                "description": "Detailed breakdown of costs"
            },
            {
                "name": "reasoning",
                "display_name": "Reasoning",
                "type": "string",
                "description": "The detailed reasoning chain from the model"
            },
            {
                "name": "refusal",
                "display_name": "Refusal",
                "type": "string",
                "description": "Model refusal response (if any)"
            }
        ],
        "pricing": {
            "reference": "https://openrouter.ai/models",
            "items": [
                {
                    "key": "input_cost_per_million",
                    "label": "Input Tokens (per 1M)",
                    "cost": 1.25,
                    "currency": "USD"
                },
                {
                    "key": "output_cost_per_million",
                    "label": "Output Tokens (per 1M)",
                    "cost": 10,
                    "currency": "USD"
                }
            ]
        },
        "id": "google-gemini-2-5-pro-preview-05-06"
    },
    {
        "display_name": "Google: Gemini 1.5 Flash ",
        "description": "Gemini 1.5 Flash is a foundation model that performs well at a variety of multimodal tasks such as visual understanding, classification, summarization, and creating content from image, audio and video. It's adept at processing visual and text inputs such as photographs, documents, infographics, and screenshots.\n\nGemini 1.5 Flash is designed for high-volume, high-frequency tasks where cost and latency matter. On most common tasks, Flash achieves comparable quality to other Gemini Pro models at a significantly reduced cost. Flash is well-suited for applications like chat assistants and on-demand content generation where speed and scale matter.\n\nUsage of Gemini is subject to Google's [Gemini Terms of Use](https://ai.google.dev/terms).\n\n#multimodal",
        "category": "llm",
        "provider": "google",
        "accepts_plugins": true,
        "model_id": "google/gemini-flash-1.5",
        "context_length": 1000000,
        "supported_parameters": [
            "frequency_penalty",
            "max_tokens",
            "presence_penalty",
            "response_format",
            "seed",
            "stop",
            "structured_outputs",
            "temperature",
            "tool_choice",
            "tools",
            "top_p"
        ],
        "inputs": [
            {
                "name": "system_prompt",
                "display_name": "System Prompt",
                "type": "string or message",
                "description": "System prompt for the model",
                "default": null
            },
            {
                "name": "messages",
                "display_name": "Messages",
                "type": "array of messages or message or string",
                "description": "Array of chat messages",
                "required": true
            },
            {
                "name": "tools",
                "display_name": "Tools",
                "type": "tool",
                "description": "Array of tools to use",
                "default": null,
                "allow_multiple": true
            },
            {
                "name": "temperature",
                "display_name": "Temperature",
                "type": "number",
                "description": "Controls randomness (0-2)",
                "default": null
            },
            {
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "type": "number",
                "description": "Maximum tokens to generate",
                "default": null
            },
            {
                "name": "top_p",
                "display_name": "Top P",
                "type": "number",
                "description": "Controls diversity via nucleus sampling",
                "default": null
            },
            {
                "name": "frequency_penalty",
                "display_name": "Frequency Penalty",
                "type": "number",
                "description": "Reduces repetition (-2 to 2)",
                "default": null
            },
            {
                "name": "presence_penalty",
                "display_name": "Presence Penalty",
                "type": "number",
                "description": "Encourages new topics (-2 to 2)",
                "default": null
            },
            {
                "name": "response_format",
                "display_name": "Response Format",
                "type": "string or object",
                "description": "Output format specification",
                "default": null
            },
            {
                "name": "seed",
                "display_name": "Seed",
                "type": "number",
                "description": "Deterministic outputs",
                "default": null
            },
            {
                "name": "stop",
                "display_name": "Stop",
                "type": "string or array",
                "description": "Custom stop sequences",
                "default": null
            },
            {
                "name": "structured_outputs",
                "display_name": "Structured Outputs",
                "type": "string or object",
                "description": "JSON schema enforcement",
                "default": null
            },
            {
                "name": "tool_choice",
                "display_name": "Tool Choice",
                "type": "string",
                "description": "Tool selection control",
                "default": null
            }
        ],
        "outputs": [
            {
                "name": "content",
                "display_name": "Content",
                "can_stream": true,
                "type": "string",
                "description": "The content portion of the generated response message."
            },
            {
                "name": "message",
                "display_name": "Message",
                "type": "message",
                "can_stream": true,
                "description": "The full generated response message."
            },
            {
                "name": "role",
                "display_name": "Role",
                "can_stream": true,
                "type": "string",
                "description": "Role of the response (usually 'assistant')"
            },
            {
                "name": "tool_calls",
                "display_name": "Tool Calls",
                "type": "array of tools",
                "description": "Tool calls made by the model"
            },
            {
                "name": "finish_reason",
                "display_name": "Finish Reason",
                "type": "string",
                "description": "Why the completion finished"
            },
            {
                "name": "usage",
                "display_name": "Token Usage",
                "type": "object",
                "description": "Token usage statistics"
            },
            {
                "name": "cost_total",
                "display_name": "Total Cost",
                "type": "number",
                "description": "Total cost for processing this request (USD)"
            },
            {
                "name": "cost_itemized",
                "display_name": "Itemized Cost",
                "type": "array",
                "description": "Detailed breakdown of costs"
            }
        ],
        "pricing": {
            "reference": "https://openrouter.ai/models",
            "items": [
                {
                    "key": "input_cost_per_million",
                    "label": "Input Tokens (per 1M)",
                    "cost": 0.075,
                    "currency": "USD"
                },
                {
                    "key": "output_cost_per_million",
                    "label": "Output Tokens (per 1M)",
                    "cost": 0.3,
                    "currency": "USD"
                }
            ]
        },
        "id": "google-gemini-flash-1-5"
    },
    {
        "display_name": "Google: Gemini 1.5 Flash 8B",
        "description": "Gemini Flash 1.5 8B is optimized for speed and efficiency, offering enhanced performance in small prompt tasks like chat, transcription, and translation. With reduced latency, it is highly effective for real-time and large-scale operations. This model focuses on cost-effective solutions while maintaining high-quality results.\n\n[Click here to learn more about this model](https://developers.googleblog.com/en/gemini-15-flash-8b-is-now-generally-available-for-use/).\n\nUsage of Gemini is subject to Google's [Gemini Terms of Use](https://ai.google.dev/terms).",
        "category": "llm",
        "provider": "google",
        "accepts_plugins": true,
        "model_id": "google/gemini-flash-1.5-8b",
        "context_length": 1000000,
        "supported_parameters": [
            "frequency_penalty",
            "max_tokens",
            "presence_penalty",
            "response_format",
            "seed",
            "stop",
            "structured_outputs",
            "temperature",
            "tool_choice",
            "tools",
            "top_p"
        ],
        "inputs": [
            {
                "name": "system_prompt",
                "display_name": "System Prompt",
                "type": "string or message",
                "description": "System prompt for the model",
                "default": null
            },
            {
                "name": "messages",
                "display_name": "Messages",
                "type": "array of messages or message or string",
                "description": "Array of chat messages",
                "required": true
            },
            {
                "name": "tools",
                "display_name": "Tools",
                "type": "tool",
                "description": "Array of tools to use",
                "default": null,
                "allow_multiple": true
            },
            {
                "name": "temperature",
                "display_name": "Temperature",
                "type": "number",
                "description": "Controls randomness (0-2)",
                "default": null
            },
            {
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "type": "number",
                "description": "Maximum tokens to generate",
                "default": null
            },
            {
                "name": "top_p",
                "display_name": "Top P",
                "type": "number",
                "description": "Controls diversity via nucleus sampling",
                "default": null
            },
            {
                "name": "frequency_penalty",
                "display_name": "Frequency Penalty",
                "type": "number",
                "description": "Reduces repetition (-2 to 2)",
                "default": null
            },
            {
                "name": "presence_penalty",
                "display_name": "Presence Penalty",
                "type": "number",
                "description": "Encourages new topics (-2 to 2)",
                "default": null
            },
            {
                "name": "response_format",
                "display_name": "Response Format",
                "type": "string or object",
                "description": "Output format specification",
                "default": null
            },
            {
                "name": "seed",
                "display_name": "Seed",
                "type": "number",
                "description": "Deterministic outputs",
                "default": null
            },
            {
                "name": "stop",
                "display_name": "Stop",
                "type": "string or array",
                "description": "Custom stop sequences",
                "default": null
            },
            {
                "name": "structured_outputs",
                "display_name": "Structured Outputs",
                "type": "string or object",
                "description": "JSON schema enforcement",
                "default": null
            },
            {
                "name": "tool_choice",
                "display_name": "Tool Choice",
                "type": "string",
                "description": "Tool selection control",
                "default": null
            }
        ],
        "outputs": [
            {
                "name": "content",
                "display_name": "Content",
                "can_stream": true,
                "type": "string",
                "description": "The content portion of the generated response message."
            },
            {
                "name": "message",
                "display_name": "Message",
                "type": "message",
                "can_stream": true,
                "description": "The full generated response message."
            },
            {
                "name": "role",
                "display_name": "Role",
                "can_stream": true,
                "type": "string",
                "description": "Role of the response (usually 'assistant')"
            },
            {
                "name": "tool_calls",
                "display_name": "Tool Calls",
                "type": "array of tools",
                "description": "Tool calls made by the model"
            },
            {
                "name": "finish_reason",
                "display_name": "Finish Reason",
                "type": "string",
                "description": "Why the completion finished"
            },
            {
                "name": "usage",
                "display_name": "Token Usage",
                "type": "object",
                "description": "Token usage statistics"
            },
            {
                "name": "cost_total",
                "display_name": "Total Cost",
                "type": "number",
                "description": "Total cost for processing this request (USD)"
            },
            {
                "name": "cost_itemized",
                "display_name": "Itemized Cost",
                "type": "array",
                "description": "Detailed breakdown of costs"
            }
        ],
        "pricing": {
            "reference": "https://openrouter.ai/models",
            "items": [
                {
                    "key": "input_cost_per_million",
                    "label": "Input Tokens (per 1M)",
                    "cost": 0.0375,
                    "currency": "USD"
                },
                {
                    "key": "output_cost_per_million",
                    "label": "Output Tokens (per 1M)",
                    "cost": 0.15,
                    "currency": "USD"
                }
            ]
        },
        "id": "google-gemini-flash-1-5-8b"
    },
    {
        "display_name": "Google: Gemini 1.5 Pro",
        "description": "Google's latest multimodal model, supports image and video[0] in text or chat prompts.\n\nOptimized for language tasks including:\n\n- Code generation\n- Text generation\n- Text editing\n- Problem solving\n- Recommendations\n- Information extraction\n- Data extraction or generation\n- AI agents\n\nUsage of Gemini is subject to Google's [Gemini Terms of Use](https://ai.google.dev/terms).\n\n* [0]: Video input is not available through OpenRouter at this time.",
        "category": "llm",
        "provider": "google",
        "accepts_plugins": true,
        "model_id": "google/gemini-pro-1.5",
        "context_length": 2000000,
        "supported_parameters": [
            "frequency_penalty",
            "max_tokens",
            "presence_penalty",
            "response_format",
            "seed",
            "stop",
            "structured_outputs",
            "temperature",
            "tool_choice",
            "tools",
            "top_p"
        ],
        "inputs": [
            {
                "name": "system_prompt",
                "display_name": "System Prompt",
                "type": "string or message",
                "description": "System prompt for the model",
                "default": null
            },
            {
                "name": "messages",
                "display_name": "Messages",
                "type": "array of messages or message or string",
                "description": "Array of chat messages",
                "required": true
            },
            {
                "name": "tools",
                "display_name": "Tools",
                "type": "tool",
                "description": "Array of tools to use",
                "default": null,
                "allow_multiple": true
            },
            {
                "name": "temperature",
                "display_name": "Temperature",
                "type": "number",
                "description": "Controls randomness (0-2)",
                "default": null
            },
            {
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "type": "number",
                "description": "Maximum tokens to generate",
                "default": null
            },
            {
                "name": "top_p",
                "display_name": "Top P",
                "type": "number",
                "description": "Controls diversity via nucleus sampling",
                "default": null
            },
            {
                "name": "frequency_penalty",
                "display_name": "Frequency Penalty",
                "type": "number",
                "description": "Reduces repetition (-2 to 2)",
                "default": null
            },
            {
                "name": "presence_penalty",
                "display_name": "Presence Penalty",
                "type": "number",
                "description": "Encourages new topics (-2 to 2)",
                "default": null
            },
            {
                "name": "response_format",
                "display_name": "Response Format",
                "type": "string or object",
                "description": "Output format specification",
                "default": null
            },
            {
                "name": "seed",
                "display_name": "Seed",
                "type": "number",
                "description": "Deterministic outputs",
                "default": null
            },
            {
                "name": "stop",
                "display_name": "Stop",
                "type": "string or array",
                "description": "Custom stop sequences",
                "default": null
            },
            {
                "name": "structured_outputs",
                "display_name": "Structured Outputs",
                "type": "string or object",
                "description": "JSON schema enforcement",
                "default": null
            },
            {
                "name": "tool_choice",
                "display_name": "Tool Choice",
                "type": "string",
                "description": "Tool selection control",
                "default": null
            }
        ],
        "outputs": [
            {
                "name": "content",
                "display_name": "Content",
                "can_stream": true,
                "type": "string",
                "description": "The content portion of the generated response message."
            },
            {
                "name": "message",
                "display_name": "Message",
                "type": "message",
                "can_stream": true,
                "description": "The full generated response message."
            },
            {
                "name": "role",
                "display_name": "Role",
                "can_stream": true,
                "type": "string",
                "description": "Role of the response (usually 'assistant')"
            },
            {
                "name": "tool_calls",
                "display_name": "Tool Calls",
                "type": "array of tools",
                "description": "Tool calls made by the model"
            },
            {
                "name": "finish_reason",
                "display_name": "Finish Reason",
                "type": "string",
                "description": "Why the completion finished"
            },
            {
                "name": "usage",
                "display_name": "Token Usage",
                "type": "object",
                "description": "Token usage statistics"
            },
            {
                "name": "cost_total",
                "display_name": "Total Cost",
                "type": "number",
                "description": "Total cost for processing this request (USD)"
            },
            {
                "name": "cost_itemized",
                "display_name": "Itemized Cost",
                "type": "array",
                "description": "Detailed breakdown of costs"
            }
        ],
        "pricing": {
            "reference": "https://openrouter.ai/models",
            "items": [
                {
                    "key": "input_cost_per_million",
                    "label": "Input Tokens (per 1M)",
                    "cost": 1.25,
                    "currency": "USD"
                },
                {
                    "key": "output_cost_per_million",
                    "label": "Output Tokens (per 1M)",
                    "cost": 5,
                    "currency": "USD"
                }
            ]
        },
        "id": "google-gemini-pro-1-5"
    },
    {
        "display_name": "Google: Gemma 2 27B",
        "description": "Gemma 2 27B by Google is an open model built from the same research and technology used to create the [Gemini models](/models?q=gemini).\n\nGemma models are well-suited for a variety of text generation tasks, including question answering, summarization, and reasoning.\n\nSee the [launch announcement](https://blog.google/technology/developers/google-gemma-2/) for more details. Usage of Gemma is subject to Google's [Gemma Terms of Use](https://ai.google.dev/gemma/terms).",
        "category": "llm",
        "provider": "google",
        "accepts_plugins": false,
        "model_id": "google/gemma-2-27b-it",
        "context_length": 8192,
        "supported_parameters": [
            "frequency_penalty",
            "logit_bias",
            "max_tokens",
            "min_p",
            "presence_penalty",
            "repetition_penalty",
            "response_format",
            "stop",
            "structured_outputs",
            "temperature",
            "top_k",
            "top_p"
        ],
        "inputs": [
            {
                "name": "system_prompt",
                "display_name": "System Prompt",
                "type": "string or message",
                "description": "System prompt for the model",
                "default": null
            },
            {
                "name": "messages",
                "display_name": "Messages",
                "type": "array of messages or message or string",
                "description": "Array of chat messages",
                "required": true
            },
            {
                "name": "temperature",
                "display_name": "Temperature",
                "type": "number",
                "description": "Controls randomness (0-2)",
                "default": null
            },
            {
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "type": "number",
                "description": "Maximum tokens to generate",
                "default": null
            },
            {
                "name": "top_p",
                "display_name": "Top P",
                "type": "number",
                "description": "Controls diversity via nucleus sampling",
                "default": null
            },
            {
                "name": "frequency_penalty",
                "display_name": "Frequency Penalty",
                "type": "number",
                "description": "Reduces repetition (-2 to 2)",
                "default": null
            },
            {
                "name": "presence_penalty",
                "display_name": "Presence Penalty",
                "type": "number",
                "description": "Encourages new topics (-2 to 2)",
                "default": null
            },
            {
                "name": "response_format",
                "display_name": "Response Format",
                "type": "string or object",
                "description": "Output format specification",
                "default": null
            },
            {
                "name": "stop",
                "display_name": "Stop",
                "type": "string or array",
                "description": "Custom stop sequences",
                "default": null
            },
            {
                "name": "structured_outputs",
                "display_name": "Structured Outputs",
                "type": "string or object",
                "description": "JSON schema enforcement",
                "default": null
            }
        ],
        "outputs": [
            {
                "name": "content",
                "display_name": "Content",
                "can_stream": true,
                "type": "string",
                "description": "The content portion of the generated response message."
            },
            {
                "name": "message",
                "display_name": "Message",
                "type": "message",
                "can_stream": true,
                "description": "The full generated response message."
            },
            {
                "name": "role",
                "display_name": "Role",
                "can_stream": true,
                "type": "string",
                "description": "Role of the response (usually 'assistant')"
            },
            {
                "name": "finish_reason",
                "display_name": "Finish Reason",
                "type": "string",
                "description": "Why the completion finished"
            },
            {
                "name": "usage",
                "display_name": "Token Usage",
                "type": "object",
                "description": "Token usage statistics"
            },
            {
                "name": "cost_total",
                "display_name": "Total Cost",
                "type": "number",
                "description": "Total cost for processing this request (USD)"
            },
            {
                "name": "cost_itemized",
                "display_name": "Itemized Cost",
                "type": "array",
                "description": "Detailed breakdown of costs"
            }
        ],
        "pricing": {
            "reference": "https://openrouter.ai/models",
            "items": [
                {
                    "key": "input_cost_per_million",
                    "label": "Input Tokens (per 1M)",
                    "cost": 0.65,
                    "currency": "USD"
                },
                {
                    "key": "output_cost_per_million",
                    "label": "Output Tokens (per 1M)",
                    "cost": 0.65,
                    "currency": "USD"
                }
            ]
        },
        "id": "google-gemma-2-27b-it"
    },
    {
        "display_name": "Google: Gemma 2 9B",
        "description": "Gemma 2 9B by Google is an advanced, open-source language model that sets a new standard for efficiency and performance in its size class.\n\nDesigned for a wide variety of tasks, it empowers developers and researchers to build innovative applications, while maintaining accessibility, safety, and cost-effectiveness.\n\nSee the [launch announcement](https://blog.google/technology/developers/google-gemma-2/) for more details. Usage of Gemma is subject to Google's [Gemma Terms of Use](https://ai.google.dev/gemma/terms).",
        "category": "llm",
        "provider": "google",
        "accepts_plugins": false,
        "model_id": "google/gemma-2-9b-it",
        "context_length": 8192,
        "supported_parameters": [
            "frequency_penalty",
            "logit_bias",
            "logprobs",
            "max_tokens",
            "min_p",
            "presence_penalty",
            "repetition_penalty",
            "response_format",
            "seed",
            "stop",
            "temperature",
            "top_k",
            "top_logprobs",
            "top_p"
        ],
        "inputs": [
            {
                "name": "system_prompt",
                "display_name": "System Prompt",
                "type": "string or message",
                "description": "System prompt for the model",
                "default": null
            },
            {
                "name": "messages",
                "display_name": "Messages",
                "type": "array of messages or message or string",
                "description": "Array of chat messages",
                "required": true
            },
            {
                "name": "temperature",
                "display_name": "Temperature",
                "type": "number",
                "description": "Controls randomness (0-2)",
                "default": null
            },
            {
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "type": "number",
                "description": "Maximum tokens to generate",
                "default": null
            },
            {
                "name": "top_p",
                "display_name": "Top P",
                "type": "number",
                "description": "Controls diversity via nucleus sampling",
                "default": null
            },
            {
                "name": "frequency_penalty",
                "display_name": "Frequency Penalty",
                "type": "number",
                "description": "Reduces repetition (-2 to 2)",
                "default": null
            },
            {
                "name": "presence_penalty",
                "display_name": "Presence Penalty",
                "type": "number",
                "description": "Encourages new topics (-2 to 2)",
                "default": null
            },
            {
                "name": "response_format",
                "display_name": "Response Format",
                "type": "string or object",
                "description": "Output format specification",
                "default": null
            },
            {
                "name": "seed",
                "display_name": "Seed",
                "type": "number",
                "description": "Deterministic outputs",
                "default": null
            },
            {
                "name": "stop",
                "display_name": "Stop",
                "type": "string or array",
                "description": "Custom stop sequences",
                "default": null
            }
        ],
        "outputs": [
            {
                "name": "content",
                "display_name": "Content",
                "can_stream": true,
                "type": "string",
                "description": "The content portion of the generated response message."
            },
            {
                "name": "message",
                "display_name": "Message",
                "type": "message",
                "can_stream": true,
                "description": "The full generated response message."
            },
            {
                "name": "role",
                "display_name": "Role",
                "can_stream": true,
                "type": "string",
                "description": "Role of the response (usually 'assistant')"
            },
            {
                "name": "finish_reason",
                "display_name": "Finish Reason",
                "type": "string",
                "description": "Why the completion finished"
            },
            {
                "name": "usage",
                "display_name": "Token Usage",
                "type": "object",
                "description": "Token usage statistics"
            },
            {
                "name": "cost_total",
                "display_name": "Total Cost",
                "type": "number",
                "description": "Total cost for processing this request (USD)"
            },
            {
                "name": "cost_itemized",
                "display_name": "Itemized Cost",
                "type": "array",
                "description": "Detailed breakdown of costs"
            },
            {
                "name": "logprobs",
                "display_name": "Log Probabilities",
                "type": "object",
                "description": "Token probabilities and logprobs from the model"
            }
        ],
        "pricing": {
            "reference": "https://openrouter.ai/models",
            "items": [
                {
                    "key": "input_cost_per_million",
                    "label": "Input Tokens (per 1M)",
                    "cost": 0.01,
                    "currency": "USD"
                },
                {
                    "key": "output_cost_per_million",
                    "label": "Output Tokens (per 1M)",
                    "cost": 0.0100008,
                    "currency": "USD"
                }
            ]
        },
        "id": "google-gemma-2-9b-it"
    },
    {
        "display_name": "Google: Gemma 2 9B (free)",
        "description": "Gemma 2 9B by Google is an advanced, open-source language model that sets a new standard for efficiency and performance in its size class.\n\nDesigned for a wide variety of tasks, it empowers developers and researchers to build innovative applications, while maintaining accessibility, safety, and cost-effectiveness.\n\nSee the [launch announcement](https://blog.google/technology/developers/google-gemma-2/) for more details. Usage of Gemma is subject to Google's [Gemma Terms of Use](https://ai.google.dev/gemma/terms).",
        "category": "llm",
        "provider": "google",
        "accepts_plugins": false,
        "model_id": "google/gemma-2-9b-it:free",
        "context_length": 8192,
        "supported_parameters": [
            "frequency_penalty",
            "logit_bias",
            "logprobs",
            "max_tokens",
            "min_p",
            "presence_penalty",
            "repetition_penalty",
            "seed",
            "stop",
            "temperature",
            "top_k",
            "top_logprobs",
            "top_p"
        ],
        "inputs": [
            {
                "name": "system_prompt",
                "display_name": "System Prompt",
                "type": "string or message",
                "description": "System prompt for the model",
                "default": null
            },
            {
                "name": "messages",
                "display_name": "Messages",
                "type": "array of messages or message or string",
                "description": "Array of chat messages",
                "required": true
            },
            {
                "name": "temperature",
                "display_name": "Temperature",
                "type": "number",
                "description": "Controls randomness (0-2)",
                "default": null
            },
            {
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "type": "number",
                "description": "Maximum tokens to generate",
                "default": null
            },
            {
                "name": "top_p",
                "display_name": "Top P",
                "type": "number",
                "description": "Controls diversity via nucleus sampling",
                "default": null
            },
            {
                "name": "frequency_penalty",
                "display_name": "Frequency Penalty",
                "type": "number",
                "description": "Reduces repetition (-2 to 2)",
                "default": null
            },
            {
                "name": "presence_penalty",
                "display_name": "Presence Penalty",
                "type": "number",
                "description": "Encourages new topics (-2 to 2)",
                "default": null
            },
            {
                "name": "seed",
                "display_name": "Seed",
                "type": "number",
                "description": "Deterministic outputs",
                "default": null
            },
            {
                "name": "stop",
                "display_name": "Stop",
                "type": "string or array",
                "description": "Custom stop sequences",
                "default": null
            }
        ],
        "outputs": [
            {
                "name": "content",
                "display_name": "Content",
                "can_stream": true,
                "type": "string",
                "description": "The content portion of the generated response message."
            },
            {
                "name": "message",
                "display_name": "Message",
                "type": "message",
                "can_stream": true,
                "description": "The full generated response message."
            },
            {
                "name": "role",
                "display_name": "Role",
                "can_stream": true,
                "type": "string",
                "description": "Role of the response (usually 'assistant')"
            },
            {
                "name": "finish_reason",
                "display_name": "Finish Reason",
                "type": "string",
                "description": "Why the completion finished"
            },
            {
                "name": "usage",
                "display_name": "Token Usage",
                "type": "object",
                "description": "Token usage statistics"
            },
            {
                "name": "cost_total",
                "display_name": "Total Cost",
                "type": "number",
                "description": "Total cost for processing this request (USD)"
            },
            {
                "name": "cost_itemized",
                "display_name": "Itemized Cost",
                "type": "array",
                "description": "Detailed breakdown of costs"
            },
            {
                "name": "logprobs",
                "display_name": "Log Probabilities",
                "type": "object",
                "description": "Token probabilities and logprobs from the model"
            }
        ],
        "pricing": {
            "reference": "https://openrouter.ai/models",
            "items": [
                {
                    "key": "input_cost_per_million",
                    "label": "Input Tokens (per 1M)",
                    "cost": 0,
                    "currency": "USD"
                },
                {
                    "key": "output_cost_per_million",
                    "label": "Output Tokens (per 1M)",
                    "cost": 0,
                    "currency": "USD"
                }
            ]
        },
        "id": "google-gemma-2-9b-it-free"
    },
    {
        "display_name": "Google: Gemma 3 12B",
        "description": "Gemma 3 introduces multimodality, supporting vision-language input and text outputs. It handles context windows up to 128k tokens, understands over 140 languages, and offers improved math, reasoning, and chat capabilities, including structured outputs and function calling. Gemma 3 12B is the second largest in the family of Gemma 3 models after [Gemma 3 27B](google/gemma-3-27b-it)",
        "category": "llm",
        "provider": "google",
        "accepts_plugins": false,
        "model_id": "google/gemma-3-12b-it",
        "context_length": 96000,
        "supported_parameters": [
            "frequency_penalty",
            "logit_bias",
            "logprobs",
            "max_tokens",
            "min_p",
            "presence_penalty",
            "repetition_penalty",
            "response_format",
            "seed",
            "stop",
            "temperature",
            "top_k",
            "top_logprobs",
            "top_p"
        ],
        "inputs": [
            {
                "name": "system_prompt",
                "display_name": "System Prompt",
                "type": "string or message",
                "description": "System prompt for the model",
                "default": null
            },
            {
                "name": "messages",
                "display_name": "Messages",
                "type": "array of messages or message or string",
                "description": "Array of chat messages",
                "required": true
            },
            {
                "name": "temperature",
                "display_name": "Temperature",
                "type": "number",
                "description": "Controls randomness (0-2)",
                "default": null
            },
            {
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "type": "number",
                "description": "Maximum tokens to generate",
                "default": null
            },
            {
                "name": "top_p",
                "display_name": "Top P",
                "type": "number",
                "description": "Controls diversity via nucleus sampling",
                "default": null
            },
            {
                "name": "frequency_penalty",
                "display_name": "Frequency Penalty",
                "type": "number",
                "description": "Reduces repetition (-2 to 2)",
                "default": null
            },
            {
                "name": "presence_penalty",
                "display_name": "Presence Penalty",
                "type": "number",
                "description": "Encourages new topics (-2 to 2)",
                "default": null
            },
            {
                "name": "response_format",
                "display_name": "Response Format",
                "type": "string or object",
                "description": "Output format specification",
                "default": null
            },
            {
                "name": "seed",
                "display_name": "Seed",
                "type": "number",
                "description": "Deterministic outputs",
                "default": null
            },
            {
                "name": "stop",
                "display_name": "Stop",
                "type": "string or array",
                "description": "Custom stop sequences",
                "default": null
            }
        ],
        "outputs": [
            {
                "name": "content",
                "display_name": "Content",
                "can_stream": true,
                "type": "string",
                "description": "The content portion of the generated response message."
            },
            {
                "name": "message",
                "display_name": "Message",
                "type": "message",
                "can_stream": true,
                "description": "The full generated response message."
            },
            {
                "name": "role",
                "display_name": "Role",
                "can_stream": true,
                "type": "string",
                "description": "Role of the response (usually 'assistant')"
            },
            {
                "name": "finish_reason",
                "display_name": "Finish Reason",
                "type": "string",
                "description": "Why the completion finished"
            },
            {
                "name": "usage",
                "display_name": "Token Usage",
                "type": "object",
                "description": "Token usage statistics"
            },
            {
                "name": "cost_total",
                "display_name": "Total Cost",
                "type": "number",
                "description": "Total cost for processing this request (USD)"
            },
            {
                "name": "cost_itemized",
                "display_name": "Itemized Cost",
                "type": "array",
                "description": "Detailed breakdown of costs"
            },
            {
                "name": "logprobs",
                "display_name": "Log Probabilities",
                "type": "object",
                "description": "Token probabilities and logprobs from the model"
            }
        ],
        "pricing": {
            "reference": "https://openrouter.ai/models",
            "items": [
                {
                    "key": "input_cost_per_million",
                    "label": "Input Tokens (per 1M)",
                    "cost": 0.0481286,
                    "currency": "USD"
                },
                {
                    "key": "output_cost_per_million",
                    "label": "Output Tokens (per 1M)",
                    "cost": 0.192608,
                    "currency": "USD"
                }
            ]
        },
        "id": "google-gemma-3-12b-it"
    },
    {
        "display_name": "Google: Gemma 3 12B (free)",
        "description": "Gemma 3 introduces multimodality, supporting vision-language input and text outputs. It handles context windows up to 128k tokens, understands over 140 languages, and offers improved math, reasoning, and chat capabilities, including structured outputs and function calling. Gemma 3 12B is the second largest in the family of Gemma 3 models after [Gemma 3 27B](google/gemma-3-27b-it)",
        "category": "llm",
        "provider": "google",
        "accepts_plugins": false,
        "model_id": "google/gemma-3-12b-it:free",
        "context_length": 32768,
        "supported_parameters": [
            "frequency_penalty",
            "logit_bias",
            "logprobs",
            "max_tokens",
            "min_p",
            "presence_penalty",
            "repetition_penalty",
            "seed",
            "stop",
            "temperature",
            "top_k",
            "top_logprobs",
            "top_p"
        ],
        "inputs": [
            {
                "name": "system_prompt",
                "display_name": "System Prompt",
                "type": "string or message",
                "description": "System prompt for the model",
                "default": null
            },
            {
                "name": "messages",
                "display_name": "Messages",
                "type": "array of messages or message or string",
                "description": "Array of chat messages",
                "required": true
            },
            {
                "name": "temperature",
                "display_name": "Temperature",
                "type": "number",
                "description": "Controls randomness (0-2)",
                "default": null
            },
            {
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "type": "number",
                "description": "Maximum tokens to generate",
                "default": null
            },
            {
                "name": "top_p",
                "display_name": "Top P",
                "type": "number",
                "description": "Controls diversity via nucleus sampling",
                "default": null
            },
            {
                "name": "frequency_penalty",
                "display_name": "Frequency Penalty",
                "type": "number",
                "description": "Reduces repetition (-2 to 2)",
                "default": null
            },
            {
                "name": "presence_penalty",
                "display_name": "Presence Penalty",
                "type": "number",
                "description": "Encourages new topics (-2 to 2)",
                "default": null
            },
            {
                "name": "seed",
                "display_name": "Seed",
                "type": "number",
                "description": "Deterministic outputs",
                "default": null
            },
            {
                "name": "stop",
                "display_name": "Stop",
                "type": "string or array",
                "description": "Custom stop sequences",
                "default": null
            }
        ],
        "outputs": [
            {
                "name": "content",
                "display_name": "Content",
                "can_stream": true,
                "type": "string",
                "description": "The content portion of the generated response message."
            },
            {
                "name": "message",
                "display_name": "Message",
                "type": "message",
                "can_stream": true,
                "description": "The full generated response message."
            },
            {
                "name": "role",
                "display_name": "Role",
                "can_stream": true,
                "type": "string",
                "description": "Role of the response (usually 'assistant')"
            },
            {
                "name": "finish_reason",
                "display_name": "Finish Reason",
                "type": "string",
                "description": "Why the completion finished"
            },
            {
                "name": "usage",
                "display_name": "Token Usage",
                "type": "object",
                "description": "Token usage statistics"
            },
            {
                "name": "cost_total",
                "display_name": "Total Cost",
                "type": "number",
                "description": "Total cost for processing this request (USD)"
            },
            {
                "name": "cost_itemized",
                "display_name": "Itemized Cost",
                "type": "array",
                "description": "Detailed breakdown of costs"
            },
            {
                "name": "logprobs",
                "display_name": "Log Probabilities",
                "type": "object",
                "description": "Token probabilities and logprobs from the model"
            }
        ],
        "pricing": {
            "reference": "https://openrouter.ai/models",
            "items": [
                {
                    "key": "input_cost_per_million",
                    "label": "Input Tokens (per 1M)",
                    "cost": 0,
                    "currency": "USD"
                },
                {
                    "key": "output_cost_per_million",
                    "label": "Output Tokens (per 1M)",
                    "cost": 0,
                    "currency": "USD"
                }
            ]
        },
        "id": "google-gemma-3-12b-it-free"
    },
    {
        "display_name": "Google: Gemma 3 27B",
        "description": "Gemma 3 introduces multimodality, supporting vision-language input and text outputs. It handles context windows up to 128k tokens, understands over 140 languages, and offers improved math, reasoning, and chat capabilities, including structured outputs and function calling. Gemma 3 27B is Google's latest open source model, successor to [Gemma 2](google/gemma-2-27b-it)",
        "category": "llm",
        "provider": "google",
        "accepts_plugins": false,
        "model_id": "google/gemma-3-27b-it",
        "context_length": 96000,
        "supported_parameters": [
            "frequency_penalty",
            "logit_bias",
            "logprobs",
            "max_tokens",
            "min_p",
            "presence_penalty",
            "repetition_penalty",
            "response_format",
            "seed",
            "stop",
            "structured_outputs",
            "temperature",
            "top_k",
            "top_logprobs",
            "top_p"
        ],
        "inputs": [
            {
                "name": "system_prompt",
                "display_name": "System Prompt",
                "type": "string or message",
                "description": "System prompt for the model",
                "default": null
            },
            {
                "name": "messages",
                "display_name": "Messages",
                "type": "array of messages or message or string",
                "description": "Array of chat messages",
                "required": true
            },
            {
                "name": "temperature",
                "display_name": "Temperature",
                "type": "number",
                "description": "Controls randomness (0-2)",
                "default": null
            },
            {
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "type": "number",
                "description": "Maximum tokens to generate",
                "default": null
            },
            {
                "name": "top_p",
                "display_name": "Top P",
                "type": "number",
                "description": "Controls diversity via nucleus sampling",
                "default": null
            },
            {
                "name": "frequency_penalty",
                "display_name": "Frequency Penalty",
                "type": "number",
                "description": "Reduces repetition (-2 to 2)",
                "default": null
            },
            {
                "name": "presence_penalty",
                "display_name": "Presence Penalty",
                "type": "number",
                "description": "Encourages new topics (-2 to 2)",
                "default": null
            },
            {
                "name": "response_format",
                "display_name": "Response Format",
                "type": "string or object",
                "description": "Output format specification",
                "default": null
            },
            {
                "name": "seed",
                "display_name": "Seed",
                "type": "number",
                "description": "Deterministic outputs",
                "default": null
            },
            {
                "name": "stop",
                "display_name": "Stop",
                "type": "string or array",
                "description": "Custom stop sequences",
                "default": null
            },
            {
                "name": "structured_outputs",
                "display_name": "Structured Outputs",
                "type": "string or object",
                "description": "JSON schema enforcement",
                "default": null
            }
        ],
        "outputs": [
            {
                "name": "content",
                "display_name": "Content",
                "can_stream": true,
                "type": "string",
                "description": "The content portion of the generated response message."
            },
            {
                "name": "message",
                "display_name": "Message",
                "type": "message",
                "can_stream": true,
                "description": "The full generated response message."
            },
            {
                "name": "role",
                "display_name": "Role",
                "can_stream": true,
                "type": "string",
                "description": "Role of the response (usually 'assistant')"
            },
            {
                "name": "finish_reason",
                "display_name": "Finish Reason",
                "type": "string",
                "description": "Why the completion finished"
            },
            {
                "name": "usage",
                "display_name": "Token Usage",
                "type": "object",
                "description": "Token usage statistics"
            },
            {
                "name": "cost_total",
                "display_name": "Total Cost",
                "type": "number",
                "description": "Total cost for processing this request (USD)"
            },
            {
                "name": "cost_itemized",
                "display_name": "Itemized Cost",
                "type": "array",
                "description": "Detailed breakdown of costs"
            },
            {
                "name": "logprobs",
                "display_name": "Log Probabilities",
                "type": "object",
                "description": "Token probabilities and logprobs from the model"
            }
        ],
        "pricing": {
            "reference": "https://openrouter.ai/models",
            "items": [
                {
                    "key": "input_cost_per_million",
                    "label": "Input Tokens (per 1M)",
                    "cost": 0.0666396,
                    "currency": "USD"
                },
                {
                    "key": "output_cost_per_million",
                    "label": "Output Tokens (per 1M)",
                    "cost": 0.26668800000000004,
                    "currency": "USD"
                }
            ]
        },
        "id": "google-gemma-3-27b-it"
    },
    {
        "display_name": "Google: Gemma 3 27B (free)",
        "description": "Gemma 3 introduces multimodality, supporting vision-language input and text outputs. It handles context windows up to 128k tokens, understands over 140 languages, and offers improved math, reasoning, and chat capabilities, including structured outputs and function calling. Gemma 3 27B is Google's latest open source model, successor to [Gemma 2](google/gemma-2-27b-it)",
        "category": "llm",
        "provider": "google",
        "accepts_plugins": false,
        "model_id": "google/gemma-3-27b-it:free",
        "context_length": 96000,
        "supported_parameters": [
            "frequency_penalty",
            "logit_bias",
            "logprobs",
            "max_tokens",
            "min_p",
            "presence_penalty",
            "repetition_penalty",
            "response_format",
            "seed",
            "stop",
            "structured_outputs",
            "temperature",
            "top_k",
            "top_logprobs",
            "top_p"
        ],
        "inputs": [
            {
                "name": "system_prompt",
                "display_name": "System Prompt",
                "type": "string or message",
                "description": "System prompt for the model",
                "default": null
            },
            {
                "name": "messages",
                "display_name": "Messages",
                "type": "array of messages or message or string",
                "description": "Array of chat messages",
                "required": true
            },
            {
                "name": "temperature",
                "display_name": "Temperature",
                "type": "number",
                "description": "Controls randomness (0-2)",
                "default": null
            },
            {
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "type": "number",
                "description": "Maximum tokens to generate",
                "default": null
            },
            {
                "name": "top_p",
                "display_name": "Top P",
                "type": "number",
                "description": "Controls diversity via nucleus sampling",
                "default": null
            },
            {
                "name": "frequency_penalty",
                "display_name": "Frequency Penalty",
                "type": "number",
                "description": "Reduces repetition (-2 to 2)",
                "default": null
            },
            {
                "name": "presence_penalty",
                "display_name": "Presence Penalty",
                "type": "number",
                "description": "Encourages new topics (-2 to 2)",
                "default": null
            },
            {
                "name": "response_format",
                "display_name": "Response Format",
                "type": "string or object",
                "description": "Output format specification",
                "default": null
            },
            {
                "name": "seed",
                "display_name": "Seed",
                "type": "number",
                "description": "Deterministic outputs",
                "default": null
            },
            {
                "name": "stop",
                "display_name": "Stop",
                "type": "string or array",
                "description": "Custom stop sequences",
                "default": null
            },
            {
                "name": "structured_outputs",
                "display_name": "Structured Outputs",
                "type": "string or object",
                "description": "JSON schema enforcement",
                "default": null
            }
        ],
        "outputs": [
            {
                "name": "content",
                "display_name": "Content",
                "can_stream": true,
                "type": "string",
                "description": "The content portion of the generated response message."
            },
            {
                "name": "message",
                "display_name": "Message",
                "type": "message",
                "can_stream": true,
                "description": "The full generated response message."
            },
            {
                "name": "role",
                "display_name": "Role",
                "can_stream": true,
                "type": "string",
                "description": "Role of the response (usually 'assistant')"
            },
            {
                "name": "finish_reason",
                "display_name": "Finish Reason",
                "type": "string",
                "description": "Why the completion finished"
            },
            {
                "name": "usage",
                "display_name": "Token Usage",
                "type": "object",
                "description": "Token usage statistics"
            },
            {
                "name": "cost_total",
                "display_name": "Total Cost",
                "type": "number",
                "description": "Total cost for processing this request (USD)"
            },
            {
                "name": "cost_itemized",
                "display_name": "Itemized Cost",
                "type": "array",
                "description": "Detailed breakdown of costs"
            },
            {
                "name": "logprobs",
                "display_name": "Log Probabilities",
                "type": "object",
                "description": "Token probabilities and logprobs from the model"
            }
        ],
        "pricing": {
            "reference": "https://openrouter.ai/models",
            "items": [
                {
                    "key": "input_cost_per_million",
                    "label": "Input Tokens (per 1M)",
                    "cost": 0,
                    "currency": "USD"
                },
                {
                    "key": "output_cost_per_million",
                    "label": "Output Tokens (per 1M)",
                    "cost": 0,
                    "currency": "USD"
                }
            ]
        },
        "id": "google-gemma-3-27b-it-free"
    },
    {
        "display_name": "Google: Gemma 3 4B",
        "description": "Gemma 3 introduces multimodality, supporting vision-language input and text outputs. It handles context windows up to 128k tokens, understands over 140 languages, and offers improved math, reasoning, and chat capabilities, including structured outputs and function calling.",
        "category": "llm",
        "provider": "google",
        "accepts_plugins": false,
        "model_id": "google/gemma-3-4b-it",
        "context_length": 131072,
        "supported_parameters": [
            "frequency_penalty",
            "max_tokens",
            "min_p",
            "presence_penalty",
            "repetition_penalty",
            "response_format",
            "seed",
            "stop",
            "temperature",
            "top_k",
            "top_p"
        ],
        "inputs": [
            {
                "name": "system_prompt",
                "display_name": "System Prompt",
                "type": "string or message",
                "description": "System prompt for the model",
                "default": null
            },
            {
                "name": "messages",
                "display_name": "Messages",
                "type": "array of messages or message or string",
                "description": "Array of chat messages",
                "required": true
            },
            {
                "name": "temperature",
                "display_name": "Temperature",
                "type": "number",
                "description": "Controls randomness (0-2)",
                "default": null
            },
            {
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "type": "number",
                "description": "Maximum tokens to generate",
                "default": null
            },
            {
                "name": "top_p",
                "display_name": "Top P",
                "type": "number",
                "description": "Controls diversity via nucleus sampling",
                "default": null
            },
            {
                "name": "frequency_penalty",
                "display_name": "Frequency Penalty",
                "type": "number",
                "description": "Reduces repetition (-2 to 2)",
                "default": null
            },
            {
                "name": "presence_penalty",
                "display_name": "Presence Penalty",
                "type": "number",
                "description": "Encourages new topics (-2 to 2)",
                "default": null
            },
            {
                "name": "response_format",
                "display_name": "Response Format",
                "type": "string or object",
                "description": "Output format specification",
                "default": null
            },
            {
                "name": "seed",
                "display_name": "Seed",
                "type": "number",
                "description": "Deterministic outputs",
                "default": null
            },
            {
                "name": "stop",
                "display_name": "Stop",
                "type": "string or array",
                "description": "Custom stop sequences",
                "default": null
            }
        ],
        "outputs": [
            {
                "name": "content",
                "display_name": "Content",
                "can_stream": true,
                "type": "string",
                "description": "The content portion of the generated response message."
            },
            {
                "name": "message",
                "display_name": "Message",
                "type": "message",
                "can_stream": true,
                "description": "The full generated response message."
            },
            {
                "name": "role",
                "display_name": "Role",
                "can_stream": true,
                "type": "string",
                "description": "Role of the response (usually 'assistant')"
            },
            {
                "name": "finish_reason",
                "display_name": "Finish Reason",
                "type": "string",
                "description": "Why the completion finished"
            },
            {
                "name": "usage",
                "display_name": "Token Usage",
                "type": "object",
                "description": "Token usage statistics"
            },
            {
                "name": "cost_total",
                "display_name": "Total Cost",
                "type": "number",
                "description": "Total cost for processing this request (USD)"
            },
            {
                "name": "cost_itemized",
                "display_name": "Itemized Cost",
                "type": "array",
                "description": "Detailed breakdown of costs"
            }
        ],
        "pricing": {
            "reference": "https://openrouter.ai/models",
            "items": [
                {
                    "key": "input_cost_per_million",
                    "label": "Input Tokens (per 1M)",
                    "cost": 0.02,
                    "currency": "USD"
                },
                {
                    "key": "output_cost_per_million",
                    "label": "Output Tokens (per 1M)",
                    "cost": 0.04,
                    "currency": "USD"
                }
            ]
        },
        "id": "google-gemma-3-4b-it"
    },
    {
        "display_name": "Google: Gemma 3 4B (free)",
        "description": "Gemma 3 introduces multimodality, supporting vision-language input and text outputs. It handles context windows up to 128k tokens, understands over 140 languages, and offers improved math, reasoning, and chat capabilities, including structured outputs and function calling.",
        "category": "llm",
        "provider": "google",
        "accepts_plugins": false,
        "model_id": "google/gemma-3-4b-it:free",
        "context_length": 32768,
        "supported_parameters": [
            "max_tokens",
            "response_format",
            "seed",
            "structured_outputs",
            "temperature",
            "top_p"
        ],
        "inputs": [
            {
                "name": "system_prompt",
                "display_name": "System Prompt",
                "type": "string or message",
                "description": "System prompt for the model",
                "default": null
            },
            {
                "name": "messages",
                "display_name": "Messages",
                "type": "array of messages or message or string",
                "description": "Array of chat messages",
                "required": true
            },
            {
                "name": "temperature",
                "display_name": "Temperature",
                "type": "number",
                "description": "Controls randomness (0-2)",
                "default": null
            },
            {
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "type": "number",
                "description": "Maximum tokens to generate",
                "default": null
            },
            {
                "name": "top_p",
                "display_name": "Top P",
                "type": "number",
                "description": "Controls diversity via nucleus sampling",
                "default": null
            },
            {
                "name": "response_format",
                "display_name": "Response Format",
                "type": "string or object",
                "description": "Output format specification",
                "default": null
            },
            {
                "name": "seed",
                "display_name": "Seed",
                "type": "number",
                "description": "Deterministic outputs",
                "default": null
            },
            {
                "name": "structured_outputs",
                "display_name": "Structured Outputs",
                "type": "string or object",
                "description": "JSON schema enforcement",
                "default": null
            }
        ],
        "outputs": [
            {
                "name": "content",
                "display_name": "Content",
                "can_stream": true,
                "type": "string",
                "description": "The content portion of the generated response message."
            },
            {
                "name": "message",
                "display_name": "Message",
                "type": "message",
                "can_stream": true,
                "description": "The full generated response message."
            },
            {
                "name": "role",
                "display_name": "Role",
                "can_stream": true,
                "type": "string",
                "description": "Role of the response (usually 'assistant')"
            },
            {
                "name": "finish_reason",
                "display_name": "Finish Reason",
                "type": "string",
                "description": "Why the completion finished"
            },
            {
                "name": "usage",
                "display_name": "Token Usage",
                "type": "object",
                "description": "Token usage statistics"
            },
            {
                "name": "cost_total",
                "display_name": "Total Cost",
                "type": "number",
                "description": "Total cost for processing this request (USD)"
            },
            {
                "name": "cost_itemized",
                "display_name": "Itemized Cost",
                "type": "array",
                "description": "Detailed breakdown of costs"
            }
        ],
        "pricing": {
            "reference": "https://openrouter.ai/models",
            "items": [
                {
                    "key": "input_cost_per_million",
                    "label": "Input Tokens (per 1M)",
                    "cost": 0,
                    "currency": "USD"
                },
                {
                    "key": "output_cost_per_million",
                    "label": "Output Tokens (per 1M)",
                    "cost": 0,
                    "currency": "USD"
                }
            ]
        },
        "id": "google-gemma-3-4b-it-free"
    },
    {
        "display_name": "Google: Gemma 3n 2B (free)",
        "description": "Gemma 3n E2B IT is a multimodal, instruction-tuned model developed by Google DeepMind, designed to operate efficiently at an effective parameter size of 2B while leveraging a 6B architecture. Based on the MatFormer architecture, it supports nested submodels and modular composition via the Mix-and-Match framework. Gemma 3n models are optimized for low-resource deployment, offering 32K context length and strong multilingual and reasoning performance across common benchmarks. This variant is trained on a diverse corpus including code, math, web, and multimodal data.",
        "category": "llm",
        "provider": "google",
        "accepts_plugins": false,
        "model_id": "google/gemma-3n-e2b-it:free",
        "context_length": 8192,
        "supported_parameters": [
            "frequency_penalty",
            "max_tokens",
            "presence_penalty",
            "response_format",
            "seed",
            "stop",
            "temperature",
            "top_p"
        ],
        "inputs": [
            {
                "name": "prompt",
                "display_name": "Prompt",
                "type": "string",
                "description": "Text prompt for completion",
                "required": true
            },
            {
                "name": "temperature",
                "display_name": "Temperature",
                "type": "number",
                "description": "Controls randomness (0-2)",
                "default": null
            },
            {
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "type": "number",
                "description": "Maximum tokens to generate",
                "default": null
            },
            {
                "name": "top_p",
                "display_name": "Top P",
                "type": "number",
                "description": "Controls diversity via nucleus sampling",
                "default": null
            },
            {
                "name": "frequency_penalty",
                "display_name": "Frequency Penalty",
                "type": "number",
                "description": "Reduces repetition (-2 to 2)",
                "default": null
            },
            {
                "name": "presence_penalty",
                "display_name": "Presence Penalty",
                "type": "number",
                "description": "Encourages new topics (-2 to 2)",
                "default": null
            },
            {
                "name": "response_format",
                "display_name": "Response Format",
                "type": "string or object",
                "description": "Output format specification",
                "default": null
            },
            {
                "name": "seed",
                "display_name": "Seed",
                "type": "number",
                "description": "Deterministic outputs",
                "default": null
            },
            {
                "name": "stop",
                "display_name": "Stop",
                "type": "string or array",
                "description": "Custom stop sequences",
                "default": null
            }
        ],
        "outputs": [
            {
                "name": "content",
                "display_name": "Content",
                "can_stream": true,
                "type": "string",
                "description": "The generated completion text"
            },
            {
                "name": "finish_reason",
                "display_name": "Finish Reason",
                "type": "string",
                "description": "Why the completion finished"
            },
            {
                "name": "usage",
                "display_name": "Token Usage",
                "type": "object",
                "description": "Token usage statistics"
            },
            {
                "name": "cost_total",
                "display_name": "Total Cost",
                "type": "number",
                "description": "Total cost for processing this request (USD)"
            },
            {
                "name": "cost_itemized",
                "display_name": "Itemized Cost",
                "type": "array",
                "description": "Detailed breakdown of costs"
            }
        ],
        "pricing": {
            "reference": "https://openrouter.ai/models",
            "items": [
                {
                    "key": "input_cost_per_million",
                    "label": "Input Tokens (per 1M)",
                    "cost": 0,
                    "currency": "USD"
                },
                {
                    "key": "output_cost_per_million",
                    "label": "Output Tokens (per 1M)",
                    "cost": 0,
                    "currency": "USD"
                }
            ]
        },
        "id": "google-gemma-3n-e2b-it-free"
    },
    {
        "display_name": "Google: Gemma 3n 4B",
        "description": "Gemma 3n E4B-it is optimized for efficient execution on mobile and low-resource devices, such as phones, laptops, and tablets. It supports multimodal inputs—including text, visual data, and audio—enabling diverse tasks such as text generation, speech recognition, translation, and image analysis. Leveraging innovations like Per-Layer Embedding (PLE) caching and the MatFormer architecture, Gemma 3n dynamically manages memory usage and computational load by selectively activating model parameters, significantly reducing runtime resource requirements.\n\nThis model supports a wide linguistic range (trained in over 140 languages) and features a flexible 32K token context window. Gemma 3n can selectively load parameters, optimizing memory and computational efficiency based on the task or device capabilities, making it well-suited for privacy-focused, offline-capable applications and on-device AI solutions. [Read more in the blog post](https://developers.googleblog.com/en/introducing-gemma-3n/)",
        "category": "llm",
        "provider": "google",
        "accepts_plugins": false,
        "model_id": "google/gemma-3n-e4b-it",
        "context_length": 32768,
        "supported_parameters": [
            "frequency_penalty",
            "logit_bias",
            "max_tokens",
            "min_p",
            "presence_penalty",
            "repetition_penalty",
            "stop",
            "temperature",
            "top_k",
            "top_p"
        ],
        "inputs": [
            {
                "name": "prompt",
                "display_name": "Prompt",
                "type": "string",
                "description": "Text prompt for completion",
                "required": true
            },
            {
                "name": "temperature",
                "display_name": "Temperature",
                "type": "number",
                "description": "Controls randomness (0-2)",
                "default": null
            },
            {
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "type": "number",
                "description": "Maximum tokens to generate",
                "default": null
            },
            {
                "name": "top_p",
                "display_name": "Top P",
                "type": "number",
                "description": "Controls diversity via nucleus sampling",
                "default": null
            },
            {
                "name": "frequency_penalty",
                "display_name": "Frequency Penalty",
                "type": "number",
                "description": "Reduces repetition (-2 to 2)",
                "default": null
            },
            {
                "name": "presence_penalty",
                "display_name": "Presence Penalty",
                "type": "number",
                "description": "Encourages new topics (-2 to 2)",
                "default": null
            },
            {
                "name": "stop",
                "display_name": "Stop",
                "type": "string or array",
                "description": "Custom stop sequences",
                "default": null
            }
        ],
        "outputs": [
            {
                "name": "content",
                "display_name": "Content",
                "can_stream": true,
                "type": "string",
                "description": "The generated completion text"
            },
            {
                "name": "finish_reason",
                "display_name": "Finish Reason",
                "type": "string",
                "description": "Why the completion finished"
            },
            {
                "name": "usage",
                "display_name": "Token Usage",
                "type": "object",
                "description": "Token usage statistics"
            },
            {
                "name": "cost_total",
                "display_name": "Total Cost",
                "type": "number",
                "description": "Total cost for processing this request (USD)"
            },
            {
                "name": "cost_itemized",
                "display_name": "Itemized Cost",
                "type": "array",
                "description": "Detailed breakdown of costs"
            }
        ],
        "pricing": {
            "reference": "https://openrouter.ai/models",
            "items": [
                {
                    "key": "input_cost_per_million",
                    "label": "Input Tokens (per 1M)",
                    "cost": 0.02,
                    "currency": "USD"
                },
                {
                    "key": "output_cost_per_million",
                    "label": "Output Tokens (per 1M)",
                    "cost": 0.04,
                    "currency": "USD"
                }
            ]
        },
        "id": "google-gemma-3n-e4b-it"
    },
    {
        "display_name": "Google: Gemma 3n 4B (free)",
        "description": "Gemma 3n E4B-it is optimized for efficient execution on mobile and low-resource devices, such as phones, laptops, and tablets. It supports multimodal inputs—including text, visual data, and audio—enabling diverse tasks such as text generation, speech recognition, translation, and image analysis. Leveraging innovations like Per-Layer Embedding (PLE) caching and the MatFormer architecture, Gemma 3n dynamically manages memory usage and computational load by selectively activating model parameters, significantly reducing runtime resource requirements.\n\nThis model supports a wide linguistic range (trained in over 140 languages) and features a flexible 32K token context window. Gemma 3n can selectively load parameters, optimizing memory and computational efficiency based on the task or device capabilities, making it well-suited for privacy-focused, offline-capable applications and on-device AI solutions. [Read more in the blog post](https://developers.googleblog.com/en/introducing-gemma-3n/)",
        "category": "llm",
        "provider": "google",
        "accepts_plugins": false,
        "model_id": "google/gemma-3n-e4b-it:free",
        "context_length": 8192,
        "supported_parameters": [
            "frequency_penalty",
            "max_tokens",
            "presence_penalty",
            "response_format",
            "seed",
            "stop",
            "temperature",
            "top_p"
        ],
        "inputs": [
            {
                "name": "prompt",
                "display_name": "Prompt",
                "type": "string",
                "description": "Text prompt for completion",
                "required": true
            },
            {
                "name": "temperature",
                "display_name": "Temperature",
                "type": "number",
                "description": "Controls randomness (0-2)",
                "default": null
            },
            {
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "type": "number",
                "description": "Maximum tokens to generate",
                "default": null
            },
            {
                "name": "top_p",
                "display_name": "Top P",
                "type": "number",
                "description": "Controls diversity via nucleus sampling",
                "default": null
            },
            {
                "name": "frequency_penalty",
                "display_name": "Frequency Penalty",
                "type": "number",
                "description": "Reduces repetition (-2 to 2)",
                "default": null
            },
            {
                "name": "presence_penalty",
                "display_name": "Presence Penalty",
                "type": "number",
                "description": "Encourages new topics (-2 to 2)",
                "default": null
            },
            {
                "name": "response_format",
                "display_name": "Response Format",
                "type": "string or object",
                "description": "Output format specification",
                "default": null
            },
            {
                "name": "seed",
                "display_name": "Seed",
                "type": "number",
                "description": "Deterministic outputs",
                "default": null
            },
            {
                "name": "stop",
                "display_name": "Stop",
                "type": "string or array",
                "description": "Custom stop sequences",
                "default": null
            }
        ],
        "outputs": [
            {
                "name": "content",
                "display_name": "Content",
                "can_stream": true,
                "type": "string",
                "description": "The generated completion text"
            },
            {
                "name": "finish_reason",
                "display_name": "Finish Reason",
                "type": "string",
                "description": "Why the completion finished"
            },
            {
                "name": "usage",
                "display_name": "Token Usage",
                "type": "object",
                "description": "Token usage statistics"
            },
            {
                "name": "cost_total",
                "display_name": "Total Cost",
                "type": "number",
                "description": "Total cost for processing this request (USD)"
            },
            {
                "name": "cost_itemized",
                "display_name": "Itemized Cost",
                "type": "array",
                "description": "Detailed breakdown of costs"
            }
        ],
        "pricing": {
            "reference": "https://openrouter.ai/models",
            "items": [
                {
                    "key": "input_cost_per_million",
                    "label": "Input Tokens (per 1M)",
                    "cost": 0,
                    "currency": "USD"
                },
                {
                    "key": "output_cost_per_million",
                    "label": "Output Tokens (per 1M)",
                    "cost": 0,
                    "currency": "USD"
                }
            ]
        },
        "id": "google-gemma-3n-e4b-it-free"
    },
    {
        "display_name": "Greater Than",
        "description": "Checks if the first number is greater than the second number",
        "icon": "greater-than",
        "category": "math",
        "inputs": [
            {
                "name": "a",
                "display_name": "A",
                "description": "First number to compare",
                "type": "number",
                "required": true
            },
            {
                "name": "b",
                "display_name": "B",
                "description": "Second number to compare",
                "type": "number",
                "required": true
            }
        ],
        "outputs": [
            {
                "name": "result",
                "display_name": "Result",
                "description": "True if A > B, false otherwise",
                "type": "boolean"
            }
        ],
        "timeout": 3000,
        "retry_limit": 3,
        "id": "greater-than"
    },
    {
        "display_name": "Greater Than or Equal",
        "description": "Checks if the first number is greater than or equal to the second number",
        "icon": "greater-than-equal",
        "category": "math",
        "inputs": [
            {
                "name": "a",
                "display_name": "A",
                "description": "First number to compare",
                "type": "number",
                "required": true
            },
            {
                "name": "b",
                "display_name": "B",
                "description": "Second number to compare",
                "type": "number",
                "required": true
            }
        ],
        "outputs": [
            {
                "name": "result",
                "display_name": "Result",
                "description": "True if A >= B, false otherwise",
                "type": "boolean"
            }
        ],
        "timeout": 3000,
        "retry_limit": 3,
        "id": "greater-than-equal"
    },
    {
        "display_name": "Has Object Property",
        "description": "Check if an object has a specific property/key.",
        "icon": "fa-search",
        "category": "data",
        "inputs": [
            {
                "name": "object",
                "display_name": "Object",
                "type": "object",
                "description": "The object to check for the property",
                "required": true
            },
            {
                "name": "key",
                "display_name": "Key",
                "type": "string",
                "description": "The name of the property to check for",
                "required": true
            }
        ],
        "outputs": [
            {
                "name": "has_property",
                "display_name": "Has Property",
                "type": "boolean",
                "description": "Whether the object has the specified property"
            },
            {
                "name": "key",
                "display_name": "Key",
                "type": "string",
                "description": "The key that was checked"
            },
            {
                "name": "value",
                "display_name": "Value",
                "type": "any",
                "description": "The value of the property if it exists, null otherwise"
            }
        ],
        "settings": [
            {
                "name": "check_own_properties",
                "display_name": "Check Own Properties Only",
                "type": "boolean",
                "description": "If true, only check own properties (not inherited). If false, check the entire prototype chain.",
                "default": true
            }
        ],
        "timeout": 3000,
        "retry_limit": 3,
        "id": "has-object-property"
    },
    {
        "display_name": "Histogram",
        "description": "Groups numbers into bins and counts frequency",
        "category": "math",
        "inputs": [
            {
                "name": "numbers",
                "display_name": "Numbers",
                "description": "Array of numbers to analyze",
                "type": "array of numbers",
                "required": true
            },
            {
                "name": "bins",
                "display_name": "Number of Bins",
                "description": "Number of groups to divide data into",
                "type": "number",
                "default": 10
            }
        ],
        "outputs": [
            {
                "name": "bins",
                "display_name": "Bins",
                "description": "Array of bin boundaries",
                "type": "array of numbers"
            },
            {
                "name": "counts",
                "display_name": "Counts",
                "description": "Number of values in each bin",
                "type": "array of numbers"
            }
        ],
        "id": "histogram"
    },
    {
        "display_name": "Histogram Fixed Bins",
        "description": "Groups numbers into bins of fixed size",
        "category": "math",
        "inputs": [
            {
                "name": "numbers",
                "display_name": "Numbers",
                "description": "Array of numbers to analyze",
                "type": "array",
                "required": true
            },
            {
                "name": "start",
                "display_name": "Start Value",
                "description": "Lower bound of first bin",
                "type": "number",
                "required": true
            },
            {
                "name": "bin_size",
                "display_name": "Bin Size",
                "description": "Width of each bin",
                "type": "number",
                "required": true
            },
            {
                "name": "bin_count",
                "display_name": "Number of Bins",
                "description": "Maximum number of bins to create",
                "type": "number",
                "default": 10
            }
        ],
        "outputs": [
            {
                "name": "bins",
                "display_name": "Bins",
                "description": "Array of bin boundaries",
                "type": "array"
            },
            {
                "name": "counts",
                "display_name": "Counts",
                "description": "Number of values in each bin",
                "type": "array"
            },
            {
                "name": "overflow",
                "display_name": "Overflow Count",
                "description": "Number of values above the highest bin",
                "type": "number"
            },
            {
                "name": "underflow",
                "display_name": "Underflow Count",
                "description": "Number of values below the lowest bin",
                "type": "number"
            }
        ],
        "id": "histogram-fixed"
    },
    {
        "display_name": "HTTP Request",
        "description": "Makes HTTP requests (GET, POST, PUT, PATCH, DELETE, etc.) to a specified URL with optional headers, query parameters, and body.",
        "icon": "globe",
        "category": "network",
        "inputs": [
            {
                "name": "url",
                "display_name": "URL",
                "type": "string",
                "description": "The URL to send the request to.",
                "required": true
            },
            {
                "name": "method",
                "display_name": "Method",
                "type": "string",
                "description": "The HTTP method to use.",
                "default": "GET",
                "options": [
                    "GET",
                    "POST",
                    "PUT",
                    "PATCH",
                    "DELETE",
                    "HEAD",
                    "OPTIONS"
                ]
            },
            {
                "name": "headers",
                "display_name": "Headers",
                "type": "object",
                "description": "Optional HTTP headers as key-value pairs.",
                "required": false
            },
            {
                "name": "query",
                "display_name": "Query Parameters",
                "type": "object",
                "description": "Optional query parameters as key-value pairs.",
                "required": false
            },
            {
                "name": "body",
                "display_name": "Body",
                "type": "any",
                "description": "Optional request body (for POST, PUT, PATCH, etc.).",
                "required": false
            }
        ],
        "outputs": [
            {
                "name": "status",
                "display_name": "Status",
                "type": "number",
                "description": "The HTTP status code returned by the server."
            },
            {
                "name": "headers",
                "display_name": "Response Headers",
                "type": "object",
                "description": "The response headers as key-value pairs."
            },
            {
                "name": "body",
                "display_name": "Response Body",
                "type": "any",
                "description": "The response body, parsed as JSON if possible, otherwise as text."
            },
            {
                "name": "error",
                "display_name": "Error",
                "type": "string",
                "description": "Error message if the request failed.",
                "required": false
            }
        ],
        "settings": [
            {
                "name": "timeout",
                "display_name": "Timeout (ms)",
                "type": "number",
                "description": "Request timeout in milliseconds.",
                "default": 10000
            },
            {
                "name": "follow_redirects",
                "display_name": "Follow Redirects",
                "type": "boolean",
                "description": "Whether to follow HTTP redirects.",
                "default": true
            }
        ],
        "timeout": 15000,
        "retry_limit": 1,
        "id": "http-request"
    },
    {
        "display_name": "If/Else",
        "description": "Routes data based on a condition",
        "category": "logic",
        "inputs": [
            {
                "name": "condition",
                "display_name": "Condition",
                "description": "Boolean condition to evaluate",
                "type": "boolean",
                "required": true
            },
            {
                "name": "if_true",
                "display_name": "If True",
                "description": "Value to output if condition is true",
                "type": "any"
            },
            {
                "name": "if_false",
                "display_name": "If False",
                "description": "Value to output if condition is false",
                "type": "any"
            }
        ],
        "outputs": [
            {
                "name": "result",
                "display_name": "Result",
                "description": "Output based on condition",
                "type": "any",
                "conditional": true
            },
            {
                "name": "true_path",
                "display_name": "True Path",
                "description": "Triggered only when condition is true",
                "type": "boolean",
                "conditional": true
            },
            {
                "name": "false_path",
                "display_name": "False Path",
                "description": "Triggered only when condition is false",
                "type": "boolean",
                "conditional": true
            }
        ],
        "id": "if-else"
    },
    {
        "display_name": "Input Chat",
        "description": "Accepts chat messages as input to the conversation flow",
        "icon": "message-circle",
        "category": "i/o",
        "is_input": true,
        "is_resizable": true,
        "custom_render_height": 450,
        "has_expanded_view": true,
        "width": 450,
        "inputs": [],
        "outputs": [
            {
                "name": "messages",
                "display_name": "Messages",
                "type": "array of messages",
                "description": "The incoming chat messages"
            },
            {
                "name": "message",
                "display_name": "Most Recent Message Text",
                "type": "string",
                "description": "The text content of the most recent chat message"
            }
        ],
        "settings": [
            {
                "name": "automatic_append",
                "display_name": "Automatic Append",
                "type": "boolean",
                "description": "If true, each message into an Output Chat node (with the same key) will be appended to the messages array for easy testing.",
                "default": true
            },
            {
                "name": "key",
                "display_name": "Key",
                "description": "A way to identify the chat if this file has multiple chat nodes.",
                "type": "string"
            }
        ],
        "timeout": 3000,
        "retry_limit": 3,
        "id": "input-chat"
    },
    {
        "display_name": "Input Data",
        "description": "Defines a single data input that can be requested from the user during flow execution",
        "icon": "input-cursor",
        "category": "i/o",
        "is_input": true,
        "is_resizable": true,
        "custom_render_height": 450,
        "has_expanded_view": true,
        "width": 450,
        "inputs": [],
        "outputs": [
            {
                "name": "value",
                "display_name": "Value",
                "type": "any",
                "description": "The value provided by the user for this data input"
            },
            {
                "name": "data",
                "display_name": "Data",
                "type": "object",
                "description": "The data object for this data input, in the form of a key-value pair",
                "required": false
            }
        ],
        "settings": [
            {
                "name": "key",
                "display_name": "Key",
                "type": "string",
                "description": "A way to identify the data input if this file has multiple data inputs."
            },
            {
                "name": "type",
                "display_name": "Data Type",
                "type": "string",
                "description": "The type of input to request from the user",
                "default": "string",
                "options": [
                    "string",
                    "number",
                    "boolean",
                    "array",
                    "object"
                ],
                "required": true
            },
            {
                "name": "default_value",
                "display_name": "Default Value",
                "type": "string",
                "description": "Default value for this data input",
                "required": false
            },
            {
                "name": "description",
                "display_name": "Description",
                "type": "string",
                "description": "A description of the data input",
                "required": false
            }
        ],
        "id": "input-data"
    },
    {
        "id": "input-plugins",
        "display_name": "Input Tools",
        "description": "Provides available tools/plugins to the flow.",
        "is_input": true,
        "is_plugin": true,
        "inputs": [],
        "outputs": [
            {
                "name": "tools",
                "display_name": "Tools",
                "type": "array",
                "description": "Array of available tool schemas"
            }
        ]
    },
    {
        "display_name": "Prompt Input",
        "description": "For direct instructing with a single text prompt instead of a conversation.",
        "icon": "arrow-to-right",
        "category": "i/o",
        "is_input": true,
        "is_resizable": true,
        "custom_render_height": 450,
        "width": 450,
        "inputs": [],
        "outputs": [
            {
                "name": "prompt",
                "display_name": "Prompt Text",
                "description": "The text content of the prompt to be processed.",
                "type": "string"
            }
        ],
        "settings": [
            {
                "name": "prompt",
                "display_name": "Prompt",
                "description": "The prompt to be processed.",
                "type": "string",
                "default": ""
            },
            {
                "name": "key",
                "display_name": "Key",
                "description": "A way to identify the prompt if this file has multiple prompts.",
                "type": "string",
                "default": "prompt"
            }
        ],
        "timeout": 5000,
        "retry_limit": 3,
        "id": "input-prompt"
    },
    {
        "display_name": "JSON Parser",
        "description": "Parses a JSON string into an object or array",
        "icon": "code",
        "category": "data",
        "inputs": [
            {
                "name": "json",
                "display_name": "JSON String",
                "type": "string",
                "description": "The JSON string to parse",
                "required": true
            }
        ],
        "outputs": [
            {
                "name": "value",
                "display_name": "Value",
                "type": "any",
                "description": "The parsed JSON value"
            },
            {
                "name": "error",
                "display_name": "Error",
                "type": "string",
                "description": "Error message if parsing failed"
            },
            {
                "name": "success",
                "display_name": "Success",
                "type": "boolean",
                "description": "Whether parsing was successful"
            }
        ],
        "settings": [
            {
                "name": "default_value",
                "display_name": "Default Value",
                "type": "string",
                "description": "Default value to use if parsing fails (as JSON string)",
                "default": "{}"
            }
        ],
        "timeout": 3000,
        "retry_limit": 3,
        "id": "json-parser"
    },
    {
        "display_name": "JSON Stringifier",
        "description": "Converts an object or array to a JSON string",
        "icon": "code",
        "category": "data",
        "inputs": [
            {
                "name": "value",
                "display_name": "Value",
                "type": "any",
                "description": "The value to convert to JSON",
                "required": true
            }
        ],
        "outputs": [
            {
                "name": "json",
                "display_name": "JSON String",
                "type": "string",
                "description": "The stringified JSON"
            },
            {
                "name": "error",
                "display_name": "Error",
                "type": "string",
                "description": "Error message if stringification failed"
            },
            {
                "name": "success",
                "display_name": "Success",
                "type": "boolean",
                "description": "Whether stringification was successful"
            }
        ],
        "settings": [
            {
                "name": "pretty",
                "display_name": "Pretty Print",
                "type": "boolean",
                "description": "Whether to format the JSON with indentation",
                "default": false
            },
            {
                "name": "indent",
                "display_name": "Indent Size",
                "type": "number",
                "description": "Number of spaces for indentation (when pretty print is enabled)",
                "default": 2
            }
        ],
        "timeout": 3000,
        "retry_limit": 3,
        "id": "json-stringifier"
    },
    {
        "display_name": "Less Than",
        "description": "Checks if the first number is less than the second number",
        "icon": "less-than",
        "category": "math",
        "inputs": [
            {
                "name": "a",
                "display_name": "A",
                "description": "First number to compare",
                "type": "number",
                "required": true
            },
            {
                "name": "b",
                "display_name": "B",
                "description": "Second number to compare",
                "type": "number",
                "required": true
            }
        ],
        "outputs": [
            {
                "name": "result",
                "display_name": "Result",
                "description": "True if A < B, false otherwise",
                "type": "boolean"
            }
        ],
        "timeout": 3000,
        "retry_limit": 3,
        "id": "less-than"
    },
    {
        "display_name": "Less Than or Equal",
        "description": "Checks if the first number is less than or equal to the second number",
        "icon": "less-than-equal",
        "category": "math",
        "inputs": [
            {
                "name": "a",
                "display_name": "A",
                "description": "First number to compare",
                "type": "number",
                "required": true
            },
            {
                "name": "b",
                "display_name": "B",
                "description": "Second number to compare",
                "type": "number",
                "required": true
            }
        ],
        "outputs": [
            {
                "name": "result",
                "display_name": "Result",
                "description": "True if A <= B, false otherwise",
                "type": "boolean"
            }
        ],
        "timeout": 3000,
        "retry_limit": 3,
        "id": "less-than-equal"
    },
    {
        "display_name": "Liquid: LFM 3B",
        "description": "Liquid's LFM 3B delivers incredible performance for its size. It positions itself as first place among 3B parameter transformers, hybrids, and RNN models It is also on par with Phi-3.5-mini on multiple benchmarks, while being 18.4% smaller.\n\nLFM-3B is the ideal choice for mobile and other edge text-based applications.\n\nSee the [launch announcement](https://www.liquid.ai/liquid-foundation-models) for benchmarks and more info.",
        "category": "llm",
        "provider": "liquid",
        "accepts_plugins": false,
        "model_id": "liquid/lfm-3b",
        "context_length": 32768,
        "supported_parameters": [
            "frequency_penalty",
            "max_tokens",
            "min_p",
            "presence_penalty",
            "repetition_penalty",
            "seed",
            "stop",
            "temperature",
            "top_k",
            "top_p"
        ],
        "inputs": [
            {
                "name": "system_prompt",
                "display_name": "System Prompt",
                "type": "string or message",
                "description": "System prompt for the model",
                "default": null
            },
            {
                "name": "messages",
                "display_name": "Messages",
                "type": "array of messages or message or string",
                "description": "Array of chat messages",
                "required": true
            },
            {
                "name": "temperature",
                "display_name": "Temperature",
                "type": "number",
                "description": "Controls randomness (0-2)",
                "default": null
            },
            {
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "type": "number",
                "description": "Maximum tokens to generate",
                "default": null
            },
            {
                "name": "top_p",
                "display_name": "Top P",
                "type": "number",
                "description": "Controls diversity via nucleus sampling",
                "default": null
            },
            {
                "name": "frequency_penalty",
                "display_name": "Frequency Penalty",
                "type": "number",
                "description": "Reduces repetition (-2 to 2)",
                "default": null
            },
            {
                "name": "presence_penalty",
                "display_name": "Presence Penalty",
                "type": "number",
                "description": "Encourages new topics (-2 to 2)",
                "default": null
            },
            {
                "name": "seed",
                "display_name": "Seed",
                "type": "number",
                "description": "Deterministic outputs",
                "default": null
            },
            {
                "name": "stop",
                "display_name": "Stop",
                "type": "string or array",
                "description": "Custom stop sequences",
                "default": null
            }
        ],
        "outputs": [
            {
                "name": "content",
                "display_name": "Content",
                "can_stream": true,
                "type": "string",
                "description": "The content portion of the generated response message."
            },
            {
                "name": "message",
                "display_name": "Message",
                "type": "message",
                "can_stream": true,
                "description": "The full generated response message."
            },
            {
                "name": "role",
                "display_name": "Role",
                "can_stream": true,
                "type": "string",
                "description": "Role of the response (usually 'assistant')"
            },
            {
                "name": "finish_reason",
                "display_name": "Finish Reason",
                "type": "string",
                "description": "Why the completion finished"
            },
            {
                "name": "usage",
                "display_name": "Token Usage",
                "type": "object",
                "description": "Token usage statistics"
            },
            {
                "name": "cost_total",
                "display_name": "Total Cost",
                "type": "number",
                "description": "Total cost for processing this request (USD)"
            },
            {
                "name": "cost_itemized",
                "display_name": "Itemized Cost",
                "type": "array",
                "description": "Detailed breakdown of costs"
            }
        ],
        "pricing": {
            "reference": "https://openrouter.ai/models",
            "items": [
                {
                    "key": "input_cost_per_million",
                    "label": "Input Tokens (per 1M)",
                    "cost": 0.02,
                    "currency": "USD"
                },
                {
                    "key": "output_cost_per_million",
                    "label": "Output Tokens (per 1M)",
                    "cost": 0.02,
                    "currency": "USD"
                }
            ]
        },
        "id": "liquid-lfm-3b"
    },
    {
        "display_name": "Liquid: LFM 7B",
        "description": "LFM-7B, a new best-in-class language model. LFM-7B is designed for exceptional chat capabilities, including languages like Arabic and Japanese. Powered by the Liquid Foundation Model (LFM) architecture, it exhibits unique features like low memory footprint and fast inference speed. \n\nLFM-7B is the world’s best-in-class multilingual language model in English, Arabic, and Japanese.\n\nSee the [launch announcement](https://www.liquid.ai/lfm-7b) for benchmarks and more info.",
        "category": "llm",
        "provider": "liquid",
        "accepts_plugins": false,
        "model_id": "liquid/lfm-7b",
        "context_length": 32768,
        "supported_parameters": [
            "frequency_penalty",
            "logit_bias",
            "logprobs",
            "max_tokens",
            "min_p",
            "presence_penalty",
            "repetition_penalty",
            "response_format",
            "seed",
            "stop",
            "temperature",
            "top_k",
            "top_logprobs",
            "top_p"
        ],
        "inputs": [
            {
                "name": "system_prompt",
                "display_name": "System Prompt",
                "type": "string or message",
                "description": "System prompt for the model",
                "default": null
            },
            {
                "name": "messages",
                "display_name": "Messages",
                "type": "array of messages or message or string",
                "description": "Array of chat messages",
                "required": true
            },
            {
                "name": "temperature",
                "display_name": "Temperature",
                "type": "number",
                "description": "Controls randomness (0-2)",
                "default": null
            },
            {
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "type": "number",
                "description": "Maximum tokens to generate",
                "default": null
            },
            {
                "name": "top_p",
                "display_name": "Top P",
                "type": "number",
                "description": "Controls diversity via nucleus sampling",
                "default": null
            },
            {
                "name": "frequency_penalty",
                "display_name": "Frequency Penalty",
                "type": "number",
                "description": "Reduces repetition (-2 to 2)",
                "default": null
            },
            {
                "name": "presence_penalty",
                "display_name": "Presence Penalty",
                "type": "number",
                "description": "Encourages new topics (-2 to 2)",
                "default": null
            },
            {
                "name": "response_format",
                "display_name": "Response Format",
                "type": "string or object",
                "description": "Output format specification",
                "default": null
            },
            {
                "name": "seed",
                "display_name": "Seed",
                "type": "number",
                "description": "Deterministic outputs",
                "default": null
            },
            {
                "name": "stop",
                "display_name": "Stop",
                "type": "string or array",
                "description": "Custom stop sequences",
                "default": null
            }
        ],
        "outputs": [
            {
                "name": "content",
                "display_name": "Content",
                "can_stream": true,
                "type": "string",
                "description": "The content portion of the generated response message."
            },
            {
                "name": "message",
                "display_name": "Message",
                "type": "message",
                "can_stream": true,
                "description": "The full generated response message."
            },
            {
                "name": "role",
                "display_name": "Role",
                "can_stream": true,
                "type": "string",
                "description": "Role of the response (usually 'assistant')"
            },
            {
                "name": "finish_reason",
                "display_name": "Finish Reason",
                "type": "string",
                "description": "Why the completion finished"
            },
            {
                "name": "usage",
                "display_name": "Token Usage",
                "type": "object",
                "description": "Token usage statistics"
            },
            {
                "name": "cost_total",
                "display_name": "Total Cost",
                "type": "number",
                "description": "Total cost for processing this request (USD)"
            },
            {
                "name": "cost_itemized",
                "display_name": "Itemized Cost",
                "type": "array",
                "description": "Detailed breakdown of costs"
            },
            {
                "name": "logprobs",
                "display_name": "Log Probabilities",
                "type": "object",
                "description": "Token probabilities and logprobs from the model"
            }
        ],
        "pricing": {
            "reference": "https://openrouter.ai/models",
            "items": [
                {
                    "key": "input_cost_per_million",
                    "label": "Input Tokens (per 1M)",
                    "cost": 0.01,
                    "currency": "USD"
                },
                {
                    "key": "output_cost_per_million",
                    "label": "Output Tokens (per 1M)",
                    "cost": 0.01,
                    "currency": "USD"
                }
            ]
        },
        "id": "liquid-lfm-7b"
    },
    {
        "display_name": "Mean",
        "description": "Calculates arithmetic mean (average) of numbers",
        "category": "math",
        "inputs": [
            {
                "name": "numbers",
                "display_name": "Numbers",
                "description": "Array of numbers to average",
                "type": "array of numbers",
                "required": true
            }
        ],
        "outputs": [
            {
                "name": "result",
                "display_name": "Result",
                "description": "Arithmetic mean",
                "type": "number"
            }
        ],
        "id": "mean"
    },
    {
        "display_name": "Median",
        "description": "Finds the middle value of a sorted array of numbers",
        "category": "math",
        "inputs": [
            {
                "name": "numbers",
                "display_name": "Numbers",
                "description": "Array of numbers to find median of",
                "type": "array",
                "required": true
            }
        ],
        "outputs": [
            {
                "name": "result",
                "display_name": "Result",
                "description": "Median value",
                "type": "number"
            }
        ],
        "id": "median"
    },
    {
        "display_name": "Merge Messages",
        "description": "Combine consecutive messages from the same role into single messages.",
        "icon": "merge",
        "category": "messages",
        "inputs": [
            {
                "name": "messages",
                "display_name": "Messages",
                "type": "array of messages",
                "description": "Array of message objects to merge",
                "required": true
            }
        ],
        "outputs": [
            {
                "name": "messages",
                "display_name": "Messages",
                "type": "array of messages",
                "description": "Array with consecutive same-role messages merged"
            },
            {
                "name": "original_count",
                "display_name": "Original Count",
                "type": "number",
                "description": "Number of messages before merging"
            },
            {
                "name": "merged_count",
                "display_name": "Merged Count",
                "type": "number",
                "description": "Number of messages after merging"
            },
            {
                "name": "merges_performed",
                "display_name": "Merges Performed",
                "type": "number",
                "description": "Number of merge operations performed"
            }
        ],
        "settings": [
            {
                "name": "separator",
                "display_name": "Separator",
                "type": "string",
                "description": "How to separate merged content within the same message",
                "default": " ",
                "required": true
            },
            {
                "name": "preserve_structure",
                "display_name": "Preserve Structure",
                "type": "boolean",
                "description": "Whether to preserve multi-modal content structure or flatten to text",
                "default": true,
                "required": true
            }
        ],
        "id": "merge-messages"
    },
    {
        "display_name": "Message",
        "description": "Manually create a single message.",
        "icon": "fa-comment",
        "category": "prompting",
        "custom_render_height": 200,
        "is_constant": true,
        "is_resizable": true,
        "inputs": [
            {
                "name": "role",
                "display_name": "Role",
                "type": "string",
                "description": "Optional way to override the role setting of this message."
            },
            {
                "name": "content",
                "display_name": "Content",
                "type": "array of content or string",
                "description": "Optional way to override the content setting of this message."
            },
            {
                "name": "variables",
                "display_name": "Variables",
                "type": "object",
                "allow_multiple": true,
                "description": "Connect key-value pairs to inject into any matched {{key}} in the text content."
            }
        ],
        "outputs": [
            {
                "name": "message",
                "display_name": "Message",
                "type": "message",
                "description": "The message object."
            }
        ],
        "settings": [
            {
                "name": "role",
                "display_name": "Role",
                "type": "string",
                "description": "The role of the message.",
                "required": true
            },
            {
                "name": "content",
                "display_name": "Content",
                "type": "array of content or string",
                "description": "The content of the message, can be made of text, images, or other types.",
                "required": true
            }
        ],
        "timeout": 3000,
        "retry_limit": 3,
        "id": "message"
    },
    {
        "display_name": "Message Bus",
        "description": "Combine messages from multiple sources into a single message array. Supports daisy-chaining and flexible input handling.",
        "icon": "bus",
        "category": "messages",
        "inputs": [
            {
                "name": "input_1",
                "display_name": "Input 1",
                "type": "message or array of messages",
                "description": "First message source",
                "required": false
            },
            {
                "name": "input_2",
                "display_name": "Input 2",
                "type": "message or array of messages",
                "description": "Second message source",
                "required": false
            },
            {
                "name": "input_3",
                "display_name": "Input 3",
                "type": "message or array of messages",
                "description": "Third message source",
                "required": false
            },
            {
                "name": "input_4",
                "display_name": "Input 4",
                "type": "message or array of messages",
                "description": "Fourth message source",
                "required": false
            },
            {
                "name": "input_5",
                "display_name": "Input 5",
                "type": "message or array of messages",
                "description": "Fifth message source",
                "required": false
            },
            {
                "name": "input_6",
                "display_name": "Input 6",
                "type": "message or array of messages",
                "description": "Sixth message source",
                "required": false
            },
            {
                "name": "input_7",
                "display_name": "Input 7",
                "type": "message or array of messages",
                "description": "Seventh message source",
                "required": false
            },
            {
                "name": "input_8",
                "display_name": "Input 8",
                "type": "message or array of messages",
                "description": "Eighth message source",
                "required": false
            }
        ],
        "outputs": [
            {
                "name": "messages",
                "display_name": "Messages",
                "type": "array of messages",
                "description": "Combined array of all messages from all inputs"
            },
            {
                "name": "message_count",
                "display_name": "Message Count",
                "type": "number",
                "description": "Total number of messages in the output"
            },
            {
                "name": "inputs_used",
                "display_name": "Inputs Used",
                "type": "number",
                "description": "Number of non-empty inputs that contributed messages"
            }
        ],
        "settings": [
            {
                "name": "preserve_order",
                "display_name": "Preserve Order",
                "type": "boolean",
                "description": "Whether to maintain the order of inputs when combining messages",
                "default": true,
                "required": true
            },
            {
                "name": "filter_empty",
                "display_name": "Filter Empty",
                "type": "boolean",
                "description": "Whether to filter out empty or invalid messages",
                "default": true,
                "required": true
            }
        ],
        "id": "message-bus"
    },
    {
        "display_name": "Mistral: Codestral 2501",
        "description": "[Mistral](/mistralai)'s cutting-edge language model for coding. Codestral specializes in low-latency, high-frequency tasks such as fill-in-the-middle (FIM), code correction and test generation. \n\nLearn more on their blog post: https://mistral.ai/news/codestral-2501/",
        "category": "llm",
        "provider": "mistralai",
        "accepts_plugins": true,
        "model_id": "mistralai/codestral-2501",
        "context_length": 262144,
        "supported_parameters": [
            "frequency_penalty",
            "max_tokens",
            "presence_penalty",
            "response_format",
            "seed",
            "stop",
            "structured_outputs",
            "temperature",
            "tool_choice",
            "tools",
            "top_p"
        ],
        "inputs": [
            {
                "name": "system_prompt",
                "display_name": "System Prompt",
                "type": "string or message",
                "description": "System prompt for the model",
                "default": null
            },
            {
                "name": "messages",
                "display_name": "Messages",
                "type": "array of messages or message or string",
                "description": "Array of chat messages",
                "required": true
            },
            {
                "name": "tools",
                "display_name": "Tools",
                "type": "tool",
                "description": "Array of tools to use",
                "default": null,
                "allow_multiple": true
            },
            {
                "name": "temperature",
                "display_name": "Temperature",
                "type": "number",
                "description": "Controls randomness (0-2)",
                "default": null
            },
            {
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "type": "number",
                "description": "Maximum tokens to generate",
                "default": null
            },
            {
                "name": "top_p",
                "display_name": "Top P",
                "type": "number",
                "description": "Controls diversity via nucleus sampling",
                "default": null
            },
            {
                "name": "frequency_penalty",
                "display_name": "Frequency Penalty",
                "type": "number",
                "description": "Reduces repetition (-2 to 2)",
                "default": null
            },
            {
                "name": "presence_penalty",
                "display_name": "Presence Penalty",
                "type": "number",
                "description": "Encourages new topics (-2 to 2)",
                "default": null
            },
            {
                "name": "response_format",
                "display_name": "Response Format",
                "type": "string or object",
                "description": "Output format specification",
                "default": null
            },
            {
                "name": "seed",
                "display_name": "Seed",
                "type": "number",
                "description": "Deterministic outputs",
                "default": null
            },
            {
                "name": "stop",
                "display_name": "Stop",
                "type": "string or array",
                "description": "Custom stop sequences",
                "default": null
            },
            {
                "name": "structured_outputs",
                "display_name": "Structured Outputs",
                "type": "string or object",
                "description": "JSON schema enforcement",
                "default": null
            },
            {
                "name": "tool_choice",
                "display_name": "Tool Choice",
                "type": "string",
                "description": "Tool selection control",
                "default": null
            }
        ],
        "outputs": [
            {
                "name": "content",
                "display_name": "Content",
                "can_stream": true,
                "type": "string",
                "description": "The content portion of the generated response message."
            },
            {
                "name": "message",
                "display_name": "Message",
                "type": "message",
                "can_stream": true,
                "description": "The full generated response message."
            },
            {
                "name": "role",
                "display_name": "Role",
                "can_stream": true,
                "type": "string",
                "description": "Role of the response (usually 'assistant')"
            },
            {
                "name": "tool_calls",
                "display_name": "Tool Calls",
                "type": "array of tools",
                "description": "Tool calls made by the model"
            },
            {
                "name": "finish_reason",
                "display_name": "Finish Reason",
                "type": "string",
                "description": "Why the completion finished"
            },
            {
                "name": "usage",
                "display_name": "Token Usage",
                "type": "object",
                "description": "Token usage statistics"
            },
            {
                "name": "cost_total",
                "display_name": "Total Cost",
                "type": "number",
                "description": "Total cost for processing this request (USD)"
            },
            {
                "name": "cost_itemized",
                "display_name": "Itemized Cost",
                "type": "array",
                "description": "Detailed breakdown of costs"
            }
        ],
        "pricing": {
            "reference": "https://openrouter.ai/models",
            "items": [
                {
                    "key": "input_cost_per_million",
                    "label": "Input Tokens (per 1M)",
                    "cost": 0.3,
                    "currency": "USD"
                },
                {
                    "key": "output_cost_per_million",
                    "label": "Output Tokens (per 1M)",
                    "cost": 0.8999999999999999,
                    "currency": "USD"
                }
            ]
        },
        "id": "mistralai-codestral-2501"
    },
    {
        "display_name": "Mistral: Codestral 2508",
        "description": "Mistral's cutting-edge language model for coding released end of July 2025. Codestral specializes in low-latency, high-frequency tasks such as fill-in-the-middle (FIM), code correction and test generation.\n\n[Blog Post](https://mistral.ai/news/codestral-25-08)",
        "category": "llm",
        "provider": "mistralai",
        "accepts_plugins": true,
        "model_id": "mistralai/codestral-2508",
        "context_length": 256000,
        "supported_parameters": [
            "frequency_penalty",
            "max_tokens",
            "presence_penalty",
            "response_format",
            "seed",
            "stop",
            "structured_outputs",
            "temperature",
            "tool_choice",
            "tools",
            "top_p"
        ],
        "inputs": [
            {
                "name": "system_prompt",
                "display_name": "System Prompt",
                "type": "string or message",
                "description": "System prompt for the model",
                "default": null
            },
            {
                "name": "messages",
                "display_name": "Messages",
                "type": "array of messages or message or string",
                "description": "Array of chat messages",
                "required": true
            },
            {
                "name": "tools",
                "display_name": "Tools",
                "type": "tool",
                "description": "Array of tools to use",
                "default": null,
                "allow_multiple": true
            },
            {
                "name": "temperature",
                "display_name": "Temperature",
                "type": "number",
                "description": "Controls randomness (0-2)",
                "default": null
            },
            {
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "type": "number",
                "description": "Maximum tokens to generate",
                "default": null
            },
            {
                "name": "top_p",
                "display_name": "Top P",
                "type": "number",
                "description": "Controls diversity via nucleus sampling",
                "default": null
            },
            {
                "name": "frequency_penalty",
                "display_name": "Frequency Penalty",
                "type": "number",
                "description": "Reduces repetition (-2 to 2)",
                "default": null
            },
            {
                "name": "presence_penalty",
                "display_name": "Presence Penalty",
                "type": "number",
                "description": "Encourages new topics (-2 to 2)",
                "default": null
            },
            {
                "name": "response_format",
                "display_name": "Response Format",
                "type": "string or object",
                "description": "Output format specification",
                "default": null
            },
            {
                "name": "seed",
                "display_name": "Seed",
                "type": "number",
                "description": "Deterministic outputs",
                "default": null
            },
            {
                "name": "stop",
                "display_name": "Stop",
                "type": "string or array",
                "description": "Custom stop sequences",
                "default": null
            },
            {
                "name": "structured_outputs",
                "display_name": "Structured Outputs",
                "type": "string or object",
                "description": "JSON schema enforcement",
                "default": null
            },
            {
                "name": "tool_choice",
                "display_name": "Tool Choice",
                "type": "string",
                "description": "Tool selection control",
                "default": null
            }
        ],
        "outputs": [
            {
                "name": "content",
                "display_name": "Content",
                "can_stream": true,
                "type": "string",
                "description": "The content portion of the generated response message."
            },
            {
                "name": "message",
                "display_name": "Message",
                "type": "message",
                "can_stream": true,
                "description": "The full generated response message."
            },
            {
                "name": "role",
                "display_name": "Role",
                "can_stream": true,
                "type": "string",
                "description": "Role of the response (usually 'assistant')"
            },
            {
                "name": "tool_calls",
                "display_name": "Tool Calls",
                "type": "array of tools",
                "description": "Tool calls made by the model"
            },
            {
                "name": "finish_reason",
                "display_name": "Finish Reason",
                "type": "string",
                "description": "Why the completion finished"
            },
            {
                "name": "usage",
                "display_name": "Token Usage",
                "type": "object",
                "description": "Token usage statistics"
            },
            {
                "name": "cost_total",
                "display_name": "Total Cost",
                "type": "number",
                "description": "Total cost for processing this request (USD)"
            },
            {
                "name": "cost_itemized",
                "display_name": "Itemized Cost",
                "type": "array",
                "description": "Detailed breakdown of costs"
            }
        ],
        "pricing": {
            "reference": "https://openrouter.ai/models",
            "items": [
                {
                    "key": "input_cost_per_million",
                    "label": "Input Tokens (per 1M)",
                    "cost": 0.3,
                    "currency": "USD"
                },
                {
                    "key": "output_cost_per_million",
                    "label": "Output Tokens (per 1M)",
                    "cost": 0.8999999999999999,
                    "currency": "USD"
                }
            ]
        },
        "id": "mistralai-codestral-2508"
    },
    {
        "display_name": "Mistral: Devstral Medium",
        "description": "Devstral Medium is a high-performance code generation and agentic reasoning model developed jointly by Mistral AI and All Hands AI. Positioned as a step up from Devstral Small, it achieves 61.6% on SWE-Bench Verified, placing it ahead of Gemini 2.5 Pro and GPT-4.1 in code-related tasks, at a fraction of the cost. It is designed for generalization across prompt styles and tool use in code agents and frameworks.\n\nDevstral Medium is available via API only (not open-weight), and supports enterprise deployment on private infrastructure, with optional fine-tuning capabilities.",
        "category": "llm",
        "provider": "mistralai",
        "accepts_plugins": true,
        "model_id": "mistralai/devstral-medium",
        "context_length": 131072,
        "supported_parameters": [
            "frequency_penalty",
            "max_tokens",
            "presence_penalty",
            "response_format",
            "seed",
            "stop",
            "structured_outputs",
            "temperature",
            "tool_choice",
            "tools",
            "top_p"
        ],
        "inputs": [
            {
                "name": "system_prompt",
                "display_name": "System Prompt",
                "type": "string or message",
                "description": "System prompt for the model",
                "default": null
            },
            {
                "name": "messages",
                "display_name": "Messages",
                "type": "array of messages or message or string",
                "description": "Array of chat messages",
                "required": true
            },
            {
                "name": "tools",
                "display_name": "Tools",
                "type": "tool",
                "description": "Array of tools to use",
                "default": null,
                "allow_multiple": true
            },
            {
                "name": "temperature",
                "display_name": "Temperature",
                "type": "number",
                "description": "Controls randomness (0-2)",
                "default": null
            },
            {
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "type": "number",
                "description": "Maximum tokens to generate",
                "default": null
            },
            {
                "name": "top_p",
                "display_name": "Top P",
                "type": "number",
                "description": "Controls diversity via nucleus sampling",
                "default": null
            },
            {
                "name": "frequency_penalty",
                "display_name": "Frequency Penalty",
                "type": "number",
                "description": "Reduces repetition (-2 to 2)",
                "default": null
            },
            {
                "name": "presence_penalty",
                "display_name": "Presence Penalty",
                "type": "number",
                "description": "Encourages new topics (-2 to 2)",
                "default": null
            },
            {
                "name": "response_format",
                "display_name": "Response Format",
                "type": "string or object",
                "description": "Output format specification",
                "default": null
            },
            {
                "name": "seed",
                "display_name": "Seed",
                "type": "number",
                "description": "Deterministic outputs",
                "default": null
            },
            {
                "name": "stop",
                "display_name": "Stop",
                "type": "string or array",
                "description": "Custom stop sequences",
                "default": null
            },
            {
                "name": "structured_outputs",
                "display_name": "Structured Outputs",
                "type": "string or object",
                "description": "JSON schema enforcement",
                "default": null
            },
            {
                "name": "tool_choice",
                "display_name": "Tool Choice",
                "type": "string",
                "description": "Tool selection control",
                "default": null
            }
        ],
        "outputs": [
            {
                "name": "content",
                "display_name": "Content",
                "can_stream": true,
                "type": "string",
                "description": "The content portion of the generated response message."
            },
            {
                "name": "message",
                "display_name": "Message",
                "type": "message",
                "can_stream": true,
                "description": "The full generated response message."
            },
            {
                "name": "role",
                "display_name": "Role",
                "can_stream": true,
                "type": "string",
                "description": "Role of the response (usually 'assistant')"
            },
            {
                "name": "tool_calls",
                "display_name": "Tool Calls",
                "type": "array of tools",
                "description": "Tool calls made by the model"
            },
            {
                "name": "finish_reason",
                "display_name": "Finish Reason",
                "type": "string",
                "description": "Why the completion finished"
            },
            {
                "name": "usage",
                "display_name": "Token Usage",
                "type": "object",
                "description": "Token usage statistics"
            },
            {
                "name": "cost_total",
                "display_name": "Total Cost",
                "type": "number",
                "description": "Total cost for processing this request (USD)"
            },
            {
                "name": "cost_itemized",
                "display_name": "Itemized Cost",
                "type": "array",
                "description": "Detailed breakdown of costs"
            }
        ],
        "pricing": {
            "reference": "https://openrouter.ai/models",
            "items": [
                {
                    "key": "input_cost_per_million",
                    "label": "Input Tokens (per 1M)",
                    "cost": 0.39999999999999997,
                    "currency": "USD"
                },
                {
                    "key": "output_cost_per_million",
                    "label": "Output Tokens (per 1M)",
                    "cost": 2,
                    "currency": "USD"
                }
            ]
        },
        "id": "mistralai-devstral-medium"
    },
    {
        "display_name": "Mistral: Devstral Small 1.1",
        "description": "Devstral Small 1.1 is a 24B parameter open-weight language model for software engineering agents, developed by Mistral AI in collaboration with All Hands AI. Finetuned from Mistral Small 3.1 and released under the Apache 2.0 license, it features a 128k token context window and supports both Mistral-style function calling and XML output formats.\n\nDesigned for agentic coding workflows, Devstral Small 1.1 is optimized for tasks such as codebase exploration, multi-file edits, and integration into autonomous development agents like OpenHands and Cline. It achieves 53.6% on SWE-Bench Verified, surpassing all other open models on this benchmark, while remaining lightweight enough to run on a single 4090 GPU or Apple silicon machine. The model uses a Tekken tokenizer with a 131k vocabulary and is deployable via vLLM, Transformers, Ollama, LM Studio, and other OpenAI-compatible runtimes.\n",
        "category": "llm",
        "provider": "mistralai",
        "accepts_plugins": true,
        "model_id": "mistralai/devstral-small",
        "context_length": 128000,
        "supported_parameters": [
            "frequency_penalty",
            "max_tokens",
            "min_p",
            "presence_penalty",
            "repetition_penalty",
            "response_format",
            "seed",
            "stop",
            "structured_outputs",
            "temperature",
            "tool_choice",
            "tools",
            "top_k",
            "top_p"
        ],
        "inputs": [
            {
                "name": "system_prompt",
                "display_name": "System Prompt",
                "type": "string or message",
                "description": "System prompt for the model",
                "default": null
            },
            {
                "name": "messages",
                "display_name": "Messages",
                "type": "array of messages or message or string",
                "description": "Array of chat messages",
                "required": true
            },
            {
                "name": "tools",
                "display_name": "Tools",
                "type": "tool",
                "description": "Array of tools to use",
                "default": null,
                "allow_multiple": true
            },
            {
                "name": "temperature",
                "display_name": "Temperature",
                "type": "number",
                "description": "Controls randomness (0-2)",
                "default": null
            },
            {
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "type": "number",
                "description": "Maximum tokens to generate",
                "default": null
            },
            {
                "name": "top_p",
                "display_name": "Top P",
                "type": "number",
                "description": "Controls diversity via nucleus sampling",
                "default": null
            },
            {
                "name": "frequency_penalty",
                "display_name": "Frequency Penalty",
                "type": "number",
                "description": "Reduces repetition (-2 to 2)",
                "default": null
            },
            {
                "name": "presence_penalty",
                "display_name": "Presence Penalty",
                "type": "number",
                "description": "Encourages new topics (-2 to 2)",
                "default": null
            },
            {
                "name": "response_format",
                "display_name": "Response Format",
                "type": "string or object",
                "description": "Output format specification",
                "default": null
            },
            {
                "name": "seed",
                "display_name": "Seed",
                "type": "number",
                "description": "Deterministic outputs",
                "default": null
            },
            {
                "name": "stop",
                "display_name": "Stop",
                "type": "string or array",
                "description": "Custom stop sequences",
                "default": null
            },
            {
                "name": "structured_outputs",
                "display_name": "Structured Outputs",
                "type": "string or object",
                "description": "JSON schema enforcement",
                "default": null
            },
            {
                "name": "tool_choice",
                "display_name": "Tool Choice",
                "type": "string",
                "description": "Tool selection control",
                "default": null
            }
        ],
        "outputs": [
            {
                "name": "content",
                "display_name": "Content",
                "can_stream": true,
                "type": "string",
                "description": "The content portion of the generated response message."
            },
            {
                "name": "message",
                "display_name": "Message",
                "type": "message",
                "can_stream": true,
                "description": "The full generated response message."
            },
            {
                "name": "role",
                "display_name": "Role",
                "can_stream": true,
                "type": "string",
                "description": "Role of the response (usually 'assistant')"
            },
            {
                "name": "tool_calls",
                "display_name": "Tool Calls",
                "type": "array of tools",
                "description": "Tool calls made by the model"
            },
            {
                "name": "finish_reason",
                "display_name": "Finish Reason",
                "type": "string",
                "description": "Why the completion finished"
            },
            {
                "name": "usage",
                "display_name": "Token Usage",
                "type": "object",
                "description": "Token usage statistics"
            },
            {
                "name": "cost_total",
                "display_name": "Total Cost",
                "type": "number",
                "description": "Total cost for processing this request (USD)"
            },
            {
                "name": "cost_itemized",
                "display_name": "Itemized Cost",
                "type": "array",
                "description": "Detailed breakdown of costs"
            }
        ],
        "pricing": {
            "reference": "https://openrouter.ai/models",
            "items": [
                {
                    "key": "input_cost_per_million",
                    "label": "Input Tokens (per 1M)",
                    "cost": 0.07,
                    "currency": "USD"
                },
                {
                    "key": "output_cost_per_million",
                    "label": "Output Tokens (per 1M)",
                    "cost": 0.28,
                    "currency": "USD"
                }
            ]
        },
        "id": "mistralai-devstral-small"
    },
    {
        "display_name": "Mistral: Devstral Small 2505",
        "description": "Devstral-Small-2505 is a 24B parameter agentic LLM fine-tuned from Mistral-Small-3.1, jointly developed by Mistral AI and All Hands AI for advanced software engineering tasks. It is optimized for codebase exploration, multi-file editing, and integration into coding agents, achieving state-of-the-art results on SWE-Bench Verified (46.8%).\n\nDevstral supports a 128k context window and uses a custom Tekken tokenizer. It is text-only, with the vision encoder removed, and is suitable for local deployment on high-end consumer hardware (e.g., RTX 4090, 32GB RAM Macs). Devstral is best used in agentic workflows via the OpenHands scaffold and is compatible with inference frameworks like vLLM, Transformers, and Ollama. It is released under the Apache 2.0 license.",
        "category": "llm",
        "provider": "mistralai",
        "accepts_plugins": true,
        "model_id": "mistralai/devstral-small-2505",
        "context_length": 131072,
        "supported_parameters": [
            "frequency_penalty",
            "logit_bias",
            "logprobs",
            "max_tokens",
            "min_p",
            "presence_penalty",
            "repetition_penalty",
            "response_format",
            "seed",
            "stop",
            "structured_outputs",
            "temperature",
            "tool_choice",
            "tools",
            "top_k",
            "top_logprobs",
            "top_p"
        ],
        "inputs": [
            {
                "name": "system_prompt",
                "display_name": "System Prompt",
                "type": "string or message",
                "description": "System prompt for the model",
                "default": null
            },
            {
                "name": "messages",
                "display_name": "Messages",
                "type": "array of messages or message or string",
                "description": "Array of chat messages",
                "required": true
            },
            {
                "name": "tools",
                "display_name": "Tools",
                "type": "tool",
                "description": "Array of tools to use",
                "default": null,
                "allow_multiple": true
            },
            {
                "name": "temperature",
                "display_name": "Temperature",
                "type": "number",
                "description": "Controls randomness (0-2)",
                "default": null
            },
            {
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "type": "number",
                "description": "Maximum tokens to generate",
                "default": null
            },
            {
                "name": "top_p",
                "display_name": "Top P",
                "type": "number",
                "description": "Controls diversity via nucleus sampling",
                "default": null
            },
            {
                "name": "frequency_penalty",
                "display_name": "Frequency Penalty",
                "type": "number",
                "description": "Reduces repetition (-2 to 2)",
                "default": null
            },
            {
                "name": "presence_penalty",
                "display_name": "Presence Penalty",
                "type": "number",
                "description": "Encourages new topics (-2 to 2)",
                "default": null
            },
            {
                "name": "response_format",
                "display_name": "Response Format",
                "type": "string or object",
                "description": "Output format specification",
                "default": null
            },
            {
                "name": "seed",
                "display_name": "Seed",
                "type": "number",
                "description": "Deterministic outputs",
                "default": null
            },
            {
                "name": "stop",
                "display_name": "Stop",
                "type": "string or array",
                "description": "Custom stop sequences",
                "default": null
            },
            {
                "name": "structured_outputs",
                "display_name": "Structured Outputs",
                "type": "string or object",
                "description": "JSON schema enforcement",
                "default": null
            },
            {
                "name": "tool_choice",
                "display_name": "Tool Choice",
                "type": "string",
                "description": "Tool selection control",
                "default": null
            }
        ],
        "outputs": [
            {
                "name": "content",
                "display_name": "Content",
                "can_stream": true,
                "type": "string",
                "description": "The content portion of the generated response message."
            },
            {
                "name": "message",
                "display_name": "Message",
                "type": "message",
                "can_stream": true,
                "description": "The full generated response message."
            },
            {
                "name": "role",
                "display_name": "Role",
                "can_stream": true,
                "type": "string",
                "description": "Role of the response (usually 'assistant')"
            },
            {
                "name": "tool_calls",
                "display_name": "Tool Calls",
                "type": "array of tools",
                "description": "Tool calls made by the model"
            },
            {
                "name": "finish_reason",
                "display_name": "Finish Reason",
                "type": "string",
                "description": "Why the completion finished"
            },
            {
                "name": "usage",
                "display_name": "Token Usage",
                "type": "object",
                "description": "Token usage statistics"
            },
            {
                "name": "cost_total",
                "display_name": "Total Cost",
                "type": "number",
                "description": "Total cost for processing this request (USD)"
            },
            {
                "name": "cost_itemized",
                "display_name": "Itemized Cost",
                "type": "array",
                "description": "Detailed breakdown of costs"
            },
            {
                "name": "logprobs",
                "display_name": "Log Probabilities",
                "type": "object",
                "description": "Token probabilities and logprobs from the model"
            }
        ],
        "pricing": {
            "reference": "https://openrouter.ai/models",
            "items": [
                {
                    "key": "input_cost_per_million",
                    "label": "Input Tokens (per 1M)",
                    "cost": 0.01999188,
                    "currency": "USD"
                },
                {
                    "key": "output_cost_per_million",
                    "label": "Output Tokens (per 1M)",
                    "cost": 0.0800064,
                    "currency": "USD"
                }
            ]
        },
        "id": "mistralai-devstral-small-2505"
    },
    {
        "display_name": "Mistral: Devstral Small 2505 (free)",
        "description": "Devstral-Small-2505 is a 24B parameter agentic LLM fine-tuned from Mistral-Small-3.1, jointly developed by Mistral AI and All Hands AI for advanced software engineering tasks. It is optimized for codebase exploration, multi-file editing, and integration into coding agents, achieving state-of-the-art results on SWE-Bench Verified (46.8%).\n\nDevstral supports a 128k context window and uses a custom Tekken tokenizer. It is text-only, with the vision encoder removed, and is suitable for local deployment on high-end consumer hardware (e.g., RTX 4090, 32GB RAM Macs). Devstral is best used in agentic workflows via the OpenHands scaffold and is compatible with inference frameworks like vLLM, Transformers, and Ollama. It is released under the Apache 2.0 license.",
        "category": "llm",
        "provider": "mistralai",
        "accepts_plugins": true,
        "model_id": "mistralai/devstral-small-2505:free",
        "context_length": 32768,
        "supported_parameters": [
            "frequency_penalty",
            "logit_bias",
            "logprobs",
            "max_tokens",
            "min_p",
            "presence_penalty",
            "repetition_penalty",
            "seed",
            "stop",
            "temperature",
            "tool_choice",
            "tools",
            "top_k",
            "top_logprobs",
            "top_p"
        ],
        "inputs": [
            {
                "name": "system_prompt",
                "display_name": "System Prompt",
                "type": "string or message",
                "description": "System prompt for the model",
                "default": null
            },
            {
                "name": "messages",
                "display_name": "Messages",
                "type": "array of messages or message or string",
                "description": "Array of chat messages",
                "required": true
            },
            {
                "name": "tools",
                "display_name": "Tools",
                "type": "tool",
                "description": "Array of tools to use",
                "default": null,
                "allow_multiple": true
            },
            {
                "name": "temperature",
                "display_name": "Temperature",
                "type": "number",
                "description": "Controls randomness (0-2)",
                "default": null
            },
            {
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "type": "number",
                "description": "Maximum tokens to generate",
                "default": null
            },
            {
                "name": "top_p",
                "display_name": "Top P",
                "type": "number",
                "description": "Controls diversity via nucleus sampling",
                "default": null
            },
            {
                "name": "frequency_penalty",
                "display_name": "Frequency Penalty",
                "type": "number",
                "description": "Reduces repetition (-2 to 2)",
                "default": null
            },
            {
                "name": "presence_penalty",
                "display_name": "Presence Penalty",
                "type": "number",
                "description": "Encourages new topics (-2 to 2)",
                "default": null
            },
            {
                "name": "seed",
                "display_name": "Seed",
                "type": "number",
                "description": "Deterministic outputs",
                "default": null
            },
            {
                "name": "stop",
                "display_name": "Stop",
                "type": "string or array",
                "description": "Custom stop sequences",
                "default": null
            },
            {
                "name": "tool_choice",
                "display_name": "Tool Choice",
                "type": "string",
                "description": "Tool selection control",
                "default": null
            }
        ],
        "outputs": [
            {
                "name": "content",
                "display_name": "Content",
                "can_stream": true,
                "type": "string",
                "description": "The content portion of the generated response message."
            },
            {
                "name": "message",
                "display_name": "Message",
                "type": "message",
                "can_stream": true,
                "description": "The full generated response message."
            },
            {
                "name": "role",
                "display_name": "Role",
                "can_stream": true,
                "type": "string",
                "description": "Role of the response (usually 'assistant')"
            },
            {
                "name": "tool_calls",
                "display_name": "Tool Calls",
                "type": "array of tools",
                "description": "Tool calls made by the model"
            },
            {
                "name": "finish_reason",
                "display_name": "Finish Reason",
                "type": "string",
                "description": "Why the completion finished"
            },
            {
                "name": "usage",
                "display_name": "Token Usage",
                "type": "object",
                "description": "Token usage statistics"
            },
            {
                "name": "cost_total",
                "display_name": "Total Cost",
                "type": "number",
                "description": "Total cost for processing this request (USD)"
            },
            {
                "name": "cost_itemized",
                "display_name": "Itemized Cost",
                "type": "array",
                "description": "Detailed breakdown of costs"
            },
            {
                "name": "logprobs",
                "display_name": "Log Probabilities",
                "type": "object",
                "description": "Token probabilities and logprobs from the model"
            }
        ],
        "pricing": {
            "reference": "https://openrouter.ai/models",
            "items": [
                {
                    "key": "input_cost_per_million",
                    "label": "Input Tokens (per 1M)",
                    "cost": 0,
                    "currency": "USD"
                },
                {
                    "key": "output_cost_per_million",
                    "label": "Output Tokens (per 1M)",
                    "cost": 0,
                    "currency": "USD"
                }
            ]
        },
        "id": "mistralai-devstral-small-2505-free"
    },
    {
        "display_name": "Mistral: Magistral Medium 2506",
        "description": "Magistral is Mistral's first reasoning model. It is ideal for general purpose use requiring longer thought processing and better accuracy than with non-reasoning LLMs. From legal research and financial forecasting to software development and creative storytelling — this model solves multi-step challenges where transparency and precision are critical.",
        "category": "llm",
        "provider": "mistralai",
        "accepts_plugins": true,
        "model_id": "mistralai/magistral-medium-2506",
        "context_length": 40960,
        "supported_parameters": [
            "frequency_penalty",
            "include_reasoning",
            "max_tokens",
            "presence_penalty",
            "reasoning",
            "response_format",
            "seed",
            "stop",
            "structured_outputs",
            "temperature",
            "tool_choice",
            "tools",
            "top_p"
        ],
        "inputs": [
            {
                "name": "system_prompt",
                "display_name": "System Prompt",
                "type": "string or message",
                "description": "System prompt for the model",
                "default": null
            },
            {
                "name": "messages",
                "display_name": "Messages",
                "type": "array of messages or message or string",
                "description": "Array of chat messages",
                "required": true
            },
            {
                "name": "tools",
                "display_name": "Tools",
                "type": "tool",
                "description": "Array of tools to use",
                "default": null,
                "allow_multiple": true
            },
            {
                "name": "temperature",
                "display_name": "Temperature",
                "type": "number",
                "description": "Controls randomness (0-2)",
                "default": null
            },
            {
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "type": "number",
                "description": "Maximum tokens to generate",
                "default": null
            },
            {
                "name": "top_p",
                "display_name": "Top P",
                "type": "number",
                "description": "Controls diversity via nucleus sampling",
                "default": null
            },
            {
                "name": "frequency_penalty",
                "display_name": "Frequency Penalty",
                "type": "number",
                "description": "Reduces repetition (-2 to 2)",
                "default": null
            },
            {
                "name": "include_reasoning",
                "display_name": "Include Reasoning",
                "type": "boolean",
                "description": "Include reasoning in response",
                "default": null
            },
            {
                "name": "presence_penalty",
                "display_name": "Presence Penalty",
                "type": "number",
                "description": "Encourages new topics (-2 to 2)",
                "default": null
            },
            {
                "name": "reasoning",
                "display_name": "Reasoning",
                "type": "boolean",
                "description": "Internal reasoning mode",
                "default": null
            },
            {
                "name": "response_format",
                "display_name": "Response Format",
                "type": "string or object",
                "description": "Output format specification",
                "default": null
            },
            {
                "name": "seed",
                "display_name": "Seed",
                "type": "number",
                "description": "Deterministic outputs",
                "default": null
            },
            {
                "name": "stop",
                "display_name": "Stop",
                "type": "string or array",
                "description": "Custom stop sequences",
                "default": null
            },
            {
                "name": "structured_outputs",
                "display_name": "Structured Outputs",
                "type": "string or object",
                "description": "JSON schema enforcement",
                "default": null
            },
            {
                "name": "tool_choice",
                "display_name": "Tool Choice",
                "type": "string",
                "description": "Tool selection control",
                "default": null
            }
        ],
        "outputs": [
            {
                "name": "content",
                "display_name": "Content",
                "can_stream": true,
                "type": "string",
                "description": "The content portion of the generated response message."
            },
            {
                "name": "message",
                "display_name": "Message",
                "type": "message",
                "can_stream": true,
                "description": "The full generated response message."
            },
            {
                "name": "role",
                "display_name": "Role",
                "can_stream": true,
                "type": "string",
                "description": "Role of the response (usually 'assistant')"
            },
            {
                "name": "tool_calls",
                "display_name": "Tool Calls",
                "type": "array of tools",
                "description": "Tool calls made by the model"
            },
            {
                "name": "finish_reason",
                "display_name": "Finish Reason",
                "type": "string",
                "description": "Why the completion finished"
            },
            {
                "name": "usage",
                "display_name": "Token Usage",
                "type": "object",
                "description": "Token usage statistics"
            },
            {
                "name": "cost_total",
                "display_name": "Total Cost",
                "type": "number",
                "description": "Total cost for processing this request (USD)"
            },
            {
                "name": "cost_itemized",
                "display_name": "Itemized Cost",
                "type": "array",
                "description": "Detailed breakdown of costs"
            },
            {
                "name": "reasoning",
                "display_name": "Reasoning",
                "type": "string",
                "description": "The detailed reasoning chain from the model"
            },
            {
                "name": "refusal",
                "display_name": "Refusal",
                "type": "string",
                "description": "Model refusal response (if any)"
            }
        ],
        "pricing": {
            "reference": "https://openrouter.ai/models",
            "items": [
                {
                    "key": "input_cost_per_million",
                    "label": "Input Tokens (per 1M)",
                    "cost": 2,
                    "currency": "USD"
                },
                {
                    "key": "output_cost_per_million",
                    "label": "Output Tokens (per 1M)",
                    "cost": 5,
                    "currency": "USD"
                }
            ]
        },
        "id": "mistralai-magistral-medium-2506"
    },
    {
        "display_name": "Mistral: Magistral Medium 2506 (thinking)",
        "description": "Magistral is Mistral's first reasoning model. It is ideal for general purpose use requiring longer thought processing and better accuracy than with non-reasoning LLMs. From legal research and financial forecasting to software development and creative storytelling — this model solves multi-step challenges where transparency and precision are critical.",
        "category": "llm",
        "provider": "mistralai",
        "accepts_plugins": true,
        "model_id": "mistralai/magistral-medium-2506:thinking",
        "context_length": 40960,
        "supported_parameters": [
            "frequency_penalty",
            "include_reasoning",
            "max_tokens",
            "presence_penalty",
            "reasoning",
            "response_format",
            "seed",
            "stop",
            "structured_outputs",
            "temperature",
            "tool_choice",
            "tools",
            "top_p"
        ],
        "inputs": [
            {
                "name": "system_prompt",
                "display_name": "System Prompt",
                "type": "string or message",
                "description": "System prompt for the model",
                "default": null
            },
            {
                "name": "messages",
                "display_name": "Messages",
                "type": "array of messages or message or string",
                "description": "Array of chat messages",
                "required": true
            },
            {
                "name": "tools",
                "display_name": "Tools",
                "type": "tool",
                "description": "Array of tools to use",
                "default": null,
                "allow_multiple": true
            },
            {
                "name": "temperature",
                "display_name": "Temperature",
                "type": "number",
                "description": "Controls randomness (0-2)",
                "default": null
            },
            {
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "type": "number",
                "description": "Maximum tokens to generate",
                "default": null
            },
            {
                "name": "top_p",
                "display_name": "Top P",
                "type": "number",
                "description": "Controls diversity via nucleus sampling",
                "default": null
            },
            {
                "name": "frequency_penalty",
                "display_name": "Frequency Penalty",
                "type": "number",
                "description": "Reduces repetition (-2 to 2)",
                "default": null
            },
            {
                "name": "include_reasoning",
                "display_name": "Include Reasoning",
                "type": "boolean",
                "description": "Include reasoning in response",
                "default": null
            },
            {
                "name": "presence_penalty",
                "display_name": "Presence Penalty",
                "type": "number",
                "description": "Encourages new topics (-2 to 2)",
                "default": null
            },
            {
                "name": "reasoning",
                "display_name": "Reasoning",
                "type": "boolean",
                "description": "Internal reasoning mode",
                "default": null
            },
            {
                "name": "response_format",
                "display_name": "Response Format",
                "type": "string or object",
                "description": "Output format specification",
                "default": null
            },
            {
                "name": "seed",
                "display_name": "Seed",
                "type": "number",
                "description": "Deterministic outputs",
                "default": null
            },
            {
                "name": "stop",
                "display_name": "Stop",
                "type": "string or array",
                "description": "Custom stop sequences",
                "default": null
            },
            {
                "name": "structured_outputs",
                "display_name": "Structured Outputs",
                "type": "string or object",
                "description": "JSON schema enforcement",
                "default": null
            },
            {
                "name": "tool_choice",
                "display_name": "Tool Choice",
                "type": "string",
                "description": "Tool selection control",
                "default": null
            }
        ],
        "outputs": [
            {
                "name": "content",
                "display_name": "Content",
                "can_stream": true,
                "type": "string",
                "description": "The content portion of the generated response message."
            },
            {
                "name": "message",
                "display_name": "Message",
                "type": "message",
                "can_stream": true,
                "description": "The full generated response message."
            },
            {
                "name": "role",
                "display_name": "Role",
                "can_stream": true,
                "type": "string",
                "description": "Role of the response (usually 'assistant')"
            },
            {
                "name": "tool_calls",
                "display_name": "Tool Calls",
                "type": "array of tools",
                "description": "Tool calls made by the model"
            },
            {
                "name": "finish_reason",
                "display_name": "Finish Reason",
                "type": "string",
                "description": "Why the completion finished"
            },
            {
                "name": "usage",
                "display_name": "Token Usage",
                "type": "object",
                "description": "Token usage statistics"
            },
            {
                "name": "cost_total",
                "display_name": "Total Cost",
                "type": "number",
                "description": "Total cost for processing this request (USD)"
            },
            {
                "name": "cost_itemized",
                "display_name": "Itemized Cost",
                "type": "array",
                "description": "Detailed breakdown of costs"
            },
            {
                "name": "reasoning",
                "display_name": "Reasoning",
                "type": "string",
                "description": "The detailed reasoning chain from the model"
            },
            {
                "name": "refusal",
                "display_name": "Refusal",
                "type": "string",
                "description": "Model refusal response (if any)"
            }
        ],
        "pricing": {
            "reference": "https://openrouter.ai/models",
            "items": [
                {
                    "key": "input_cost_per_million",
                    "label": "Input Tokens (per 1M)",
                    "cost": 2,
                    "currency": "USD"
                },
                {
                    "key": "output_cost_per_million",
                    "label": "Output Tokens (per 1M)",
                    "cost": 5,
                    "currency": "USD"
                }
            ]
        },
        "id": "mistralai-magistral-medium-2506-thinking"
    },
    {
        "display_name": "Mistral: Magistral Small 2506",
        "description": "Magistral Small is a 24B parameter instruction-tuned model based on Mistral-Small-3.1 (2503), enhanced through supervised fine-tuning on traces from Magistral Medium and further refined via reinforcement learning. It is optimized for reasoning and supports a wide multilingual range, including over 20 languages.",
        "category": "llm",
        "provider": "mistralai",
        "accepts_plugins": true,
        "model_id": "mistralai/magistral-small-2506",
        "context_length": 40000,
        "supported_parameters": [
            "frequency_penalty",
            "include_reasoning",
            "max_tokens",
            "presence_penalty",
            "reasoning",
            "response_format",
            "seed",
            "stop",
            "structured_outputs",
            "temperature",
            "tool_choice",
            "tools",
            "top_p"
        ],
        "inputs": [
            {
                "name": "system_prompt",
                "display_name": "System Prompt",
                "type": "string or message",
                "description": "System prompt for the model",
                "default": null
            },
            {
                "name": "messages",
                "display_name": "Messages",
                "type": "array of messages or message or string",
                "description": "Array of chat messages",
                "required": true
            },
            {
                "name": "tools",
                "display_name": "Tools",
                "type": "tool",
                "description": "Array of tools to use",
                "default": null,
                "allow_multiple": true
            },
            {
                "name": "temperature",
                "display_name": "Temperature",
                "type": "number",
                "description": "Controls randomness (0-2)",
                "default": null
            },
            {
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "type": "number",
                "description": "Maximum tokens to generate",
                "default": null
            },
            {
                "name": "top_p",
                "display_name": "Top P",
                "type": "number",
                "description": "Controls diversity via nucleus sampling",
                "default": null
            },
            {
                "name": "frequency_penalty",
                "display_name": "Frequency Penalty",
                "type": "number",
                "description": "Reduces repetition (-2 to 2)",
                "default": null
            },
            {
                "name": "include_reasoning",
                "display_name": "Include Reasoning",
                "type": "boolean",
                "description": "Include reasoning in response",
                "default": null
            },
            {
                "name": "presence_penalty",
                "display_name": "Presence Penalty",
                "type": "number",
                "description": "Encourages new topics (-2 to 2)",
                "default": null
            },
            {
                "name": "reasoning",
                "display_name": "Reasoning",
                "type": "boolean",
                "description": "Internal reasoning mode",
                "default": null
            },
            {
                "name": "response_format",
                "display_name": "Response Format",
                "type": "string or object",
                "description": "Output format specification",
                "default": null
            },
            {
                "name": "seed",
                "display_name": "Seed",
                "type": "number",
                "description": "Deterministic outputs",
                "default": null
            },
            {
                "name": "stop",
                "display_name": "Stop",
                "type": "string or array",
                "description": "Custom stop sequences",
                "default": null
            },
            {
                "name": "structured_outputs",
                "display_name": "Structured Outputs",
                "type": "string or object",
                "description": "JSON schema enforcement",
                "default": null
            },
            {
                "name": "tool_choice",
                "display_name": "Tool Choice",
                "type": "string",
                "description": "Tool selection control",
                "default": null
            }
        ],
        "outputs": [
            {
                "name": "content",
                "display_name": "Content",
                "can_stream": true,
                "type": "string",
                "description": "The content portion of the generated response message."
            },
            {
                "name": "message",
                "display_name": "Message",
                "type": "message",
                "can_stream": true,
                "description": "The full generated response message."
            },
            {
                "name": "role",
                "display_name": "Role",
                "can_stream": true,
                "type": "string",
                "description": "Role of the response (usually 'assistant')"
            },
            {
                "name": "tool_calls",
                "display_name": "Tool Calls",
                "type": "array of tools",
                "description": "Tool calls made by the model"
            },
            {
                "name": "finish_reason",
                "display_name": "Finish Reason",
                "type": "string",
                "description": "Why the completion finished"
            },
            {
                "name": "usage",
                "display_name": "Token Usage",
                "type": "object",
                "description": "Token usage statistics"
            },
            {
                "name": "cost_total",
                "display_name": "Total Cost",
                "type": "number",
                "description": "Total cost for processing this request (USD)"
            },
            {
                "name": "cost_itemized",
                "display_name": "Itemized Cost",
                "type": "array",
                "description": "Detailed breakdown of costs"
            },
            {
                "name": "reasoning",
                "display_name": "Reasoning",
                "type": "string",
                "description": "The detailed reasoning chain from the model"
            },
            {
                "name": "refusal",
                "display_name": "Refusal",
                "type": "string",
                "description": "Model refusal response (if any)"
            }
        ],
        "pricing": {
            "reference": "https://openrouter.ai/models",
            "items": [
                {
                    "key": "input_cost_per_million",
                    "label": "Input Tokens (per 1M)",
                    "cost": 0.5,
                    "currency": "USD"
                },
                {
                    "key": "output_cost_per_million",
                    "label": "Output Tokens (per 1M)",
                    "cost": 1.5,
                    "currency": "USD"
                }
            ]
        },
        "id": "mistralai-magistral-small-2506"
    },
    {
        "display_name": "Mistral: Ministral 3B",
        "description": "Ministral 3B is a 3B parameter model optimized for on-device and edge computing. It excels in knowledge, commonsense reasoning, and function-calling, outperforming larger models like Mistral 7B on most benchmarks. Supporting up to 128k context length, it’s ideal for orchestrating agentic workflows and specialist tasks with efficient inference.",
        "category": "llm",
        "provider": "mistralai",
        "accepts_plugins": false,
        "model_id": "mistralai/ministral-3b",
        "context_length": 32768,
        "supported_parameters": [
            "frequency_penalty",
            "max_tokens",
            "presence_penalty",
            "response_format",
            "seed",
            "stop",
            "structured_outputs",
            "temperature",
            "top_p"
        ],
        "inputs": [
            {
                "name": "prompt",
                "display_name": "Prompt",
                "type": "string",
                "description": "Text prompt for completion",
                "required": true
            },
            {
                "name": "temperature",
                "display_name": "Temperature",
                "type": "number",
                "description": "Controls randomness (0-2)",
                "default": null
            },
            {
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "type": "number",
                "description": "Maximum tokens to generate",
                "default": null
            },
            {
                "name": "top_p",
                "display_name": "Top P",
                "type": "number",
                "description": "Controls diversity via nucleus sampling",
                "default": null
            },
            {
                "name": "frequency_penalty",
                "display_name": "Frequency Penalty",
                "type": "number",
                "description": "Reduces repetition (-2 to 2)",
                "default": null
            },
            {
                "name": "presence_penalty",
                "display_name": "Presence Penalty",
                "type": "number",
                "description": "Encourages new topics (-2 to 2)",
                "default": null
            },
            {
                "name": "response_format",
                "display_name": "Response Format",
                "type": "string or object",
                "description": "Output format specification",
                "default": null
            },
            {
                "name": "seed",
                "display_name": "Seed",
                "type": "number",
                "description": "Deterministic outputs",
                "default": null
            },
            {
                "name": "stop",
                "display_name": "Stop",
                "type": "string or array",
                "description": "Custom stop sequences",
                "default": null
            },
            {
                "name": "structured_outputs",
                "display_name": "Structured Outputs",
                "type": "string or object",
                "description": "JSON schema enforcement",
                "default": null
            }
        ],
        "outputs": [
            {
                "name": "content",
                "display_name": "Content",
                "can_stream": true,
                "type": "string",
                "description": "The generated completion text"
            },
            {
                "name": "finish_reason",
                "display_name": "Finish Reason",
                "type": "string",
                "description": "Why the completion finished"
            },
            {
                "name": "usage",
                "display_name": "Token Usage",
                "type": "object",
                "description": "Token usage statistics"
            },
            {
                "name": "cost_total",
                "display_name": "Total Cost",
                "type": "number",
                "description": "Total cost for processing this request (USD)"
            },
            {
                "name": "cost_itemized",
                "display_name": "Itemized Cost",
                "type": "array",
                "description": "Detailed breakdown of costs"
            }
        ],
        "pricing": {
            "reference": "https://openrouter.ai/models",
            "items": [
                {
                    "key": "input_cost_per_million",
                    "label": "Input Tokens (per 1M)",
                    "cost": 0.04,
                    "currency": "USD"
                },
                {
                    "key": "output_cost_per_million",
                    "label": "Output Tokens (per 1M)",
                    "cost": 0.04,
                    "currency": "USD"
                }
            ]
        },
        "id": "mistralai-ministral-3b"
    },
    {
        "display_name": "Mistral: Ministral 8B",
        "description": "Ministral 8B is an 8B parameter model featuring a unique interleaved sliding-window attention pattern for faster, memory-efficient inference. Designed for edge use cases, it supports up to 128k context length and excels in knowledge and reasoning tasks. It outperforms peers in the sub-10B category, making it perfect for low-latency, privacy-first applications.",
        "category": "llm",
        "provider": "mistralai",
        "accepts_plugins": true,
        "model_id": "mistralai/ministral-8b",
        "context_length": 128000,
        "supported_parameters": [
            "frequency_penalty",
            "max_tokens",
            "presence_penalty",
            "response_format",
            "seed",
            "stop",
            "structured_outputs",
            "temperature",
            "tool_choice",
            "tools",
            "top_p"
        ],
        "inputs": [
            {
                "name": "system_prompt",
                "display_name": "System Prompt",
                "type": "string or message",
                "description": "System prompt for the model",
                "default": null
            },
            {
                "name": "messages",
                "display_name": "Messages",
                "type": "array of messages or message or string",
                "description": "Array of chat messages",
                "required": true
            },
            {
                "name": "tools",
                "display_name": "Tools",
                "type": "tool",
                "description": "Array of tools to use",
                "default": null,
                "allow_multiple": true
            },
            {
                "name": "temperature",
                "display_name": "Temperature",
                "type": "number",
                "description": "Controls randomness (0-2)",
                "default": null
            },
            {
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "type": "number",
                "description": "Maximum tokens to generate",
                "default": null
            },
            {
                "name": "top_p",
                "display_name": "Top P",
                "type": "number",
                "description": "Controls diversity via nucleus sampling",
                "default": null
            },
            {
                "name": "frequency_penalty",
                "display_name": "Frequency Penalty",
                "type": "number",
                "description": "Reduces repetition (-2 to 2)",
                "default": null
            },
            {
                "name": "presence_penalty",
                "display_name": "Presence Penalty",
                "type": "number",
                "description": "Encourages new topics (-2 to 2)",
                "default": null
            },
            {
                "name": "response_format",
                "display_name": "Response Format",
                "type": "string or object",
                "description": "Output format specification",
                "default": null
            },
            {
                "name": "seed",
                "display_name": "Seed",
                "type": "number",
                "description": "Deterministic outputs",
                "default": null
            },
            {
                "name": "stop",
                "display_name": "Stop",
                "type": "string or array",
                "description": "Custom stop sequences",
                "default": null
            },
            {
                "name": "structured_outputs",
                "display_name": "Structured Outputs",
                "type": "string or object",
                "description": "JSON schema enforcement",
                "default": null
            },
            {
                "name": "tool_choice",
                "display_name": "Tool Choice",
                "type": "string",
                "description": "Tool selection control",
                "default": null
            }
        ],
        "outputs": [
            {
                "name": "content",
                "display_name": "Content",
                "can_stream": true,
                "type": "string",
                "description": "The content portion of the generated response message."
            },
            {
                "name": "message",
                "display_name": "Message",
                "type": "message",
                "can_stream": true,
                "description": "The full generated response message."
            },
            {
                "name": "role",
                "display_name": "Role",
                "can_stream": true,
                "type": "string",
                "description": "Role of the response (usually 'assistant')"
            },
            {
                "name": "tool_calls",
                "display_name": "Tool Calls",
                "type": "array of tools",
                "description": "Tool calls made by the model"
            },
            {
                "name": "finish_reason",
                "display_name": "Finish Reason",
                "type": "string",
                "description": "Why the completion finished"
            },
            {
                "name": "usage",
                "display_name": "Token Usage",
                "type": "object",
                "description": "Token usage statistics"
            },
            {
                "name": "cost_total",
                "display_name": "Total Cost",
                "type": "number",
                "description": "Total cost for processing this request (USD)"
            },
            {
                "name": "cost_itemized",
                "display_name": "Itemized Cost",
                "type": "array",
                "description": "Detailed breakdown of costs"
            }
        ],
        "pricing": {
            "reference": "https://openrouter.ai/models",
            "items": [
                {
                    "key": "input_cost_per_million",
                    "label": "Input Tokens (per 1M)",
                    "cost": 0.09999999999999999,
                    "currency": "USD"
                },
                {
                    "key": "output_cost_per_million",
                    "label": "Output Tokens (per 1M)",
                    "cost": 0.09999999999999999,
                    "currency": "USD"
                }
            ]
        },
        "id": "mistralai-ministral-8b"
    },
    {
        "display_name": "Mistral: Mistral 7B Instruct",
        "description": "A high-performing, industry-standard 7.3B parameter model, with optimizations for speed and context length.\n\n*Mistral 7B Instruct has multiple version variants, and this is intended to be the latest version.*",
        "category": "llm",
        "provider": "mistralai",
        "accepts_plugins": true,
        "model_id": "mistralai/mistral-7b-instruct",
        "context_length": 32768,
        "supported_parameters": [
            "frequency_penalty",
            "logit_bias",
            "logprobs",
            "max_tokens",
            "min_p",
            "presence_penalty",
            "repetition_penalty",
            "response_format",
            "seed",
            "stop",
            "temperature",
            "tool_choice",
            "tools",
            "top_k",
            "top_p"
        ],
        "inputs": [
            {
                "name": "system_prompt",
                "display_name": "System Prompt",
                "type": "string or message",
                "description": "System prompt for the model",
                "default": null
            },
            {
                "name": "messages",
                "display_name": "Messages",
                "type": "array of messages or message or string",
                "description": "Array of chat messages",
                "required": true
            },
            {
                "name": "tools",
                "display_name": "Tools",
                "type": "tool",
                "description": "Array of tools to use",
                "default": null,
                "allow_multiple": true
            },
            {
                "name": "temperature",
                "display_name": "Temperature",
                "type": "number",
                "description": "Controls randomness (0-2)",
                "default": null
            },
            {
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "type": "number",
                "description": "Maximum tokens to generate",
                "default": null
            },
            {
                "name": "top_p",
                "display_name": "Top P",
                "type": "number",
                "description": "Controls diversity via nucleus sampling",
                "default": null
            },
            {
                "name": "frequency_penalty",
                "display_name": "Frequency Penalty",
                "type": "number",
                "description": "Reduces repetition (-2 to 2)",
                "default": null
            },
            {
                "name": "presence_penalty",
                "display_name": "Presence Penalty",
                "type": "number",
                "description": "Encourages new topics (-2 to 2)",
                "default": null
            },
            {
                "name": "response_format",
                "display_name": "Response Format",
                "type": "string or object",
                "description": "Output format specification",
                "default": null
            },
            {
                "name": "seed",
                "display_name": "Seed",
                "type": "number",
                "description": "Deterministic outputs",
                "default": null
            },
            {
                "name": "stop",
                "display_name": "Stop",
                "type": "string or array",
                "description": "Custom stop sequences",
                "default": null
            },
            {
                "name": "tool_choice",
                "display_name": "Tool Choice",
                "type": "string",
                "description": "Tool selection control",
                "default": null
            }
        ],
        "outputs": [
            {
                "name": "content",
                "display_name": "Content",
                "can_stream": true,
                "type": "string",
                "description": "The content portion of the generated response message."
            },
            {
                "name": "message",
                "display_name": "Message",
                "type": "message",
                "can_stream": true,
                "description": "The full generated response message."
            },
            {
                "name": "role",
                "display_name": "Role",
                "can_stream": true,
                "type": "string",
                "description": "Role of the response (usually 'assistant')"
            },
            {
                "name": "tool_calls",
                "display_name": "Tool Calls",
                "type": "array of tools",
                "description": "Tool calls made by the model"
            },
            {
                "name": "finish_reason",
                "display_name": "Finish Reason",
                "type": "string",
                "description": "Why the completion finished"
            },
            {
                "name": "usage",
                "display_name": "Token Usage",
                "type": "object",
                "description": "Token usage statistics"
            },
            {
                "name": "cost_total",
                "display_name": "Total Cost",
                "type": "number",
                "description": "Total cost for processing this request (USD)"
            },
            {
                "name": "cost_itemized",
                "display_name": "Itemized Cost",
                "type": "array",
                "description": "Detailed breakdown of costs"
            },
            {
                "name": "logprobs",
                "display_name": "Log Probabilities",
                "type": "object",
                "description": "Token probabilities and logprobs from the model"
            }
        ],
        "pricing": {
            "reference": "https://openrouter.ai/models",
            "items": [
                {
                    "key": "input_cost_per_million",
                    "label": "Input Tokens (per 1M)",
                    "cost": 0.028,
                    "currency": "USD"
                },
                {
                    "key": "output_cost_per_million",
                    "label": "Output Tokens (per 1M)",
                    "cost": 0.054,
                    "currency": "USD"
                }
            ]
        },
        "id": "mistralai-mistral-7b-instruct"
    },
    {
        "display_name": "Mistral: Mistral 7B Instruct (free)",
        "description": "A high-performing, industry-standard 7.3B parameter model, with optimizations for speed and context length.\n\n*Mistral 7B Instruct has multiple version variants, and this is intended to be the latest version.*",
        "category": "llm",
        "provider": "mistralai",
        "accepts_plugins": true,
        "model_id": "mistralai/mistral-7b-instruct:free",
        "context_length": 32768,
        "supported_parameters": [
            "frequency_penalty",
            "max_tokens",
            "min_p",
            "presence_penalty",
            "repetition_penalty",
            "response_format",
            "seed",
            "stop",
            "temperature",
            "tool_choice",
            "tools",
            "top_k",
            "top_p"
        ],
        "inputs": [
            {
                "name": "system_prompt",
                "display_name": "System Prompt",
                "type": "string or message",
                "description": "System prompt for the model",
                "default": null
            },
            {
                "name": "messages",
                "display_name": "Messages",
                "type": "array of messages or message or string",
                "description": "Array of chat messages",
                "required": true
            },
            {
                "name": "tools",
                "display_name": "Tools",
                "type": "tool",
                "description": "Array of tools to use",
                "default": null,
                "allow_multiple": true
            },
            {
                "name": "temperature",
                "display_name": "Temperature",
                "type": "number",
                "description": "Controls randomness (0-2)",
                "default": null
            },
            {
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "type": "number",
                "description": "Maximum tokens to generate",
                "default": null
            },
            {
                "name": "top_p",
                "display_name": "Top P",
                "type": "number",
                "description": "Controls diversity via nucleus sampling",
                "default": null
            },
            {
                "name": "frequency_penalty",
                "display_name": "Frequency Penalty",
                "type": "number",
                "description": "Reduces repetition (-2 to 2)",
                "default": null
            },
            {
                "name": "presence_penalty",
                "display_name": "Presence Penalty",
                "type": "number",
                "description": "Encourages new topics (-2 to 2)",
                "default": null
            },
            {
                "name": "response_format",
                "display_name": "Response Format",
                "type": "string or object",
                "description": "Output format specification",
                "default": null
            },
            {
                "name": "seed",
                "display_name": "Seed",
                "type": "number",
                "description": "Deterministic outputs",
                "default": null
            },
            {
                "name": "stop",
                "display_name": "Stop",
                "type": "string or array",
                "description": "Custom stop sequences",
                "default": null
            },
            {
                "name": "tool_choice",
                "display_name": "Tool Choice",
                "type": "string",
                "description": "Tool selection control",
                "default": null
            }
        ],
        "outputs": [
            {
                "name": "content",
                "display_name": "Content",
                "can_stream": true,
                "type": "string",
                "description": "The content portion of the generated response message."
            },
            {
                "name": "message",
                "display_name": "Message",
                "type": "message",
                "can_stream": true,
                "description": "The full generated response message."
            },
            {
                "name": "role",
                "display_name": "Role",
                "can_stream": true,
                "type": "string",
                "description": "Role of the response (usually 'assistant')"
            },
            {
                "name": "tool_calls",
                "display_name": "Tool Calls",
                "type": "array of tools",
                "description": "Tool calls made by the model"
            },
            {
                "name": "finish_reason",
                "display_name": "Finish Reason",
                "type": "string",
                "description": "Why the completion finished"
            },
            {
                "name": "usage",
                "display_name": "Token Usage",
                "type": "object",
                "description": "Token usage statistics"
            },
            {
                "name": "cost_total",
                "display_name": "Total Cost",
                "type": "number",
                "description": "Total cost for processing this request (USD)"
            },
            {
                "name": "cost_itemized",
                "display_name": "Itemized Cost",
                "type": "array",
                "description": "Detailed breakdown of costs"
            }
        ],
        "pricing": {
            "reference": "https://openrouter.ai/models",
            "items": [
                {
                    "key": "input_cost_per_million",
                    "label": "Input Tokens (per 1M)",
                    "cost": 0,
                    "currency": "USD"
                },
                {
                    "key": "output_cost_per_million",
                    "label": "Output Tokens (per 1M)",
                    "cost": 0,
                    "currency": "USD"
                }
            ]
        },
        "id": "mistralai-mistral-7b-instruct-free"
    },
    {
        "display_name": "Mistral: Mistral 7B Instruct v0.1",
        "description": "A 7.3B parameter model that outperforms Llama 2 13B on all benchmarks, with optimizations for speed and context length.",
        "category": "llm",
        "provider": "mistralai",
        "accepts_plugins": true,
        "model_id": "mistralai/mistral-7b-instruct-v0.1",
        "context_length": 2824,
        "supported_parameters": [
            "frequency_penalty",
            "logit_bias",
            "max_tokens",
            "min_p",
            "presence_penalty",
            "repetition_penalty",
            "seed",
            "stop",
            "temperature",
            "tool_choice",
            "tools",
            "top_k",
            "top_p"
        ],
        "inputs": [
            {
                "name": "system_prompt",
                "display_name": "System Prompt",
                "type": "string or message",
                "description": "System prompt for the model",
                "default": null
            },
            {
                "name": "messages",
                "display_name": "Messages",
                "type": "array of messages or message or string",
                "description": "Array of chat messages",
                "required": true
            },
            {
                "name": "tools",
                "display_name": "Tools",
                "type": "tool",
                "description": "Array of tools to use",
                "default": null,
                "allow_multiple": true
            },
            {
                "name": "temperature",
                "display_name": "Temperature",
                "type": "number",
                "description": "Controls randomness (0-2)",
                "default": null
            },
            {
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "type": "number",
                "description": "Maximum tokens to generate",
                "default": null
            },
            {
                "name": "top_p",
                "display_name": "Top P",
                "type": "number",
                "description": "Controls diversity via nucleus sampling",
                "default": null
            },
            {
                "name": "frequency_penalty",
                "display_name": "Frequency Penalty",
                "type": "number",
                "description": "Reduces repetition (-2 to 2)",
                "default": null
            },
            {
                "name": "presence_penalty",
                "display_name": "Presence Penalty",
                "type": "number",
                "description": "Encourages new topics (-2 to 2)",
                "default": null
            },
            {
                "name": "seed",
                "display_name": "Seed",
                "type": "number",
                "description": "Deterministic outputs",
                "default": null
            },
            {
                "name": "stop",
                "display_name": "Stop",
                "type": "string or array",
                "description": "Custom stop sequences",
                "default": null
            },
            {
                "name": "tool_choice",
                "display_name": "Tool Choice",
                "type": "string",
                "description": "Tool selection control",
                "default": null
            }
        ],
        "outputs": [
            {
                "name": "content",
                "display_name": "Content",
                "can_stream": true,
                "type": "string",
                "description": "The content portion of the generated response message."
            },
            {
                "name": "message",
                "display_name": "Message",
                "type": "message",
                "can_stream": true,
                "description": "The full generated response message."
            },
            {
                "name": "role",
                "display_name": "Role",
                "can_stream": true,
                "type": "string",
                "description": "Role of the response (usually 'assistant')"
            },
            {
                "name": "tool_calls",
                "display_name": "Tool Calls",
                "type": "array of tools",
                "description": "Tool calls made by the model"
            },
            {
                "name": "finish_reason",
                "display_name": "Finish Reason",
                "type": "string",
                "description": "Why the completion finished"
            },
            {
                "name": "usage",
                "display_name": "Token Usage",
                "type": "object",
                "description": "Token usage statistics"
            },
            {
                "name": "cost_total",
                "display_name": "Total Cost",
                "type": "number",
                "description": "Total cost for processing this request (USD)"
            },
            {
                "name": "cost_itemized",
                "display_name": "Itemized Cost",
                "type": "array",
                "description": "Detailed breakdown of costs"
            }
        ],
        "pricing": {
            "reference": "https://openrouter.ai/models",
            "items": [
                {
                    "key": "input_cost_per_million",
                    "label": "Input Tokens (per 1M)",
                    "cost": 0.11,
                    "currency": "USD"
                },
                {
                    "key": "output_cost_per_million",
                    "label": "Output Tokens (per 1M)",
                    "cost": 0.19,
                    "currency": "USD"
                }
            ]
        },
        "id": "mistralai-mistral-7b-instruct-v0-1"
    },
    {
        "display_name": "Mistral: Mistral 7B Instruct v0.3",
        "description": "A high-performing, industry-standard 7.3B parameter model, with optimizations for speed and context length.\n\nAn improved version of [Mistral 7B Instruct v0.2](/models/mistralai/mistral-7b-instruct-v0.2), with the following changes:\n\n- Extended vocabulary to 32768\n- Supports v3 Tokenizer\n- Supports function calling\n\nNOTE: Support for function calling depends on the provider.",
        "category": "llm",
        "provider": "mistralai",
        "accepts_plugins": true,
        "model_id": "mistralai/mistral-7b-instruct-v0.3",
        "context_length": 32768,
        "supported_parameters": [
            "frequency_penalty",
            "logit_bias",
            "logprobs",
            "max_tokens",
            "min_p",
            "presence_penalty",
            "repetition_penalty",
            "response_format",
            "seed",
            "stop",
            "temperature",
            "tool_choice",
            "tools",
            "top_k",
            "top_p"
        ],
        "inputs": [
            {
                "name": "system_prompt",
                "display_name": "System Prompt",
                "type": "string or message",
                "description": "System prompt for the model",
                "default": null
            },
            {
                "name": "messages",
                "display_name": "Messages",
                "type": "array of messages or message or string",
                "description": "Array of chat messages",
                "required": true
            },
            {
                "name": "tools",
                "display_name": "Tools",
                "type": "tool",
                "description": "Array of tools to use",
                "default": null,
                "allow_multiple": true
            },
            {
                "name": "temperature",
                "display_name": "Temperature",
                "type": "number",
                "description": "Controls randomness (0-2)",
                "default": null
            },
            {
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "type": "number",
                "description": "Maximum tokens to generate",
                "default": null
            },
            {
                "name": "top_p",
                "display_name": "Top P",
                "type": "number",
                "description": "Controls diversity via nucleus sampling",
                "default": null
            },
            {
                "name": "frequency_penalty",
                "display_name": "Frequency Penalty",
                "type": "number",
                "description": "Reduces repetition (-2 to 2)",
                "default": null
            },
            {
                "name": "presence_penalty",
                "display_name": "Presence Penalty",
                "type": "number",
                "description": "Encourages new topics (-2 to 2)",
                "default": null
            },
            {
                "name": "response_format",
                "display_name": "Response Format",
                "type": "string or object",
                "description": "Output format specification",
                "default": null
            },
            {
                "name": "seed",
                "display_name": "Seed",
                "type": "number",
                "description": "Deterministic outputs",
                "default": null
            },
            {
                "name": "stop",
                "display_name": "Stop",
                "type": "string or array",
                "description": "Custom stop sequences",
                "default": null
            },
            {
                "name": "tool_choice",
                "display_name": "Tool Choice",
                "type": "string",
                "description": "Tool selection control",
                "default": null
            }
        ],
        "outputs": [
            {
                "name": "content",
                "display_name": "Content",
                "can_stream": true,
                "type": "string",
                "description": "The content portion of the generated response message."
            },
            {
                "name": "message",
                "display_name": "Message",
                "type": "message",
                "can_stream": true,
                "description": "The full generated response message."
            },
            {
                "name": "role",
                "display_name": "Role",
                "can_stream": true,
                "type": "string",
                "description": "Role of the response (usually 'assistant')"
            },
            {
                "name": "tool_calls",
                "display_name": "Tool Calls",
                "type": "array of tools",
                "description": "Tool calls made by the model"
            },
            {
                "name": "finish_reason",
                "display_name": "Finish Reason",
                "type": "string",
                "description": "Why the completion finished"
            },
            {
                "name": "usage",
                "display_name": "Token Usage",
                "type": "object",
                "description": "Token usage statistics"
            },
            {
                "name": "cost_total",
                "display_name": "Total Cost",
                "type": "number",
                "description": "Total cost for processing this request (USD)"
            },
            {
                "name": "cost_itemized",
                "display_name": "Itemized Cost",
                "type": "array",
                "description": "Detailed breakdown of costs"
            },
            {
                "name": "logprobs",
                "display_name": "Log Probabilities",
                "type": "object",
                "description": "Token probabilities and logprobs from the model"
            }
        ],
        "pricing": {
            "reference": "https://openrouter.ai/models",
            "items": [
                {
                    "key": "input_cost_per_million",
                    "label": "Input Tokens (per 1M)",
                    "cost": 0.028,
                    "currency": "USD"
                },
                {
                    "key": "output_cost_per_million",
                    "label": "Output Tokens (per 1M)",
                    "cost": 0.054,
                    "currency": "USD"
                }
            ]
        },
        "id": "mistralai-mistral-7b-instruct-v0-3"
    },
    {
        "display_name": "Mistral Large",
        "description": "This is Mistral AI's flagship model, Mistral Large 2 (version `mistral-large-2407`). It's a proprietary weights-available model and excels at reasoning, code, JSON, chat, and more. Read the launch announcement [here](https://mistral.ai/news/mistral-large-2407/).\n\nIt supports dozens of languages including French, German, Spanish, Italian, Portuguese, Arabic, Hindi, Russian, Chinese, Japanese, and Korean, along with 80+ coding languages including Python, Java, C, C++, JavaScript, and Bash. Its long context window allows precise information recall from large documents.",
        "category": "llm",
        "provider": "mistralai",
        "accepts_plugins": true,
        "model_id": "mistralai/mistral-large",
        "context_length": 128000,
        "supported_parameters": [
            "frequency_penalty",
            "max_tokens",
            "presence_penalty",
            "response_format",
            "seed",
            "stop",
            "structured_outputs",
            "temperature",
            "tool_choice",
            "tools",
            "top_p"
        ],
        "inputs": [
            {
                "name": "system_prompt",
                "display_name": "System Prompt",
                "type": "string or message",
                "description": "System prompt for the model",
                "default": null
            },
            {
                "name": "messages",
                "display_name": "Messages",
                "type": "array of messages or message or string",
                "description": "Array of chat messages",
                "required": true
            },
            {
                "name": "tools",
                "display_name": "Tools",
                "type": "tool",
                "description": "Array of tools to use",
                "default": null,
                "allow_multiple": true
            },
            {
                "name": "temperature",
                "display_name": "Temperature",
                "type": "number",
                "description": "Controls randomness (0-2)",
                "default": null
            },
            {
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "type": "number",
                "description": "Maximum tokens to generate",
                "default": null
            },
            {
                "name": "top_p",
                "display_name": "Top P",
                "type": "number",
                "description": "Controls diversity via nucleus sampling",
                "default": null
            },
            {
                "name": "frequency_penalty",
                "display_name": "Frequency Penalty",
                "type": "number",
                "description": "Reduces repetition (-2 to 2)",
                "default": null
            },
            {
                "name": "presence_penalty",
                "display_name": "Presence Penalty",
                "type": "number",
                "description": "Encourages new topics (-2 to 2)",
                "default": null
            },
            {
                "name": "response_format",
                "display_name": "Response Format",
                "type": "string or object",
                "description": "Output format specification",
                "default": null
            },
            {
                "name": "seed",
                "display_name": "Seed",
                "type": "number",
                "description": "Deterministic outputs",
                "default": null
            },
            {
                "name": "stop",
                "display_name": "Stop",
                "type": "string or array",
                "description": "Custom stop sequences",
                "default": null
            },
            {
                "name": "structured_outputs",
                "display_name": "Structured Outputs",
                "type": "string or object",
                "description": "JSON schema enforcement",
                "default": null
            },
            {
                "name": "tool_choice",
                "display_name": "Tool Choice",
                "type": "string",
                "description": "Tool selection control",
                "default": null
            }
        ],
        "outputs": [
            {
                "name": "content",
                "display_name": "Content",
                "can_stream": true,
                "type": "string",
                "description": "The content portion of the generated response message."
            },
            {
                "name": "message",
                "display_name": "Message",
                "type": "message",
                "can_stream": true,
                "description": "The full generated response message."
            },
            {
                "name": "role",
                "display_name": "Role",
                "can_stream": true,
                "type": "string",
                "description": "Role of the response (usually 'assistant')"
            },
            {
                "name": "tool_calls",
                "display_name": "Tool Calls",
                "type": "array of tools",
                "description": "Tool calls made by the model"
            },
            {
                "name": "finish_reason",
                "display_name": "Finish Reason",
                "type": "string",
                "description": "Why the completion finished"
            },
            {
                "name": "usage",
                "display_name": "Token Usage",
                "type": "object",
                "description": "Token usage statistics"
            },
            {
                "name": "cost_total",
                "display_name": "Total Cost",
                "type": "number",
                "description": "Total cost for processing this request (USD)"
            },
            {
                "name": "cost_itemized",
                "display_name": "Itemized Cost",
                "type": "array",
                "description": "Detailed breakdown of costs"
            }
        ],
        "pricing": {
            "reference": "https://openrouter.ai/models",
            "items": [
                {
                    "key": "input_cost_per_million",
                    "label": "Input Tokens (per 1M)",
                    "cost": 2,
                    "currency": "USD"
                },
                {
                    "key": "output_cost_per_million",
                    "label": "Output Tokens (per 1M)",
                    "cost": 6,
                    "currency": "USD"
                }
            ]
        },
        "id": "mistralai-mistral-large"
    },
    {
        "display_name": "Mistral Large 2407",
        "description": "This is Mistral AI's flagship model, Mistral Large 2 (version mistral-large-2407). It's a proprietary weights-available model and excels at reasoning, code, JSON, chat, and more. Read the launch announcement [here](https://mistral.ai/news/mistral-large-2407/).\n\nIt supports dozens of languages including French, German, Spanish, Italian, Portuguese, Arabic, Hindi, Russian, Chinese, Japanese, and Korean, along with 80+ coding languages including Python, Java, C, C++, JavaScript, and Bash. Its long context window allows precise information recall from large documents.\n",
        "category": "llm",
        "provider": "mistralai",
        "accepts_plugins": true,
        "model_id": "mistralai/mistral-large-2407",
        "context_length": 131072,
        "supported_parameters": [
            "frequency_penalty",
            "max_tokens",
            "presence_penalty",
            "response_format",
            "seed",
            "stop",
            "structured_outputs",
            "temperature",
            "tool_choice",
            "tools",
            "top_p"
        ],
        "inputs": [
            {
                "name": "system_prompt",
                "display_name": "System Prompt",
                "type": "string or message",
                "description": "System prompt for the model",
                "default": null
            },
            {
                "name": "messages",
                "display_name": "Messages",
                "type": "array of messages or message or string",
                "description": "Array of chat messages",
                "required": true
            },
            {
                "name": "tools",
                "display_name": "Tools",
                "type": "tool",
                "description": "Array of tools to use",
                "default": null,
                "allow_multiple": true
            },
            {
                "name": "temperature",
                "display_name": "Temperature",
                "type": "number",
                "description": "Controls randomness (0-2)",
                "default": null
            },
            {
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "type": "number",
                "description": "Maximum tokens to generate",
                "default": null
            },
            {
                "name": "top_p",
                "display_name": "Top P",
                "type": "number",
                "description": "Controls diversity via nucleus sampling",
                "default": null
            },
            {
                "name": "frequency_penalty",
                "display_name": "Frequency Penalty",
                "type": "number",
                "description": "Reduces repetition (-2 to 2)",
                "default": null
            },
            {
                "name": "presence_penalty",
                "display_name": "Presence Penalty",
                "type": "number",
                "description": "Encourages new topics (-2 to 2)",
                "default": null
            },
            {
                "name": "response_format",
                "display_name": "Response Format",
                "type": "string or object",
                "description": "Output format specification",
                "default": null
            },
            {
                "name": "seed",
                "display_name": "Seed",
                "type": "number",
                "description": "Deterministic outputs",
                "default": null
            },
            {
                "name": "stop",
                "display_name": "Stop",
                "type": "string or array",
                "description": "Custom stop sequences",
                "default": null
            },
            {
                "name": "structured_outputs",
                "display_name": "Structured Outputs",
                "type": "string or object",
                "description": "JSON schema enforcement",
                "default": null
            },
            {
                "name": "tool_choice",
                "display_name": "Tool Choice",
                "type": "string",
                "description": "Tool selection control",
                "default": null
            }
        ],
        "outputs": [
            {
                "name": "content",
                "display_name": "Content",
                "can_stream": true,
                "type": "string",
                "description": "The content portion of the generated response message."
            },
            {
                "name": "message",
                "display_name": "Message",
                "type": "message",
                "can_stream": true,
                "description": "The full generated response message."
            },
            {
                "name": "role",
                "display_name": "Role",
                "can_stream": true,
                "type": "string",
                "description": "Role of the response (usually 'assistant')"
            },
            {
                "name": "tool_calls",
                "display_name": "Tool Calls",
                "type": "array of tools",
                "description": "Tool calls made by the model"
            },
            {
                "name": "finish_reason",
                "display_name": "Finish Reason",
                "type": "string",
                "description": "Why the completion finished"
            },
            {
                "name": "usage",
                "display_name": "Token Usage",
                "type": "object",
                "description": "Token usage statistics"
            },
            {
                "name": "cost_total",
                "display_name": "Total Cost",
                "type": "number",
                "description": "Total cost for processing this request (USD)"
            },
            {
                "name": "cost_itemized",
                "display_name": "Itemized Cost",
                "type": "array",
                "description": "Detailed breakdown of costs"
            }
        ],
        "pricing": {
            "reference": "https://openrouter.ai/models",
            "items": [
                {
                    "key": "input_cost_per_million",
                    "label": "Input Tokens (per 1M)",
                    "cost": 2,
                    "currency": "USD"
                },
                {
                    "key": "output_cost_per_million",
                    "label": "Output Tokens (per 1M)",
                    "cost": 6,
                    "currency": "USD"
                }
            ]
        },
        "id": "mistralai-mistral-large-2407"
    },
    {
        "display_name": "Mistral Large 2411",
        "description": "Mistral Large 2 2411 is an update of [Mistral Large 2](/mistralai/mistral-large) released together with [Pixtral Large 2411](/mistralai/pixtral-large-2411)\n\nIt provides a significant upgrade on the previous [Mistral Large 24.07](/mistralai/mistral-large-2407), with notable improvements in long context understanding, a new system prompt, and more accurate function calling.",
        "category": "llm",
        "provider": "mistralai",
        "accepts_plugins": true,
        "model_id": "mistralai/mistral-large-2411",
        "context_length": 131072,
        "supported_parameters": [
            "frequency_penalty",
            "max_tokens",
            "presence_penalty",
            "response_format",
            "seed",
            "stop",
            "structured_outputs",
            "temperature",
            "tool_choice",
            "tools",
            "top_p"
        ],
        "inputs": [
            {
                "name": "system_prompt",
                "display_name": "System Prompt",
                "type": "string or message",
                "description": "System prompt for the model",
                "default": null
            },
            {
                "name": "messages",
                "display_name": "Messages",
                "type": "array of messages or message or string",
                "description": "Array of chat messages",
                "required": true
            },
            {
                "name": "tools",
                "display_name": "Tools",
                "type": "tool",
                "description": "Array of tools to use",
                "default": null,
                "allow_multiple": true
            },
            {
                "name": "temperature",
                "display_name": "Temperature",
                "type": "number",
                "description": "Controls randomness (0-2)",
                "default": null
            },
            {
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "type": "number",
                "description": "Maximum tokens to generate",
                "default": null
            },
            {
                "name": "top_p",
                "display_name": "Top P",
                "type": "number",
                "description": "Controls diversity via nucleus sampling",
                "default": null
            },
            {
                "name": "frequency_penalty",
                "display_name": "Frequency Penalty",
                "type": "number",
                "description": "Reduces repetition (-2 to 2)",
                "default": null
            },
            {
                "name": "presence_penalty",
                "display_name": "Presence Penalty",
                "type": "number",
                "description": "Encourages new topics (-2 to 2)",
                "default": null
            },
            {
                "name": "response_format",
                "display_name": "Response Format",
                "type": "string or object",
                "description": "Output format specification",
                "default": null
            },
            {
                "name": "seed",
                "display_name": "Seed",
                "type": "number",
                "description": "Deterministic outputs",
                "default": null
            },
            {
                "name": "stop",
                "display_name": "Stop",
                "type": "string or array",
                "description": "Custom stop sequences",
                "default": null
            },
            {
                "name": "structured_outputs",
                "display_name": "Structured Outputs",
                "type": "string or object",
                "description": "JSON schema enforcement",
                "default": null
            },
            {
                "name": "tool_choice",
                "display_name": "Tool Choice",
                "type": "string",
                "description": "Tool selection control",
                "default": null
            }
        ],
        "outputs": [
            {
                "name": "content",
                "display_name": "Content",
                "can_stream": true,
                "type": "string",
                "description": "The content portion of the generated response message."
            },
            {
                "name": "message",
                "display_name": "Message",
                "type": "message",
                "can_stream": true,
                "description": "The full generated response message."
            },
            {
                "name": "role",
                "display_name": "Role",
                "can_stream": true,
                "type": "string",
                "description": "Role of the response (usually 'assistant')"
            },
            {
                "name": "tool_calls",
                "display_name": "Tool Calls",
                "type": "array of tools",
                "description": "Tool calls made by the model"
            },
            {
                "name": "finish_reason",
                "display_name": "Finish Reason",
                "type": "string",
                "description": "Why the completion finished"
            },
            {
                "name": "usage",
                "display_name": "Token Usage",
                "type": "object",
                "description": "Token usage statistics"
            },
            {
                "name": "cost_total",
                "display_name": "Total Cost",
                "type": "number",
                "description": "Total cost for processing this request (USD)"
            },
            {
                "name": "cost_itemized",
                "display_name": "Itemized Cost",
                "type": "array",
                "description": "Detailed breakdown of costs"
            }
        ],
        "pricing": {
            "reference": "https://openrouter.ai/models",
            "items": [
                {
                    "key": "input_cost_per_million",
                    "label": "Input Tokens (per 1M)",
                    "cost": 2,
                    "currency": "USD"
                },
                {
                    "key": "output_cost_per_million",
                    "label": "Output Tokens (per 1M)",
                    "cost": 6,
                    "currency": "USD"
                }
            ]
        },
        "id": "mistralai-mistral-large-2411"
    },
    {
        "display_name": "Mistral: Mistral Medium 3",
        "description": "Mistral Medium 3 is a high-performance enterprise-grade language model designed to deliver frontier-level capabilities at significantly reduced operational cost. It balances state-of-the-art reasoning and multimodal performance with 8× lower cost compared to traditional large models, making it suitable for scalable deployments across professional and industrial use cases.\n\nThe model excels in domains such as coding, STEM reasoning, and enterprise adaptation. It supports hybrid, on-prem, and in-VPC deployments and is optimized for integration into custom workflows. Mistral Medium 3 offers competitive accuracy relative to larger models like Claude Sonnet 3.5/3.7, Llama 4 Maverick, and Command R+, while maintaining broad compatibility across cloud environments.",
        "category": "llm",
        "provider": "mistralai",
        "accepts_plugins": true,
        "model_id": "mistralai/mistral-medium-3",
        "context_length": 131072,
        "supported_parameters": [
            "frequency_penalty",
            "max_tokens",
            "presence_penalty",
            "response_format",
            "seed",
            "stop",
            "structured_outputs",
            "temperature",
            "tool_choice",
            "tools",
            "top_p"
        ],
        "inputs": [
            {
                "name": "system_prompt",
                "display_name": "System Prompt",
                "type": "string or message",
                "description": "System prompt for the model",
                "default": null
            },
            {
                "name": "messages",
                "display_name": "Messages",
                "type": "array of messages or message or string",
                "description": "Array of chat messages",
                "required": true
            },
            {
                "name": "tools",
                "display_name": "Tools",
                "type": "tool",
                "description": "Array of tools to use",
                "default": null,
                "allow_multiple": true
            },
            {
                "name": "temperature",
                "display_name": "Temperature",
                "type": "number",
                "description": "Controls randomness (0-2)",
                "default": null
            },
            {
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "type": "number",
                "description": "Maximum tokens to generate",
                "default": null
            },
            {
                "name": "top_p",
                "display_name": "Top P",
                "type": "number",
                "description": "Controls diversity via nucleus sampling",
                "default": null
            },
            {
                "name": "frequency_penalty",
                "display_name": "Frequency Penalty",
                "type": "number",
                "description": "Reduces repetition (-2 to 2)",
                "default": null
            },
            {
                "name": "presence_penalty",
                "display_name": "Presence Penalty",
                "type": "number",
                "description": "Encourages new topics (-2 to 2)",
                "default": null
            },
            {
                "name": "response_format",
                "display_name": "Response Format",
                "type": "string or object",
                "description": "Output format specification",
                "default": null
            },
            {
                "name": "seed",
                "display_name": "Seed",
                "type": "number",
                "description": "Deterministic outputs",
                "default": null
            },
            {
                "name": "stop",
                "display_name": "Stop",
                "type": "string or array",
                "description": "Custom stop sequences",
                "default": null
            },
            {
                "name": "structured_outputs",
                "display_name": "Structured Outputs",
                "type": "string or object",
                "description": "JSON schema enforcement",
                "default": null
            },
            {
                "name": "tool_choice",
                "display_name": "Tool Choice",
                "type": "string",
                "description": "Tool selection control",
                "default": null
            }
        ],
        "outputs": [
            {
                "name": "content",
                "display_name": "Content",
                "can_stream": true,
                "type": "string",
                "description": "The content portion of the generated response message."
            },
            {
                "name": "message",
                "display_name": "Message",
                "type": "message",
                "can_stream": true,
                "description": "The full generated response message."
            },
            {
                "name": "role",
                "display_name": "Role",
                "can_stream": true,
                "type": "string",
                "description": "Role of the response (usually 'assistant')"
            },
            {
                "name": "tool_calls",
                "display_name": "Tool Calls",
                "type": "array of tools",
                "description": "Tool calls made by the model"
            },
            {
                "name": "finish_reason",
                "display_name": "Finish Reason",
                "type": "string",
                "description": "Why the completion finished"
            },
            {
                "name": "usage",
                "display_name": "Token Usage",
                "type": "object",
                "description": "Token usage statistics"
            },
            {
                "name": "cost_total",
                "display_name": "Total Cost",
                "type": "number",
                "description": "Total cost for processing this request (USD)"
            },
            {
                "name": "cost_itemized",
                "display_name": "Itemized Cost",
                "type": "array",
                "description": "Detailed breakdown of costs"
            }
        ],
        "pricing": {
            "reference": "https://openrouter.ai/models",
            "items": [
                {
                    "key": "input_cost_per_million",
                    "label": "Input Tokens (per 1M)",
                    "cost": 0.39999999999999997,
                    "currency": "USD"
                },
                {
                    "key": "output_cost_per_million",
                    "label": "Output Tokens (per 1M)",
                    "cost": 2,
                    "currency": "USD"
                }
            ]
        },
        "id": "mistralai-mistral-medium-3"
    },
    {
        "display_name": "Mistral: Mistral Medium 3.1",
        "description": "Mistral Medium 3.1 is an updated version of Mistral Medium 3, which is a high-performance enterprise-grade language model designed to deliver frontier-level capabilities at significantly reduced operational cost. It balances state-of-the-art reasoning and multimodal performance with 8× lower cost compared to traditional large models, making it suitable for scalable deployments across professional and industrial use cases.\n\nThe model excels in domains such as coding, STEM reasoning, and enterprise adaptation. It supports hybrid, on-prem, and in-VPC deployments and is optimized for integration into custom workflows. Mistral Medium 3.1 offers competitive accuracy relative to larger models like Claude Sonnet 3.5/3.7, Llama 4 Maverick, and Command R+, while maintaining broad compatibility across cloud environments.",
        "category": "llm",
        "provider": "mistralai",
        "accepts_plugins": true,
        "model_id": "mistralai/mistral-medium-3.1",
        "context_length": 262144,
        "supported_parameters": [
            "frequency_penalty",
            "max_tokens",
            "presence_penalty",
            "response_format",
            "seed",
            "stop",
            "structured_outputs",
            "temperature",
            "tool_choice",
            "tools",
            "top_p"
        ],
        "inputs": [
            {
                "name": "system_prompt",
                "display_name": "System Prompt",
                "type": "string or message",
                "description": "System prompt for the model",
                "default": null
            },
            {
                "name": "messages",
                "display_name": "Messages",
                "type": "array of messages or message or string",
                "description": "Array of chat messages",
                "required": true
            },
            {
                "name": "tools",
                "display_name": "Tools",
                "type": "tool",
                "description": "Array of tools to use",
                "default": null,
                "allow_multiple": true
            },
            {
                "name": "temperature",
                "display_name": "Temperature",
                "type": "number",
                "description": "Controls randomness (0-2)",
                "default": null
            },
            {
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "type": "number",
                "description": "Maximum tokens to generate",
                "default": null
            },
            {
                "name": "top_p",
                "display_name": "Top P",
                "type": "number",
                "description": "Controls diversity via nucleus sampling",
                "default": null
            },
            {
                "name": "frequency_penalty",
                "display_name": "Frequency Penalty",
                "type": "number",
                "description": "Reduces repetition (-2 to 2)",
                "default": null
            },
            {
                "name": "presence_penalty",
                "display_name": "Presence Penalty",
                "type": "number",
                "description": "Encourages new topics (-2 to 2)",
                "default": null
            },
            {
                "name": "response_format",
                "display_name": "Response Format",
                "type": "string or object",
                "description": "Output format specification",
                "default": null
            },
            {
                "name": "seed",
                "display_name": "Seed",
                "type": "number",
                "description": "Deterministic outputs",
                "default": null
            },
            {
                "name": "stop",
                "display_name": "Stop",
                "type": "string or array",
                "description": "Custom stop sequences",
                "default": null
            },
            {
                "name": "structured_outputs",
                "display_name": "Structured Outputs",
                "type": "string or object",
                "description": "JSON schema enforcement",
                "default": null
            },
            {
                "name": "tool_choice",
                "display_name": "Tool Choice",
                "type": "string",
                "description": "Tool selection control",
                "default": null
            }
        ],
        "outputs": [
            {
                "name": "content",
                "display_name": "Content",
                "can_stream": true,
                "type": "string",
                "description": "The content portion of the generated response message."
            },
            {
                "name": "message",
                "display_name": "Message",
                "type": "message",
                "can_stream": true,
                "description": "The full generated response message."
            },
            {
                "name": "role",
                "display_name": "Role",
                "can_stream": true,
                "type": "string",
                "description": "Role of the response (usually 'assistant')"
            },
            {
                "name": "tool_calls",
                "display_name": "Tool Calls",
                "type": "array of tools",
                "description": "Tool calls made by the model"
            },
            {
                "name": "finish_reason",
                "display_name": "Finish Reason",
                "type": "string",
                "description": "Why the completion finished"
            },
            {
                "name": "usage",
                "display_name": "Token Usage",
                "type": "object",
                "description": "Token usage statistics"
            },
            {
                "name": "cost_total",
                "display_name": "Total Cost",
                "type": "number",
                "description": "Total cost for processing this request (USD)"
            },
            {
                "name": "cost_itemized",
                "display_name": "Itemized Cost",
                "type": "array",
                "description": "Detailed breakdown of costs"
            }
        ],
        "pricing": {
            "reference": "https://openrouter.ai/models",
            "items": [
                {
                    "key": "input_cost_per_million",
                    "label": "Input Tokens (per 1M)",
                    "cost": 0.39999999999999997,
                    "currency": "USD"
                },
                {
                    "key": "output_cost_per_million",
                    "label": "Output Tokens (per 1M)",
                    "cost": 2,
                    "currency": "USD"
                }
            ]
        },
        "id": "mistralai-mistral-medium-3-1"
    },
    {
        "display_name": "Mistral: Mistral Nemo",
        "description": "A 12B parameter model with a 128k token context length built by Mistral in collaboration with NVIDIA.\n\nThe model is multilingual, supporting English, French, German, Spanish, Italian, Portuguese, Chinese, Japanese, Korean, Arabic, and Hindi.\n\nIt supports function calling and is released under the Apache 2.0 license.",
        "category": "llm",
        "provider": "mistralai",
        "accepts_plugins": true,
        "model_id": "mistralai/mistral-nemo",
        "context_length": 32000,
        "supported_parameters": [
            "frequency_penalty",
            "logit_bias",
            "logprobs",
            "max_tokens",
            "min_p",
            "presence_penalty",
            "repetition_penalty",
            "response_format",
            "seed",
            "stop",
            "structured_outputs",
            "temperature",
            "tool_choice",
            "tools",
            "top_k",
            "top_logprobs",
            "top_p"
        ],
        "inputs": [
            {
                "name": "system_prompt",
                "display_name": "System Prompt",
                "type": "string or message",
                "description": "System prompt for the model",
                "default": null
            },
            {
                "name": "messages",
                "display_name": "Messages",
                "type": "array of messages or message or string",
                "description": "Array of chat messages",
                "required": true
            },
            {
                "name": "tools",
                "display_name": "Tools",
                "type": "tool",
                "description": "Array of tools to use",
                "default": null,
                "allow_multiple": true
            },
            {
                "name": "temperature",
                "display_name": "Temperature",
                "type": "number",
                "description": "Controls randomness (0-2)",
                "default": null
            },
            {
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "type": "number",
                "description": "Maximum tokens to generate",
                "default": null
            },
            {
                "name": "top_p",
                "display_name": "Top P",
                "type": "number",
                "description": "Controls diversity via nucleus sampling",
                "default": null
            },
            {
                "name": "frequency_penalty",
                "display_name": "Frequency Penalty",
                "type": "number",
                "description": "Reduces repetition (-2 to 2)",
                "default": null
            },
            {
                "name": "presence_penalty",
                "display_name": "Presence Penalty",
                "type": "number",
                "description": "Encourages new topics (-2 to 2)",
                "default": null
            },
            {
                "name": "response_format",
                "display_name": "Response Format",
                "type": "string or object",
                "description": "Output format specification",
                "default": null
            },
            {
                "name": "seed",
                "display_name": "Seed",
                "type": "number",
                "description": "Deterministic outputs",
                "default": null
            },
            {
                "name": "stop",
                "display_name": "Stop",
                "type": "string or array",
                "description": "Custom stop sequences",
                "default": null
            },
            {
                "name": "structured_outputs",
                "display_name": "Structured Outputs",
                "type": "string or object",
                "description": "JSON schema enforcement",
                "default": null
            },
            {
                "name": "tool_choice",
                "display_name": "Tool Choice",
                "type": "string",
                "description": "Tool selection control",
                "default": null
            }
        ],
        "outputs": [
            {
                "name": "content",
                "display_name": "Content",
                "can_stream": true,
                "type": "string",
                "description": "The content portion of the generated response message."
            },
            {
                "name": "message",
                "display_name": "Message",
                "type": "message",
                "can_stream": true,
                "description": "The full generated response message."
            },
            {
                "name": "role",
                "display_name": "Role",
                "can_stream": true,
                "type": "string",
                "description": "Role of the response (usually 'assistant')"
            },
            {
                "name": "tool_calls",
                "display_name": "Tool Calls",
                "type": "array of tools",
                "description": "Tool calls made by the model"
            },
            {
                "name": "finish_reason",
                "display_name": "Finish Reason",
                "type": "string",
                "description": "Why the completion finished"
            },
            {
                "name": "usage",
                "display_name": "Token Usage",
                "type": "object",
                "description": "Token usage statistics"
            },
            {
                "name": "cost_total",
                "display_name": "Total Cost",
                "type": "number",
                "description": "Total cost for processing this request (USD)"
            },
            {
                "name": "cost_itemized",
                "display_name": "Itemized Cost",
                "type": "array",
                "description": "Detailed breakdown of costs"
            },
            {
                "name": "logprobs",
                "display_name": "Log Probabilities",
                "type": "object",
                "description": "Token probabilities and logprobs from the model"
            }
        ],
        "pricing": {
            "reference": "https://openrouter.ai/models",
            "items": [
                {
                    "key": "input_cost_per_million",
                    "label": "Input Tokens (per 1M)",
                    "cost": 0.0075,
                    "currency": "USD"
                },
                {
                    "key": "output_cost_per_million",
                    "label": "Output Tokens (per 1M)",
                    "cost": 0.049999999999999996,
                    "currency": "USD"
                }
            ]
        },
        "id": "mistralai-mistral-nemo"
    },
    {
        "display_name": "Mistral: Mistral Nemo (free)",
        "description": "A 12B parameter model with a 128k token context length built by Mistral in collaboration with NVIDIA.\n\nThe model is multilingual, supporting English, French, German, Spanish, Italian, Portuguese, Chinese, Japanese, Korean, Arabic, and Hindi.\n\nIt supports function calling and is released under the Apache 2.0 license.",
        "category": "llm",
        "provider": "mistralai",
        "accepts_plugins": false,
        "model_id": "mistralai/mistral-nemo:free",
        "context_length": 131072,
        "supported_parameters": [
            "frequency_penalty",
            "logit_bias",
            "logprobs",
            "max_tokens",
            "min_p",
            "presence_penalty",
            "repetition_penalty",
            "seed",
            "stop",
            "temperature",
            "top_k",
            "top_logprobs",
            "top_p"
        ],
        "inputs": [
            {
                "name": "system_prompt",
                "display_name": "System Prompt",
                "type": "string or message",
                "description": "System prompt for the model",
                "default": null
            },
            {
                "name": "messages",
                "display_name": "Messages",
                "type": "array of messages or message or string",
                "description": "Array of chat messages",
                "required": true
            },
            {
                "name": "temperature",
                "display_name": "Temperature",
                "type": "number",
                "description": "Controls randomness (0-2)",
                "default": null
            },
            {
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "type": "number",
                "description": "Maximum tokens to generate",
                "default": null
            },
            {
                "name": "top_p",
                "display_name": "Top P",
                "type": "number",
                "description": "Controls diversity via nucleus sampling",
                "default": null
            },
            {
                "name": "frequency_penalty",
                "display_name": "Frequency Penalty",
                "type": "number",
                "description": "Reduces repetition (-2 to 2)",
                "default": null
            },
            {
                "name": "presence_penalty",
                "display_name": "Presence Penalty",
                "type": "number",
                "description": "Encourages new topics (-2 to 2)",
                "default": null
            },
            {
                "name": "seed",
                "display_name": "Seed",
                "type": "number",
                "description": "Deterministic outputs",
                "default": null
            },
            {
                "name": "stop",
                "display_name": "Stop",
                "type": "string or array",
                "description": "Custom stop sequences",
                "default": null
            }
        ],
        "outputs": [
            {
                "name": "content",
                "display_name": "Content",
                "can_stream": true,
                "type": "string",
                "description": "The content portion of the generated response message."
            },
            {
                "name": "message",
                "display_name": "Message",
                "type": "message",
                "can_stream": true,
                "description": "The full generated response message."
            },
            {
                "name": "role",
                "display_name": "Role",
                "can_stream": true,
                "type": "string",
                "description": "Role of the response (usually 'assistant')"
            },
            {
                "name": "finish_reason",
                "display_name": "Finish Reason",
                "type": "string",
                "description": "Why the completion finished"
            },
            {
                "name": "usage",
                "display_name": "Token Usage",
                "type": "object",
                "description": "Token usage statistics"
            },
            {
                "name": "cost_total",
                "display_name": "Total Cost",
                "type": "number",
                "description": "Total cost for processing this request (USD)"
            },
            {
                "name": "cost_itemized",
                "display_name": "Itemized Cost",
                "type": "array",
                "description": "Detailed breakdown of costs"
            },
            {
                "name": "logprobs",
                "display_name": "Log Probabilities",
                "type": "object",
                "description": "Token probabilities and logprobs from the model"
            }
        ],
        "pricing": {
            "reference": "https://openrouter.ai/models",
            "items": [
                {
                    "key": "input_cost_per_million",
                    "label": "Input Tokens (per 1M)",
                    "cost": 0,
                    "currency": "USD"
                },
                {
                    "key": "output_cost_per_million",
                    "label": "Output Tokens (per 1M)",
                    "cost": 0,
                    "currency": "USD"
                }
            ]
        },
        "id": "mistralai-mistral-nemo-free"
    },
    {
        "display_name": "Mistral: Saba",
        "description": "Mistral Saba is a 24B-parameter language model specifically designed for the Middle East and South Asia, delivering accurate and contextually relevant responses while maintaining efficient performance. Trained on curated regional datasets, it supports multiple Indian-origin languages—including Tamil and Malayalam—alongside Arabic. This makes it a versatile option for a range of regional and multilingual applications. Read more at the blog post [here](https://mistral.ai/en/news/mistral-saba)",
        "category": "llm",
        "provider": "mistralai",
        "accepts_plugins": true,
        "model_id": "mistralai/mistral-saba",
        "context_length": 32768,
        "supported_parameters": [
            "frequency_penalty",
            "max_tokens",
            "presence_penalty",
            "response_format",
            "seed",
            "stop",
            "structured_outputs",
            "temperature",
            "tool_choice",
            "tools",
            "top_p"
        ],
        "inputs": [
            {
                "name": "system_prompt",
                "display_name": "System Prompt",
                "type": "string or message",
                "description": "System prompt for the model",
                "default": null
            },
            {
                "name": "messages",
                "display_name": "Messages",
                "type": "array of messages or message or string",
                "description": "Array of chat messages",
                "required": true
            },
            {
                "name": "tools",
                "display_name": "Tools",
                "type": "tool",
                "description": "Array of tools to use",
                "default": null,
                "allow_multiple": true
            },
            {
                "name": "temperature",
                "display_name": "Temperature",
                "type": "number",
                "description": "Controls randomness (0-2)",
                "default": null
            },
            {
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "type": "number",
                "description": "Maximum tokens to generate",
                "default": null
            },
            {
                "name": "top_p",
                "display_name": "Top P",
                "type": "number",
                "description": "Controls diversity via nucleus sampling",
                "default": null
            },
            {
                "name": "frequency_penalty",
                "display_name": "Frequency Penalty",
                "type": "number",
                "description": "Reduces repetition (-2 to 2)",
                "default": null
            },
            {
                "name": "presence_penalty",
                "display_name": "Presence Penalty",
                "type": "number",
                "description": "Encourages new topics (-2 to 2)",
                "default": null
            },
            {
                "name": "response_format",
                "display_name": "Response Format",
                "type": "string or object",
                "description": "Output format specification",
                "default": null
            },
            {
                "name": "seed",
                "display_name": "Seed",
                "type": "number",
                "description": "Deterministic outputs",
                "default": null
            },
            {
                "name": "stop",
                "display_name": "Stop",
                "type": "string or array",
                "description": "Custom stop sequences",
                "default": null
            },
            {
                "name": "structured_outputs",
                "display_name": "Structured Outputs",
                "type": "string or object",
                "description": "JSON schema enforcement",
                "default": null
            },
            {
                "name": "tool_choice",
                "display_name": "Tool Choice",
                "type": "string",
                "description": "Tool selection control",
                "default": null
            }
        ],
        "outputs": [
            {
                "name": "content",
                "display_name": "Content",
                "can_stream": true,
                "type": "string",
                "description": "The content portion of the generated response message."
            },
            {
                "name": "message",
                "display_name": "Message",
                "type": "message",
                "can_stream": true,
                "description": "The full generated response message."
            },
            {
                "name": "role",
                "display_name": "Role",
                "can_stream": true,
                "type": "string",
                "description": "Role of the response (usually 'assistant')"
            },
            {
                "name": "tool_calls",
                "display_name": "Tool Calls",
                "type": "array of tools",
                "description": "Tool calls made by the model"
            },
            {
                "name": "finish_reason",
                "display_name": "Finish Reason",
                "type": "string",
                "description": "Why the completion finished"
            },
            {
                "name": "usage",
                "display_name": "Token Usage",
                "type": "object",
                "description": "Token usage statistics"
            },
            {
                "name": "cost_total",
                "display_name": "Total Cost",
                "type": "number",
                "description": "Total cost for processing this request (USD)"
            },
            {
                "name": "cost_itemized",
                "display_name": "Itemized Cost",
                "type": "array",
                "description": "Detailed breakdown of costs"
            }
        ],
        "pricing": {
            "reference": "https://openrouter.ai/models",
            "items": [
                {
                    "key": "input_cost_per_million",
                    "label": "Input Tokens (per 1M)",
                    "cost": 0.19999999999999998,
                    "currency": "USD"
                },
                {
                    "key": "output_cost_per_million",
                    "label": "Output Tokens (per 1M)",
                    "cost": 0.6,
                    "currency": "USD"
                }
            ]
        },
        "id": "mistralai-mistral-saba"
    },
    {
        "display_name": "Mistral Small",
        "description": "With 22 billion parameters, Mistral Small v24.09 offers a convenient mid-point between (Mistral NeMo 12B)[/mistralai/mistral-nemo] and (Mistral Large 2)[/mistralai/mistral-large], providing a cost-effective solution that can be deployed across various platforms and environments. It has better reasoning, exhibits more capabilities, can produce and reason about code, and is multiligual, supporting English, French, German, Italian, and Spanish.",
        "category": "llm",
        "provider": "mistralai",
        "accepts_plugins": true,
        "model_id": "mistralai/mistral-small",
        "context_length": 32768,
        "supported_parameters": [
            "frequency_penalty",
            "max_tokens",
            "presence_penalty",
            "response_format",
            "seed",
            "stop",
            "structured_outputs",
            "temperature",
            "tool_choice",
            "tools",
            "top_p"
        ],
        "inputs": [
            {
                "name": "system_prompt",
                "display_name": "System Prompt",
                "type": "string or message",
                "description": "System prompt for the model",
                "default": null
            },
            {
                "name": "messages",
                "display_name": "Messages",
                "type": "array of messages or message or string",
                "description": "Array of chat messages",
                "required": true
            },
            {
                "name": "tools",
                "display_name": "Tools",
                "type": "tool",
                "description": "Array of tools to use",
                "default": null,
                "allow_multiple": true
            },
            {
                "name": "temperature",
                "display_name": "Temperature",
                "type": "number",
                "description": "Controls randomness (0-2)",
                "default": null
            },
            {
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "type": "number",
                "description": "Maximum tokens to generate",
                "default": null
            },
            {
                "name": "top_p",
                "display_name": "Top P",
                "type": "number",
                "description": "Controls diversity via nucleus sampling",
                "default": null
            },
            {
                "name": "frequency_penalty",
                "display_name": "Frequency Penalty",
                "type": "number",
                "description": "Reduces repetition (-2 to 2)",
                "default": null
            },
            {
                "name": "presence_penalty",
                "display_name": "Presence Penalty",
                "type": "number",
                "description": "Encourages new topics (-2 to 2)",
                "default": null
            },
            {
                "name": "response_format",
                "display_name": "Response Format",
                "type": "string or object",
                "description": "Output format specification",
                "default": null
            },
            {
                "name": "seed",
                "display_name": "Seed",
                "type": "number",
                "description": "Deterministic outputs",
                "default": null
            },
            {
                "name": "stop",
                "display_name": "Stop",
                "type": "string or array",
                "description": "Custom stop sequences",
                "default": null
            },
            {
                "name": "structured_outputs",
                "display_name": "Structured Outputs",
                "type": "string or object",
                "description": "JSON schema enforcement",
                "default": null
            },
            {
                "name": "tool_choice",
                "display_name": "Tool Choice",
                "type": "string",
                "description": "Tool selection control",
                "default": null
            }
        ],
        "outputs": [
            {
                "name": "content",
                "display_name": "Content",
                "can_stream": true,
                "type": "string",
                "description": "The content portion of the generated response message."
            },
            {
                "name": "message",
                "display_name": "Message",
                "type": "message",
                "can_stream": true,
                "description": "The full generated response message."
            },
            {
                "name": "role",
                "display_name": "Role",
                "can_stream": true,
                "type": "string",
                "description": "Role of the response (usually 'assistant')"
            },
            {
                "name": "tool_calls",
                "display_name": "Tool Calls",
                "type": "array of tools",
                "description": "Tool calls made by the model"
            },
            {
                "name": "finish_reason",
                "display_name": "Finish Reason",
                "type": "string",
                "description": "Why the completion finished"
            },
            {
                "name": "usage",
                "display_name": "Token Usage",
                "type": "object",
                "description": "Token usage statistics"
            },
            {
                "name": "cost_total",
                "display_name": "Total Cost",
                "type": "number",
                "description": "Total cost for processing this request (USD)"
            },
            {
                "name": "cost_itemized",
                "display_name": "Itemized Cost",
                "type": "array",
                "description": "Detailed breakdown of costs"
            }
        ],
        "pricing": {
            "reference": "https://openrouter.ai/models",
            "items": [
                {
                    "key": "input_cost_per_million",
                    "label": "Input Tokens (per 1M)",
                    "cost": 0.19999999999999998,
                    "currency": "USD"
                },
                {
                    "key": "output_cost_per_million",
                    "label": "Output Tokens (per 1M)",
                    "cost": 0.6,
                    "currency": "USD"
                }
            ]
        },
        "id": "mistralai-mistral-small"
    },
    {
        "display_name": "Mistral: Mistral Small 3",
        "description": "Mistral Small 3 is a 24B-parameter language model optimized for low-latency performance across common AI tasks. Released under the Apache 2.0 license, it features both pre-trained and instruction-tuned versions designed for efficient local deployment.\n\nThe model achieves 81% accuracy on the MMLU benchmark and performs competitively with larger models like Llama 3.3 70B and Qwen 32B, while operating at three times the speed on equivalent hardware. [Read the blog post about the model here.](https://mistral.ai/news/mistral-small-3/)",
        "category": "llm",
        "provider": "mistralai",
        "accepts_plugins": true,
        "model_id": "mistralai/mistral-small-24b-instruct-2501",
        "context_length": 32768,
        "supported_parameters": [
            "frequency_penalty",
            "logit_bias",
            "logprobs",
            "max_tokens",
            "min_p",
            "presence_penalty",
            "repetition_penalty",
            "response_format",
            "seed",
            "stop",
            "structured_outputs",
            "temperature",
            "tool_choice",
            "tools",
            "top_k",
            "top_logprobs",
            "top_p"
        ],
        "inputs": [
            {
                "name": "system_prompt",
                "display_name": "System Prompt",
                "type": "string or message",
                "description": "System prompt for the model",
                "default": null
            },
            {
                "name": "messages",
                "display_name": "Messages",
                "type": "array of messages or message or string",
                "description": "Array of chat messages",
                "required": true
            },
            {
                "name": "tools",
                "display_name": "Tools",
                "type": "tool",
                "description": "Array of tools to use",
                "default": null,
                "allow_multiple": true
            },
            {
                "name": "temperature",
                "display_name": "Temperature",
                "type": "number",
                "description": "Controls randomness (0-2)",
                "default": null
            },
            {
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "type": "number",
                "description": "Maximum tokens to generate",
                "default": null
            },
            {
                "name": "top_p",
                "display_name": "Top P",
                "type": "number",
                "description": "Controls diversity via nucleus sampling",
                "default": null
            },
            {
                "name": "frequency_penalty",
                "display_name": "Frequency Penalty",
                "type": "number",
                "description": "Reduces repetition (-2 to 2)",
                "default": null
            },
            {
                "name": "presence_penalty",
                "display_name": "Presence Penalty",
                "type": "number",
                "description": "Encourages new topics (-2 to 2)",
                "default": null
            },
            {
                "name": "response_format",
                "display_name": "Response Format",
                "type": "string or object",
                "description": "Output format specification",
                "default": null
            },
            {
                "name": "seed",
                "display_name": "Seed",
                "type": "number",
                "description": "Deterministic outputs",
                "default": null
            },
            {
                "name": "stop",
                "display_name": "Stop",
                "type": "string or array",
                "description": "Custom stop sequences",
                "default": null
            },
            {
                "name": "structured_outputs",
                "display_name": "Structured Outputs",
                "type": "string or object",
                "description": "JSON schema enforcement",
                "default": null
            },
            {
                "name": "tool_choice",
                "display_name": "Tool Choice",
                "type": "string",
                "description": "Tool selection control",
                "default": null
            }
        ],
        "outputs": [
            {
                "name": "content",
                "display_name": "Content",
                "can_stream": true,
                "type": "string",
                "description": "The content portion of the generated response message."
            },
            {
                "name": "message",
                "display_name": "Message",
                "type": "message",
                "can_stream": true,
                "description": "The full generated response message."
            },
            {
                "name": "role",
                "display_name": "Role",
                "can_stream": true,
                "type": "string",
                "description": "Role of the response (usually 'assistant')"
            },
            {
                "name": "tool_calls",
                "display_name": "Tool Calls",
                "type": "array of tools",
                "description": "Tool calls made by the model"
            },
            {
                "name": "finish_reason",
                "display_name": "Finish Reason",
                "type": "string",
                "description": "Why the completion finished"
            },
            {
                "name": "usage",
                "display_name": "Token Usage",
                "type": "object",
                "description": "Token usage statistics"
            },
            {
                "name": "cost_total",
                "display_name": "Total Cost",
                "type": "number",
                "description": "Total cost for processing this request (USD)"
            },
            {
                "name": "cost_itemized",
                "display_name": "Itemized Cost",
                "type": "array",
                "description": "Detailed breakdown of costs"
            },
            {
                "name": "logprobs",
                "display_name": "Log Probabilities",
                "type": "object",
                "description": "Token probabilities and logprobs from the model"
            }
        ],
        "pricing": {
            "reference": "https://openrouter.ai/models",
            "items": [
                {
                    "key": "input_cost_per_million",
                    "label": "Input Tokens (per 1M)",
                    "cost": 0.01999188,
                    "currency": "USD"
                },
                {
                    "key": "output_cost_per_million",
                    "label": "Output Tokens (per 1M)",
                    "cost": 0.0800064,
                    "currency": "USD"
                }
            ]
        },
        "id": "mistralai-mistral-small-24b-instruct-2501"
    },
    {
        "display_name": "Mistral: Mistral Small 3 (free)",
        "description": "Mistral Small 3 is a 24B-parameter language model optimized for low-latency performance across common AI tasks. Released under the Apache 2.0 license, it features both pre-trained and instruction-tuned versions designed for efficient local deployment.\n\nThe model achieves 81% accuracy on the MMLU benchmark and performs competitively with larger models like Llama 3.3 70B and Qwen 32B, while operating at three times the speed on equivalent hardware. [Read the blog post about the model here.](https://mistral.ai/news/mistral-small-3/)",
        "category": "llm",
        "provider": "mistralai",
        "accepts_plugins": false,
        "model_id": "mistralai/mistral-small-24b-instruct-2501:free",
        "context_length": 32768,
        "supported_parameters": [
            "frequency_penalty",
            "logit_bias",
            "logprobs",
            "max_tokens",
            "min_p",
            "presence_penalty",
            "repetition_penalty",
            "seed",
            "stop",
            "temperature",
            "top_k",
            "top_logprobs",
            "top_p"
        ],
        "inputs": [
            {
                "name": "prompt",
                "display_name": "Prompt",
                "type": "string",
                "description": "Text prompt for completion",
                "required": true
            },
            {
                "name": "temperature",
                "display_name": "Temperature",
                "type": "number",
                "description": "Controls randomness (0-2)",
                "default": null
            },
            {
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "type": "number",
                "description": "Maximum tokens to generate",
                "default": null
            },
            {
                "name": "top_p",
                "display_name": "Top P",
                "type": "number",
                "description": "Controls diversity via nucleus sampling",
                "default": null
            },
            {
                "name": "frequency_penalty",
                "display_name": "Frequency Penalty",
                "type": "number",
                "description": "Reduces repetition (-2 to 2)",
                "default": null
            },
            {
                "name": "presence_penalty",
                "display_name": "Presence Penalty",
                "type": "number",
                "description": "Encourages new topics (-2 to 2)",
                "default": null
            },
            {
                "name": "seed",
                "display_name": "Seed",
                "type": "number",
                "description": "Deterministic outputs",
                "default": null
            },
            {
                "name": "stop",
                "display_name": "Stop",
                "type": "string or array",
                "description": "Custom stop sequences",
                "default": null
            }
        ],
        "outputs": [
            {
                "name": "content",
                "display_name": "Content",
                "can_stream": true,
                "type": "string",
                "description": "The generated completion text"
            },
            {
                "name": "finish_reason",
                "display_name": "Finish Reason",
                "type": "string",
                "description": "Why the completion finished"
            },
            {
                "name": "usage",
                "display_name": "Token Usage",
                "type": "object",
                "description": "Token usage statistics"
            },
            {
                "name": "cost_total",
                "display_name": "Total Cost",
                "type": "number",
                "description": "Total cost for processing this request (USD)"
            },
            {
                "name": "cost_itemized",
                "display_name": "Itemized Cost",
                "type": "array",
                "description": "Detailed breakdown of costs"
            },
            {
                "name": "logprobs",
                "display_name": "Log Probabilities",
                "type": "object",
                "description": "Token probabilities and logprobs from the model"
            }
        ],
        "pricing": {
            "reference": "https://openrouter.ai/models",
            "items": [
                {
                    "key": "input_cost_per_million",
                    "label": "Input Tokens (per 1M)",
                    "cost": 0,
                    "currency": "USD"
                },
                {
                    "key": "output_cost_per_million",
                    "label": "Output Tokens (per 1M)",
                    "cost": 0,
                    "currency": "USD"
                }
            ]
        },
        "id": "mistralai-mistral-small-24b-instruct-2501-free"
    },
    {
        "display_name": "Mistral: Mistral Small 3.1 24B",
        "description": "Mistral Small 3.1 24B Instruct is an upgraded variant of Mistral Small 3 (2501), featuring 24 billion parameters with advanced multimodal capabilities. It provides state-of-the-art performance in text-based reasoning and vision tasks, including image analysis, programming, mathematical reasoning, and multilingual support across dozens of languages. Equipped with an extensive 128k token context window and optimized for efficient local inference, it supports use cases such as conversational agents, function calling, long-document comprehension, and privacy-sensitive deployments. The updated version is [Mistral Small 3.2](mistralai/mistral-small-3.2-24b-instruct)",
        "category": "llm",
        "provider": "mistralai",
        "accepts_plugins": true,
        "model_id": "mistralai/mistral-small-3.1-24b-instruct",
        "context_length": 131072,
        "supported_parameters": [
            "frequency_penalty",
            "logit_bias",
            "logprobs",
            "max_tokens",
            "min_p",
            "presence_penalty",
            "repetition_penalty",
            "response_format",
            "seed",
            "stop",
            "structured_outputs",
            "temperature",
            "tool_choice",
            "tools",
            "top_k",
            "top_logprobs",
            "top_p"
        ],
        "inputs": [
            {
                "name": "system_prompt",
                "display_name": "System Prompt",
                "type": "string or message",
                "description": "System prompt for the model",
                "default": null
            },
            {
                "name": "messages",
                "display_name": "Messages",
                "type": "array of messages or message or string",
                "description": "Array of chat messages",
                "required": true
            },
            {
                "name": "tools",
                "display_name": "Tools",
                "type": "tool",
                "description": "Array of tools to use",
                "default": null,
                "allow_multiple": true
            },
            {
                "name": "temperature",
                "display_name": "Temperature",
                "type": "number",
                "description": "Controls randomness (0-2)",
                "default": null
            },
            {
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "type": "number",
                "description": "Maximum tokens to generate",
                "default": null
            },
            {
                "name": "top_p",
                "display_name": "Top P",
                "type": "number",
                "description": "Controls diversity via nucleus sampling",
                "default": null
            },
            {
                "name": "frequency_penalty",
                "display_name": "Frequency Penalty",
                "type": "number",
                "description": "Reduces repetition (-2 to 2)",
                "default": null
            },
            {
                "name": "presence_penalty",
                "display_name": "Presence Penalty",
                "type": "number",
                "description": "Encourages new topics (-2 to 2)",
                "default": null
            },
            {
                "name": "response_format",
                "display_name": "Response Format",
                "type": "string or object",
                "description": "Output format specification",
                "default": null
            },
            {
                "name": "seed",
                "display_name": "Seed",
                "type": "number",
                "description": "Deterministic outputs",
                "default": null
            },
            {
                "name": "stop",
                "display_name": "Stop",
                "type": "string or array",
                "description": "Custom stop sequences",
                "default": null
            },
            {
                "name": "structured_outputs",
                "display_name": "Structured Outputs",
                "type": "string or object",
                "description": "JSON schema enforcement",
                "default": null
            },
            {
                "name": "tool_choice",
                "display_name": "Tool Choice",
                "type": "string",
                "description": "Tool selection control",
                "default": null
            }
        ],
        "outputs": [
            {
                "name": "content",
                "display_name": "Content",
                "can_stream": true,
                "type": "string",
                "description": "The content portion of the generated response message."
            },
            {
                "name": "message",
                "display_name": "Message",
                "type": "message",
                "can_stream": true,
                "description": "The full generated response message."
            },
            {
                "name": "role",
                "display_name": "Role",
                "can_stream": true,
                "type": "string",
                "description": "Role of the response (usually 'assistant')"
            },
            {
                "name": "tool_calls",
                "display_name": "Tool Calls",
                "type": "array of tools",
                "description": "Tool calls made by the model"
            },
            {
                "name": "finish_reason",
                "display_name": "Finish Reason",
                "type": "string",
                "description": "Why the completion finished"
            },
            {
                "name": "usage",
                "display_name": "Token Usage",
                "type": "object",
                "description": "Token usage statistics"
            },
            {
                "name": "cost_total",
                "display_name": "Total Cost",
                "type": "number",
                "description": "Total cost for processing this request (USD)"
            },
            {
                "name": "cost_itemized",
                "display_name": "Itemized Cost",
                "type": "array",
                "description": "Detailed breakdown of costs"
            },
            {
                "name": "logprobs",
                "display_name": "Log Probabilities",
                "type": "object",
                "description": "Token probabilities and logprobs from the model"
            }
        ],
        "pricing": {
            "reference": "https://openrouter.ai/models",
            "items": [
                {
                    "key": "input_cost_per_million",
                    "label": "Input Tokens (per 1M)",
                    "cost": 0.017992691999999998,
                    "currency": "USD"
                },
                {
                    "key": "output_cost_per_million",
                    "label": "Output Tokens (per 1M)",
                    "cost": 0.07200576,
                    "currency": "USD"
                }
            ]
        },
        "id": "mistralai-mistral-small-3-1-24b-instruct"
    },
    {
        "display_name": "Mistral: Mistral Small 3.1 24B (free)",
        "description": "Mistral Small 3.1 24B Instruct is an upgraded variant of Mistral Small 3 (2501), featuring 24 billion parameters with advanced multimodal capabilities. It provides state-of-the-art performance in text-based reasoning and vision tasks, including image analysis, programming, mathematical reasoning, and multilingual support across dozens of languages. Equipped with an extensive 128k token context window and optimized for efficient local inference, it supports use cases such as conversational agents, function calling, long-document comprehension, and privacy-sensitive deployments. The updated version is [Mistral Small 3.2](mistralai/mistral-small-3.2-24b-instruct)",
        "category": "llm",
        "provider": "mistralai",
        "accepts_plugins": true,
        "model_id": "mistralai/mistral-small-3.1-24b-instruct:free",
        "context_length": 128000,
        "supported_parameters": [
            "frequency_penalty",
            "logit_bias",
            "logprobs",
            "max_tokens",
            "min_p",
            "presence_penalty",
            "repetition_penalty",
            "response_format",
            "seed",
            "stop",
            "structured_outputs",
            "temperature",
            "tool_choice",
            "tools",
            "top_k",
            "top_logprobs",
            "top_p"
        ],
        "inputs": [
            {
                "name": "system_prompt",
                "display_name": "System Prompt",
                "type": "string or message",
                "description": "System prompt for the model",
                "default": null
            },
            {
                "name": "messages",
                "display_name": "Messages",
                "type": "array of messages or message or string",
                "description": "Array of chat messages",
                "required": true
            },
            {
                "name": "tools",
                "display_name": "Tools",
                "type": "tool",
                "description": "Array of tools to use",
                "default": null,
                "allow_multiple": true
            },
            {
                "name": "temperature",
                "display_name": "Temperature",
                "type": "number",
                "description": "Controls randomness (0-2)",
                "default": null
            },
            {
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "type": "number",
                "description": "Maximum tokens to generate",
                "default": null
            },
            {
                "name": "top_p",
                "display_name": "Top P",
                "type": "number",
                "description": "Controls diversity via nucleus sampling",
                "default": null
            },
            {
                "name": "frequency_penalty",
                "display_name": "Frequency Penalty",
                "type": "number",
                "description": "Reduces repetition (-2 to 2)",
                "default": null
            },
            {
                "name": "presence_penalty",
                "display_name": "Presence Penalty",
                "type": "number",
                "description": "Encourages new topics (-2 to 2)",
                "default": null
            },
            {
                "name": "response_format",
                "display_name": "Response Format",
                "type": "string or object",
                "description": "Output format specification",
                "default": null
            },
            {
                "name": "seed",
                "display_name": "Seed",
                "type": "number",
                "description": "Deterministic outputs",
                "default": null
            },
            {
                "name": "stop",
                "display_name": "Stop",
                "type": "string or array",
                "description": "Custom stop sequences",
                "default": null
            },
            {
                "name": "structured_outputs",
                "display_name": "Structured Outputs",
                "type": "string or object",
                "description": "JSON schema enforcement",
                "default": null
            },
            {
                "name": "tool_choice",
                "display_name": "Tool Choice",
                "type": "string",
                "description": "Tool selection control",
                "default": null
            }
        ],
        "outputs": [
            {
                "name": "content",
                "display_name": "Content",
                "can_stream": true,
                "type": "string",
                "description": "The content portion of the generated response message."
            },
            {
                "name": "message",
                "display_name": "Message",
                "type": "message",
                "can_stream": true,
                "description": "The full generated response message."
            },
            {
                "name": "role",
                "display_name": "Role",
                "can_stream": true,
                "type": "string",
                "description": "Role of the response (usually 'assistant')"
            },
            {
                "name": "tool_calls",
                "display_name": "Tool Calls",
                "type": "array of tools",
                "description": "Tool calls made by the model"
            },
            {
                "name": "finish_reason",
                "display_name": "Finish Reason",
                "type": "string",
                "description": "Why the completion finished"
            },
            {
                "name": "usage",
                "display_name": "Token Usage",
                "type": "object",
                "description": "Token usage statistics"
            },
            {
                "name": "cost_total",
                "display_name": "Total Cost",
                "type": "number",
                "description": "Total cost for processing this request (USD)"
            },
            {
                "name": "cost_itemized",
                "display_name": "Itemized Cost",
                "type": "array",
                "description": "Detailed breakdown of costs"
            },
            {
                "name": "logprobs",
                "display_name": "Log Probabilities",
                "type": "object",
                "description": "Token probabilities and logprobs from the model"
            }
        ],
        "pricing": {
            "reference": "https://openrouter.ai/models",
            "items": [
                {
                    "key": "input_cost_per_million",
                    "label": "Input Tokens (per 1M)",
                    "cost": 0,
                    "currency": "USD"
                },
                {
                    "key": "output_cost_per_million",
                    "label": "Output Tokens (per 1M)",
                    "cost": 0,
                    "currency": "USD"
                }
            ]
        },
        "id": "mistralai-mistral-small-3-1-24b-instruct-free"
    },
    {
        "display_name": "Mistral: Mistral Small 3.2 24B",
        "description": "Mistral-Small-3.2-24B-Instruct-2506 is an updated 24B parameter model from Mistral optimized for instruction following, repetition reduction, and improved function calling. Compared to the 3.1 release, version 3.2 significantly improves accuracy on WildBench and Arena Hard, reduces infinite generations, and delivers gains in tool use and structured output tasks.\n\nIt supports image and text inputs with structured outputs, function/tool calling, and strong performance across coding (HumanEval+, MBPP), STEM (MMLU, MATH, GPQA), and vision benchmarks (ChartQA, DocVQA).",
        "category": "llm",
        "provider": "mistralai",
        "accepts_plugins": true,
        "model_id": "mistralai/mistral-small-3.2-24b-instruct",
        "context_length": 128000,
        "supported_parameters": [
            "frequency_penalty",
            "logit_bias",
            "logprobs",
            "max_tokens",
            "min_p",
            "presence_penalty",
            "repetition_penalty",
            "response_format",
            "seed",
            "stop",
            "structured_outputs",
            "temperature",
            "tool_choice",
            "tools",
            "top_k",
            "top_logprobs",
            "top_p"
        ],
        "inputs": [
            {
                "name": "system_prompt",
                "display_name": "System Prompt",
                "type": "string or message",
                "description": "System prompt for the model",
                "default": null
            },
            {
                "name": "messages",
                "display_name": "Messages",
                "type": "array of messages or message or string",
                "description": "Array of chat messages",
                "required": true
            },
            {
                "name": "tools",
                "display_name": "Tools",
                "type": "tool",
                "description": "Array of tools to use",
                "default": null,
                "allow_multiple": true
            },
            {
                "name": "temperature",
                "display_name": "Temperature",
                "type": "number",
                "description": "Controls randomness (0-2)",
                "default": null
            },
            {
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "type": "number",
                "description": "Maximum tokens to generate",
                "default": null
            },
            {
                "name": "top_p",
                "display_name": "Top P",
                "type": "number",
                "description": "Controls diversity via nucleus sampling",
                "default": null
            },
            {
                "name": "frequency_penalty",
                "display_name": "Frequency Penalty",
                "type": "number",
                "description": "Reduces repetition (-2 to 2)",
                "default": null
            },
            {
                "name": "presence_penalty",
                "display_name": "Presence Penalty",
                "type": "number",
                "description": "Encourages new topics (-2 to 2)",
                "default": null
            },
            {
                "name": "response_format",
                "display_name": "Response Format",
                "type": "string or object",
                "description": "Output format specification",
                "default": null
            },
            {
                "name": "seed",
                "display_name": "Seed",
                "type": "number",
                "description": "Deterministic outputs",
                "default": null
            },
            {
                "name": "stop",
                "display_name": "Stop",
                "type": "string or array",
                "description": "Custom stop sequences",
                "default": null
            },
            {
                "name": "structured_outputs",
                "display_name": "Structured Outputs",
                "type": "string or object",
                "description": "JSON schema enforcement",
                "default": null
            },
            {
                "name": "tool_choice",
                "display_name": "Tool Choice",
                "type": "string",
                "description": "Tool selection control",
                "default": null
            }
        ],
        "outputs": [
            {
                "name": "content",
                "display_name": "Content",
                "can_stream": true,
                "type": "string",
                "description": "The content portion of the generated response message."
            },
            {
                "name": "message",
                "display_name": "Message",
                "type": "message",
                "can_stream": true,
                "description": "The full generated response message."
            },
            {
                "name": "role",
                "display_name": "Role",
                "can_stream": true,
                "type": "string",
                "description": "Role of the response (usually 'assistant')"
            },
            {
                "name": "tool_calls",
                "display_name": "Tool Calls",
                "type": "array of tools",
                "description": "Tool calls made by the model"
            },
            {
                "name": "finish_reason",
                "display_name": "Finish Reason",
                "type": "string",
                "description": "Why the completion finished"
            },
            {
                "name": "usage",
                "display_name": "Token Usage",
                "type": "object",
                "description": "Token usage statistics"
            },
            {
                "name": "cost_total",
                "display_name": "Total Cost",
                "type": "number",
                "description": "Total cost for processing this request (USD)"
            },
            {
                "name": "cost_itemized",
                "display_name": "Itemized Cost",
                "type": "array",
                "description": "Detailed breakdown of costs"
            },
            {
                "name": "logprobs",
                "display_name": "Log Probabilities",
                "type": "object",
                "description": "Token probabilities and logprobs from the model"
            }
        ],
        "pricing": {
            "reference": "https://openrouter.ai/models",
            "items": [
                {
                    "key": "input_cost_per_million",
                    "label": "Input Tokens (per 1M)",
                    "cost": 0.049999999999999996,
                    "currency": "USD"
                },
                {
                    "key": "output_cost_per_million",
                    "label": "Output Tokens (per 1M)",
                    "cost": 0.09999999999999999,
                    "currency": "USD"
                }
            ]
        },
        "id": "mistralai-mistral-small-3-2-24b-instruct"
    },
    {
        "display_name": "Mistral: Mistral Small 3.2 24B (free)",
        "description": "Mistral-Small-3.2-24B-Instruct-2506 is an updated 24B parameter model from Mistral optimized for instruction following, repetition reduction, and improved function calling. Compared to the 3.1 release, version 3.2 significantly improves accuracy on WildBench and Arena Hard, reduces infinite generations, and delivers gains in tool use and structured output tasks.\n\nIt supports image and text inputs with structured outputs, function/tool calling, and strong performance across coding (HumanEval+, MBPP), STEM (MMLU, MATH, GPQA), and vision benchmarks (ChartQA, DocVQA).",
        "category": "llm",
        "provider": "mistralai",
        "accepts_plugins": true,
        "model_id": "mistralai/mistral-small-3.2-24b-instruct:free",
        "context_length": 131072,
        "supported_parameters": [
            "frequency_penalty",
            "logit_bias",
            "logprobs",
            "max_tokens",
            "min_p",
            "presence_penalty",
            "repetition_penalty",
            "seed",
            "stop",
            "structured_outputs",
            "temperature",
            "tool_choice",
            "tools",
            "top_k",
            "top_logprobs",
            "top_p"
        ],
        "inputs": [
            {
                "name": "system_prompt",
                "display_name": "System Prompt",
                "type": "string or message",
                "description": "System prompt for the model",
                "default": null
            },
            {
                "name": "messages",
                "display_name": "Messages",
                "type": "array of messages or message or string",
                "description": "Array of chat messages",
                "required": true
            },
            {
                "name": "tools",
                "display_name": "Tools",
                "type": "tool",
                "description": "Array of tools to use",
                "default": null,
                "allow_multiple": true
            },
            {
                "name": "temperature",
                "display_name": "Temperature",
                "type": "number",
                "description": "Controls randomness (0-2)",
                "default": null
            },
            {
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "type": "number",
                "description": "Maximum tokens to generate",
                "default": null
            },
            {
                "name": "top_p",
                "display_name": "Top P",
                "type": "number",
                "description": "Controls diversity via nucleus sampling",
                "default": null
            },
            {
                "name": "frequency_penalty",
                "display_name": "Frequency Penalty",
                "type": "number",
                "description": "Reduces repetition (-2 to 2)",
                "default": null
            },
            {
                "name": "presence_penalty",
                "display_name": "Presence Penalty",
                "type": "number",
                "description": "Encourages new topics (-2 to 2)",
                "default": null
            },
            {
                "name": "seed",
                "display_name": "Seed",
                "type": "number",
                "description": "Deterministic outputs",
                "default": null
            },
            {
                "name": "stop",
                "display_name": "Stop",
                "type": "string or array",
                "description": "Custom stop sequences",
                "default": null
            },
            {
                "name": "structured_outputs",
                "display_name": "Structured Outputs",
                "type": "string or object",
                "description": "JSON schema enforcement",
                "default": null
            },
            {
                "name": "tool_choice",
                "display_name": "Tool Choice",
                "type": "string",
                "description": "Tool selection control",
                "default": null
            }
        ],
        "outputs": [
            {
                "name": "content",
                "display_name": "Content",
                "can_stream": true,
                "type": "string",
                "description": "The content portion of the generated response message."
            },
            {
                "name": "message",
                "display_name": "Message",
                "type": "message",
                "can_stream": true,
                "description": "The full generated response message."
            },
            {
                "name": "role",
                "display_name": "Role",
                "can_stream": true,
                "type": "string",
                "description": "Role of the response (usually 'assistant')"
            },
            {
                "name": "tool_calls",
                "display_name": "Tool Calls",
                "type": "array of tools",
                "description": "Tool calls made by the model"
            },
            {
                "name": "finish_reason",
                "display_name": "Finish Reason",
                "type": "string",
                "description": "Why the completion finished"
            },
            {
                "name": "usage",
                "display_name": "Token Usage",
                "type": "object",
                "description": "Token usage statistics"
            },
            {
                "name": "cost_total",
                "display_name": "Total Cost",
                "type": "number",
                "description": "Total cost for processing this request (USD)"
            },
            {
                "name": "cost_itemized",
                "display_name": "Itemized Cost",
                "type": "array",
                "description": "Detailed breakdown of costs"
            },
            {
                "name": "logprobs",
                "display_name": "Log Probabilities",
                "type": "object",
                "description": "Token probabilities and logprobs from the model"
            }
        ],
        "pricing": {
            "reference": "https://openrouter.ai/models",
            "items": [
                {
                    "key": "input_cost_per_million",
                    "label": "Input Tokens (per 1M)",
                    "cost": 0,
                    "currency": "USD"
                },
                {
                    "key": "output_cost_per_million",
                    "label": "Output Tokens (per 1M)",
                    "cost": 0,
                    "currency": "USD"
                }
            ]
        },
        "id": "mistralai-mistral-small-3-2-24b-instruct-free"
    },
    {
        "display_name": "Mistral Tiny",
        "description": "Note: This model is being deprecated. Recommended replacement is the newer [Ministral 8B](/mistral/ministral-8b)\n\nThis model is currently powered by Mistral-7B-v0.2, and incorporates a \"better\" fine-tuning than [Mistral 7B](/models/mistralai/mistral-7b-instruct-v0.1), inspired by community work. It's best used for large batch processing tasks where cost is a significant factor but reasoning capabilities are not crucial.",
        "category": "llm",
        "provider": "mistralai",
        "accepts_plugins": true,
        "model_id": "mistralai/mistral-tiny",
        "context_length": 32768,
        "supported_parameters": [
            "frequency_penalty",
            "max_tokens",
            "presence_penalty",
            "response_format",
            "seed",
            "stop",
            "structured_outputs",
            "temperature",
            "tool_choice",
            "tools",
            "top_p"
        ],
        "inputs": [
            {
                "name": "system_prompt",
                "display_name": "System Prompt",
                "type": "string or message",
                "description": "System prompt for the model",
                "default": null
            },
            {
                "name": "messages",
                "display_name": "Messages",
                "type": "array of messages or message or string",
                "description": "Array of chat messages",
                "required": true
            },
            {
                "name": "tools",
                "display_name": "Tools",
                "type": "tool",
                "description": "Array of tools to use",
                "default": null,
                "allow_multiple": true
            },
            {
                "name": "temperature",
                "display_name": "Temperature",
                "type": "number",
                "description": "Controls randomness (0-2)",
                "default": null
            },
            {
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "type": "number",
                "description": "Maximum tokens to generate",
                "default": null
            },
            {
                "name": "top_p",
                "display_name": "Top P",
                "type": "number",
                "description": "Controls diversity via nucleus sampling",
                "default": null
            },
            {
                "name": "frequency_penalty",
                "display_name": "Frequency Penalty",
                "type": "number",
                "description": "Reduces repetition (-2 to 2)",
                "default": null
            },
            {
                "name": "presence_penalty",
                "display_name": "Presence Penalty",
                "type": "number",
                "description": "Encourages new topics (-2 to 2)",
                "default": null
            },
            {
                "name": "response_format",
                "display_name": "Response Format",
                "type": "string or object",
                "description": "Output format specification",
                "default": null
            },
            {
                "name": "seed",
                "display_name": "Seed",
                "type": "number",
                "description": "Deterministic outputs",
                "default": null
            },
            {
                "name": "stop",
                "display_name": "Stop",
                "type": "string or array",
                "description": "Custom stop sequences",
                "default": null
            },
            {
                "name": "structured_outputs",
                "display_name": "Structured Outputs",
                "type": "string or object",
                "description": "JSON schema enforcement",
                "default": null
            },
            {
                "name": "tool_choice",
                "display_name": "Tool Choice",
                "type": "string",
                "description": "Tool selection control",
                "default": null
            }
        ],
        "outputs": [
            {
                "name": "content",
                "display_name": "Content",
                "can_stream": true,
                "type": "string",
                "description": "The content portion of the generated response message."
            },
            {
                "name": "message",
                "display_name": "Message",
                "type": "message",
                "can_stream": true,
                "description": "The full generated response message."
            },
            {
                "name": "role",
                "display_name": "Role",
                "can_stream": true,
                "type": "string",
                "description": "Role of the response (usually 'assistant')"
            },
            {
                "name": "tool_calls",
                "display_name": "Tool Calls",
                "type": "array of tools",
                "description": "Tool calls made by the model"
            },
            {
                "name": "finish_reason",
                "display_name": "Finish Reason",
                "type": "string",
                "description": "Why the completion finished"
            },
            {
                "name": "usage",
                "display_name": "Token Usage",
                "type": "object",
                "description": "Token usage statistics"
            },
            {
                "name": "cost_total",
                "display_name": "Total Cost",
                "type": "number",
                "description": "Total cost for processing this request (USD)"
            },
            {
                "name": "cost_itemized",
                "display_name": "Itemized Cost",
                "type": "array",
                "description": "Detailed breakdown of costs"
            }
        ],
        "pricing": {
            "reference": "https://openrouter.ai/models",
            "items": [
                {
                    "key": "input_cost_per_million",
                    "label": "Input Tokens (per 1M)",
                    "cost": 0.25,
                    "currency": "USD"
                },
                {
                    "key": "output_cost_per_million",
                    "label": "Output Tokens (per 1M)",
                    "cost": 0.25,
                    "currency": "USD"
                }
            ]
        },
        "id": "mistralai-mistral-tiny"
    },
    {
        "display_name": "Mistral: Mixtral 8x22B Instruct",
        "description": "Mistral's official instruct fine-tuned version of [Mixtral 8x22B](/models/mistralai/mixtral-8x22b). It uses 39B active parameters out of 141B, offering unparalleled cost efficiency for its size. Its strengths include:\n- strong math, coding, and reasoning\n- large context length (64k)\n- fluency in English, French, Italian, German, and Spanish\n\nSee benchmarks on the launch announcement [here](https://mistral.ai/news/mixtral-8x22b/).\n#moe",
        "category": "llm",
        "provider": "mistralai",
        "accepts_plugins": true,
        "model_id": "mistralai/mixtral-8x22b-instruct",
        "context_length": 65536,
        "supported_parameters": [
            "frequency_penalty",
            "logit_bias",
            "logprobs",
            "max_tokens",
            "presence_penalty",
            "repetition_penalty",
            "response_format",
            "seed",
            "stop",
            "structured_outputs",
            "temperature",
            "tool_choice",
            "tools",
            "top_k",
            "top_logprobs",
            "top_p"
        ],
        "inputs": [
            {
                "name": "system_prompt",
                "display_name": "System Prompt",
                "type": "string or message",
                "description": "System prompt for the model",
                "default": null
            },
            {
                "name": "messages",
                "display_name": "Messages",
                "type": "array of messages or message or string",
                "description": "Array of chat messages",
                "required": true
            },
            {
                "name": "tools",
                "display_name": "Tools",
                "type": "tool",
                "description": "Array of tools to use",
                "default": null,
                "allow_multiple": true
            },
            {
                "name": "temperature",
                "display_name": "Temperature",
                "type": "number",
                "description": "Controls randomness (0-2)",
                "default": null
            },
            {
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "type": "number",
                "description": "Maximum tokens to generate",
                "default": null
            },
            {
                "name": "top_p",
                "display_name": "Top P",
                "type": "number",
                "description": "Controls diversity via nucleus sampling",
                "default": null
            },
            {
                "name": "frequency_penalty",
                "display_name": "Frequency Penalty",
                "type": "number",
                "description": "Reduces repetition (-2 to 2)",
                "default": null
            },
            {
                "name": "presence_penalty",
                "display_name": "Presence Penalty",
                "type": "number",
                "description": "Encourages new topics (-2 to 2)",
                "default": null
            },
            {
                "name": "response_format",
                "display_name": "Response Format",
                "type": "string or object",
                "description": "Output format specification",
                "default": null
            },
            {
                "name": "seed",
                "display_name": "Seed",
                "type": "number",
                "description": "Deterministic outputs",
                "default": null
            },
            {
                "name": "stop",
                "display_name": "Stop",
                "type": "string or array",
                "description": "Custom stop sequences",
                "default": null
            },
            {
                "name": "structured_outputs",
                "display_name": "Structured Outputs",
                "type": "string or object",
                "description": "JSON schema enforcement",
                "default": null
            },
            {
                "name": "tool_choice",
                "display_name": "Tool Choice",
                "type": "string",
                "description": "Tool selection control",
                "default": null
            }
        ],
        "outputs": [
            {
                "name": "content",
                "display_name": "Content",
                "can_stream": true,
                "type": "string",
                "description": "The content portion of the generated response message."
            },
            {
                "name": "message",
                "display_name": "Message",
                "type": "message",
                "can_stream": true,
                "description": "The full generated response message."
            },
            {
                "name": "role",
                "display_name": "Role",
                "can_stream": true,
                "type": "string",
                "description": "Role of the response (usually 'assistant')"
            },
            {
                "name": "tool_calls",
                "display_name": "Tool Calls",
                "type": "array of tools",
                "description": "Tool calls made by the model"
            },
            {
                "name": "finish_reason",
                "display_name": "Finish Reason",
                "type": "string",
                "description": "Why the completion finished"
            },
            {
                "name": "usage",
                "display_name": "Token Usage",
                "type": "object",
                "description": "Token usage statistics"
            },
            {
                "name": "cost_total",
                "display_name": "Total Cost",
                "type": "number",
                "description": "Total cost for processing this request (USD)"
            },
            {
                "name": "cost_itemized",
                "display_name": "Itemized Cost",
                "type": "array",
                "description": "Detailed breakdown of costs"
            },
            {
                "name": "logprobs",
                "display_name": "Log Probabilities",
                "type": "object",
                "description": "Token probabilities and logprobs from the model"
            }
        ],
        "pricing": {
            "reference": "https://openrouter.ai/models",
            "items": [
                {
                    "key": "input_cost_per_million",
                    "label": "Input Tokens (per 1M)",
                    "cost": 0.8999999999999999,
                    "currency": "USD"
                },
                {
                    "key": "output_cost_per_million",
                    "label": "Output Tokens (per 1M)",
                    "cost": 0.8999999999999999,
                    "currency": "USD"
                }
            ]
        },
        "id": "mistralai-mixtral-8x22b-instruct"
    },
    {
        "display_name": "Mistral: Mixtral 8x7B Instruct",
        "description": "Mixtral 8x7B Instruct is a pretrained generative Sparse Mixture of Experts, by Mistral AI, for chat and instruction use. Incorporates 8 experts (feed-forward networks) for a total of 47 billion parameters.\n\nInstruct model fine-tuned by Mistral. #moe",
        "category": "llm",
        "provider": "mistralai",
        "accepts_plugins": true,
        "model_id": "mistralai/mixtral-8x7b-instruct",
        "context_length": 32768,
        "supported_parameters": [
            "frequency_penalty",
            "logit_bias",
            "max_tokens",
            "min_p",
            "presence_penalty",
            "repetition_penalty",
            "response_format",
            "seed",
            "stop",
            "temperature",
            "tool_choice",
            "tools",
            "top_k",
            "top_p"
        ],
        "inputs": [
            {
                "name": "system_prompt",
                "display_name": "System Prompt",
                "type": "string or message",
                "description": "System prompt for the model",
                "default": null
            },
            {
                "name": "messages",
                "display_name": "Messages",
                "type": "array of messages or message or string",
                "description": "Array of chat messages",
                "required": true
            },
            {
                "name": "tools",
                "display_name": "Tools",
                "type": "tool",
                "description": "Array of tools to use",
                "default": null,
                "allow_multiple": true
            },
            {
                "name": "temperature",
                "display_name": "Temperature",
                "type": "number",
                "description": "Controls randomness (0-2)",
                "default": null
            },
            {
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "type": "number",
                "description": "Maximum tokens to generate",
                "default": null
            },
            {
                "name": "top_p",
                "display_name": "Top P",
                "type": "number",
                "description": "Controls diversity via nucleus sampling",
                "default": null
            },
            {
                "name": "frequency_penalty",
                "display_name": "Frequency Penalty",
                "type": "number",
                "description": "Reduces repetition (-2 to 2)",
                "default": null
            },
            {
                "name": "presence_penalty",
                "display_name": "Presence Penalty",
                "type": "number",
                "description": "Encourages new topics (-2 to 2)",
                "default": null
            },
            {
                "name": "response_format",
                "display_name": "Response Format",
                "type": "string or object",
                "description": "Output format specification",
                "default": null
            },
            {
                "name": "seed",
                "display_name": "Seed",
                "type": "number",
                "description": "Deterministic outputs",
                "default": null
            },
            {
                "name": "stop",
                "display_name": "Stop",
                "type": "string or array",
                "description": "Custom stop sequences",
                "default": null
            },
            {
                "name": "tool_choice",
                "display_name": "Tool Choice",
                "type": "string",
                "description": "Tool selection control",
                "default": null
            }
        ],
        "outputs": [
            {
                "name": "content",
                "display_name": "Content",
                "can_stream": true,
                "type": "string",
                "description": "The content portion of the generated response message."
            },
            {
                "name": "message",
                "display_name": "Message",
                "type": "message",
                "can_stream": true,
                "description": "The full generated response message."
            },
            {
                "name": "role",
                "display_name": "Role",
                "can_stream": true,
                "type": "string",
                "description": "Role of the response (usually 'assistant')"
            },
            {
                "name": "tool_calls",
                "display_name": "Tool Calls",
                "type": "array of tools",
                "description": "Tool calls made by the model"
            },
            {
                "name": "finish_reason",
                "display_name": "Finish Reason",
                "type": "string",
                "description": "Why the completion finished"
            },
            {
                "name": "usage",
                "display_name": "Token Usage",
                "type": "object",
                "description": "Token usage statistics"
            },
            {
                "name": "cost_total",
                "display_name": "Total Cost",
                "type": "number",
                "description": "Total cost for processing this request (USD)"
            },
            {
                "name": "cost_itemized",
                "display_name": "Itemized Cost",
                "type": "array",
                "description": "Detailed breakdown of costs"
            }
        ],
        "pricing": {
            "reference": "https://openrouter.ai/models",
            "items": [
                {
                    "key": "input_cost_per_million",
                    "label": "Input Tokens (per 1M)",
                    "cost": 0.08,
                    "currency": "USD"
                },
                {
                    "key": "output_cost_per_million",
                    "label": "Output Tokens (per 1M)",
                    "cost": 0.24,
                    "currency": "USD"
                }
            ]
        },
        "id": "mistralai-mixtral-8x7b-instruct"
    },
    {
        "display_name": "Mistral: Pixtral 12B",
        "description": "The first multi-modal, text+image-to-text model from Mistral AI. Its weights were launched via torrent: https://x.com/mistralai/status/1833758285167722836.",
        "category": "llm",
        "provider": "mistralai",
        "accepts_plugins": true,
        "model_id": "mistralai/pixtral-12b",
        "context_length": 32768,
        "supported_parameters": [
            "frequency_penalty",
            "logit_bias",
            "logprobs",
            "max_tokens",
            "min_p",
            "presence_penalty",
            "repetition_penalty",
            "response_format",
            "seed",
            "stop",
            "structured_outputs",
            "temperature",
            "tool_choice",
            "tools",
            "top_k",
            "top_logprobs",
            "top_p"
        ],
        "inputs": [
            {
                "name": "system_prompt",
                "display_name": "System Prompt",
                "type": "string or message",
                "description": "System prompt for the model",
                "default": null
            },
            {
                "name": "messages",
                "display_name": "Messages",
                "type": "array of messages or message or string",
                "description": "Array of chat messages",
                "required": true
            },
            {
                "name": "tools",
                "display_name": "Tools",
                "type": "tool",
                "description": "Array of tools to use",
                "default": null,
                "allow_multiple": true
            },
            {
                "name": "temperature",
                "display_name": "Temperature",
                "type": "number",
                "description": "Controls randomness (0-2)",
                "default": null
            },
            {
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "type": "number",
                "description": "Maximum tokens to generate",
                "default": null
            },
            {
                "name": "top_p",
                "display_name": "Top P",
                "type": "number",
                "description": "Controls diversity via nucleus sampling",
                "default": null
            },
            {
                "name": "frequency_penalty",
                "display_name": "Frequency Penalty",
                "type": "number",
                "description": "Reduces repetition (-2 to 2)",
                "default": null
            },
            {
                "name": "presence_penalty",
                "display_name": "Presence Penalty",
                "type": "number",
                "description": "Encourages new topics (-2 to 2)",
                "default": null
            },
            {
                "name": "response_format",
                "display_name": "Response Format",
                "type": "string or object",
                "description": "Output format specification",
                "default": null
            },
            {
                "name": "seed",
                "display_name": "Seed",
                "type": "number",
                "description": "Deterministic outputs",
                "default": null
            },
            {
                "name": "stop",
                "display_name": "Stop",
                "type": "string or array",
                "description": "Custom stop sequences",
                "default": null
            },
            {
                "name": "structured_outputs",
                "display_name": "Structured Outputs",
                "type": "string or object",
                "description": "JSON schema enforcement",
                "default": null
            },
            {
                "name": "tool_choice",
                "display_name": "Tool Choice",
                "type": "string",
                "description": "Tool selection control",
                "default": null
            }
        ],
        "outputs": [
            {
                "name": "content",
                "display_name": "Content",
                "can_stream": true,
                "type": "string",
                "description": "The content portion of the generated response message."
            },
            {
                "name": "message",
                "display_name": "Message",
                "type": "message",
                "can_stream": true,
                "description": "The full generated response message."
            },
            {
                "name": "role",
                "display_name": "Role",
                "can_stream": true,
                "type": "string",
                "description": "Role of the response (usually 'assistant')"
            },
            {
                "name": "tool_calls",
                "display_name": "Tool Calls",
                "type": "array of tools",
                "description": "Tool calls made by the model"
            },
            {
                "name": "finish_reason",
                "display_name": "Finish Reason",
                "type": "string",
                "description": "Why the completion finished"
            },
            {
                "name": "usage",
                "display_name": "Token Usage",
                "type": "object",
                "description": "Token usage statistics"
            },
            {
                "name": "cost_total",
                "display_name": "Total Cost",
                "type": "number",
                "description": "Total cost for processing this request (USD)"
            },
            {
                "name": "cost_itemized",
                "display_name": "Itemized Cost",
                "type": "array",
                "description": "Detailed breakdown of costs"
            },
            {
                "name": "logprobs",
                "display_name": "Log Probabilities",
                "type": "object",
                "description": "Token probabilities and logprobs from the model"
            }
        ],
        "pricing": {
            "reference": "https://openrouter.ai/models",
            "items": [
                {
                    "key": "input_cost_per_million",
                    "label": "Input Tokens (per 1M)",
                    "cost": 0.09999999999999999,
                    "currency": "USD"
                },
                {
                    "key": "output_cost_per_million",
                    "label": "Output Tokens (per 1M)",
                    "cost": 0.09999999999999999,
                    "currency": "USD"
                }
            ]
        },
        "id": "mistralai-pixtral-12b"
    },
    {
        "display_name": "Mistral: Pixtral Large 2411",
        "description": "Pixtral Large is a 124B parameter, open-weight, multimodal model built on top of [Mistral Large 2](/mistralai/mistral-large-2411). The model is able to understand documents, charts and natural images.\n\nThe model is available under the Mistral Research License (MRL) for research and educational use, and the Mistral Commercial License for experimentation, testing, and production for commercial purposes.\n\n",
        "category": "llm",
        "provider": "mistralai",
        "accepts_plugins": true,
        "model_id": "mistralai/pixtral-large-2411",
        "context_length": 131072,
        "supported_parameters": [
            "frequency_penalty",
            "max_tokens",
            "presence_penalty",
            "response_format",
            "seed",
            "stop",
            "structured_outputs",
            "temperature",
            "tool_choice",
            "tools",
            "top_p"
        ],
        "inputs": [
            {
                "name": "system_prompt",
                "display_name": "System Prompt",
                "type": "string or message",
                "description": "System prompt for the model",
                "default": null
            },
            {
                "name": "messages",
                "display_name": "Messages",
                "type": "array of messages or message or string",
                "description": "Array of chat messages",
                "required": true
            },
            {
                "name": "tools",
                "display_name": "Tools",
                "type": "tool",
                "description": "Array of tools to use",
                "default": null,
                "allow_multiple": true
            },
            {
                "name": "temperature",
                "display_name": "Temperature",
                "type": "number",
                "description": "Controls randomness (0-2)",
                "default": null
            },
            {
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "type": "number",
                "description": "Maximum tokens to generate",
                "default": null
            },
            {
                "name": "top_p",
                "display_name": "Top P",
                "type": "number",
                "description": "Controls diversity via nucleus sampling",
                "default": null
            },
            {
                "name": "frequency_penalty",
                "display_name": "Frequency Penalty",
                "type": "number",
                "description": "Reduces repetition (-2 to 2)",
                "default": null
            },
            {
                "name": "presence_penalty",
                "display_name": "Presence Penalty",
                "type": "number",
                "description": "Encourages new topics (-2 to 2)",
                "default": null
            },
            {
                "name": "response_format",
                "display_name": "Response Format",
                "type": "string or object",
                "description": "Output format specification",
                "default": null
            },
            {
                "name": "seed",
                "display_name": "Seed",
                "type": "number",
                "description": "Deterministic outputs",
                "default": null
            },
            {
                "name": "stop",
                "display_name": "Stop",
                "type": "string or array",
                "description": "Custom stop sequences",
                "default": null
            },
            {
                "name": "structured_outputs",
                "display_name": "Structured Outputs",
                "type": "string or object",
                "description": "JSON schema enforcement",
                "default": null
            },
            {
                "name": "tool_choice",
                "display_name": "Tool Choice",
                "type": "string",
                "description": "Tool selection control",
                "default": null
            }
        ],
        "outputs": [
            {
                "name": "content",
                "display_name": "Content",
                "can_stream": true,
                "type": "string",
                "description": "The content portion of the generated response message."
            },
            {
                "name": "message",
                "display_name": "Message",
                "type": "message",
                "can_stream": true,
                "description": "The full generated response message."
            },
            {
                "name": "role",
                "display_name": "Role",
                "can_stream": true,
                "type": "string",
                "description": "Role of the response (usually 'assistant')"
            },
            {
                "name": "tool_calls",
                "display_name": "Tool Calls",
                "type": "array of tools",
                "description": "Tool calls made by the model"
            },
            {
                "name": "finish_reason",
                "display_name": "Finish Reason",
                "type": "string",
                "description": "Why the completion finished"
            },
            {
                "name": "usage",
                "display_name": "Token Usage",
                "type": "object",
                "description": "Token usage statistics"
            },
            {
                "name": "cost_total",
                "display_name": "Total Cost",
                "type": "number",
                "description": "Total cost for processing this request (USD)"
            },
            {
                "name": "cost_itemized",
                "display_name": "Itemized Cost",
                "type": "array",
                "description": "Detailed breakdown of costs"
            }
        ],
        "pricing": {
            "reference": "https://openrouter.ai/models",
            "items": [
                {
                    "key": "input_cost_per_million",
                    "label": "Input Tokens (per 1M)",
                    "cost": 2,
                    "currency": "USD"
                },
                {
                    "key": "output_cost_per_million",
                    "label": "Output Tokens (per 1M)",
                    "cost": 6,
                    "currency": "USD"
                }
            ]
        },
        "id": "mistralai-pixtral-large-2411"
    },
    {
        "display_name": "Mode",
        "description": "Finds most frequent value(s) in array of numbers",
        "category": "math",
        "inputs": [
            {
                "name": "numbers",
                "display_name": "Numbers",
                "description": "Array of numbers to find mode of",
                "type": "array",
                "required": true
            }
        ],
        "outputs": [
            {
                "name": "result",
                "display_name": "Result",
                "description": "Mode value(s)",
                "type": "array"
            },
            {
                "name": "frequency",
                "display_name": "Frequency",
                "description": "Number of occurrences of mode value(s)",
                "type": "number"
            }
        ],
        "id": "mode"
    },
    {
        "display_name": "Modulo",
        "description": "Returns remainder of division",
        "category": "math",
        "inputs": [
            {
                "name": "a",
                "display_name": "A",
                "description": "Number to divide",
                "type": "number",
                "required": true
            },
            {
                "name": "b",
                "display_name": "B",
                "description": "Number to divide by",
                "type": "number",
                "required": true
            }
        ],
        "outputs": [
            {
                "name": "result",
                "display_name": "Result",
                "description": "Remainder of A divided by B",
                "type": "number"
            }
        ],
        "id": "modulo"
    },
    {
        "display_name": "Multiply",
        "description": "Multiplies two numbers together",
        "category": "math",
        "inputs": [
            {
                "name": "a",
                "display_name": "A",
                "description": "First number",
                "type": "number",
                "required": true
            },
            {
                "name": "b",
                "display_name": "B",
                "description": "Second number",
                "type": "number",
                "required": true
            }
        ],
        "outputs": [
            {
                "name": "result",
                "display_name": "Result",
                "description": "Product of A and B",
                "type": "number"
            }
        ],
        "id": "multiply"
    },
    {
        "display_name": "NAND Gate",
        "description": "A logic gate that outputs false only if both inputs are true",
        "category": "logic",
        "inputs": [
            {
                "name": "input1",
                "display_name": "Input 1",
                "description": "The first input for the NAND gate",
                "type": "boolean",
                "required": true
            },
            {
                "name": "input2",
                "display_name": "Input 2",
                "description": "The second input for the NAND gate",
                "type": "boolean",
                "required": true
            }
        ],
        "outputs": [
            {
                "name": "value",
                "display_name": "Value",
                "description": "The output value of the NAND gate",
                "type": "boolean"
            }
        ],
        "id": "nand-gate"
    },
    {
        "display_name": "NOR Gate",
        "description": "A logic gate that outputs true only if both inputs are false",
        "category": "logic",
        "inputs": [
            {
                "name": "input1",
                "display_name": "Input 1",
                "description": "The first input for the NOR gate",
                "type": "boolean",
                "required": true
            },
            {
                "name": "input2",
                "display_name": "Input 2",
                "description": "The second input for the NOR gate",
                "type": "boolean",
                "required": true
            }
        ],
        "outputs": [
            {
                "name": "value",
                "display_name": "Value",
                "description": "The output value of the NOR gate",
                "type": "boolean"
            }
        ],
        "id": "nor-gate"
    },
    {
        "display_name": "Not Equals",
        "description": "Checks if two values are not equal, with deep comparison for objects and arrays",
        "icon": "not-equals",
        "category": "logic",
        "inputs": [
            {
                "name": "a",
                "display_name": "Value A",
                "type": "any",
                "description": "First value to compare",
                "required": true
            },
            {
                "name": "b",
                "display_name": "Value B",
                "type": "any",
                "description": "Second value to compare",
                "required": true
            }
        ],
        "outputs": [
            {
                "name": "result",
                "display_name": "Result",
                "type": "boolean",
                "description": "True if values are not equal, false otherwise"
            }
        ],
        "settings": [],
        "id": "not-equals"
    },
    {
        "display_name": "Null Bomb",
        "description": "Randomly returns null/undefined based on probability, useful for testing null handling in flows.",
        "icon": "bomb",
        "category": "testing",
        "is_constant": false,
        "needs_key_from": [],
        "inputs": [
            {
                "name": "value",
                "display_name": "Value",
                "type": "any",
                "description": "The value to potentially nullify.",
                "required": true
            },
            {
                "name": "nullProbability",
                "display_name": "Null Probability",
                "type": "number",
                "description": "Probability of returning null (0.0 = never, 1.0 = always, 0.5 = 50% chance).",
                "required": false
            }
        ],
        "outputs": [
            {
                "name": "result",
                "display_name": "Result",
                "type": "any",
                "description": "Either the original value or null/undefined based on probability."
            }
        ],
        "settings": [],
        "timeout": 3000,
        "retry_limit": 3,
        "id": "null-bomb"
    },
    {
        "display_name": "Number",
        "description": "A simple number node that outputs a constant numeric value",
        "icon": "calculator",
        "category": "math",
        "custom_render_height": 42,
        "is_constant": true,
        "inputs": [
            {
                "name": "value",
                "display_name": "Value",
                "type": "number",
                "description": "Optional value to override the default value.",
                "required": false
            }
        ],
        "outputs": [
            {
                "name": "value",
                "display_name": "Value",
                "type": "number",
                "description": "The numeric value."
            }
        ],
        "settings": [
            {
                "name": "value",
                "display_name": "Value",
                "type": "number",
                "description": "The numeric value to output.",
                "default": 0
            },
            {
                "name": "min",
                "display_name": "Minimum",
                "type": "number",
                "description": "The minimum allowed value for the slider.",
                "default": 0
            },
            {
                "name": "max",
                "display_name": "Maximum",
                "type": "number",
                "description": "The maximum allowed value for the slider.",
                "default": 100
            },
            {
                "name": "step",
                "display_name": "Step",
                "type": "number",
                "description": "The step size for the slider.",
                "default": 1
            }
        ],
        "timeout": 3000,
        "retry_limit": 3,
        "id": "number"
    },
    {
        "display_name": "OpenAI: ChatGPT-4o",
        "description": "OpenAI ChatGPT 4o is continually updated by OpenAI to point to the current version of GPT-4o used by ChatGPT. It therefore differs slightly from the API version of [GPT-4o](/models/openai/gpt-4o) in that it has additional RLHF. It is intended for research and evaluation.\n\nOpenAI notes that this model is not suited for production use-cases as it may be removed or redirected to another model in the future.",
        "category": "llm",
        "provider": "openai",
        "accepts_plugins": false,
        "model_id": "openai/chatgpt-4o-latest",
        "context_length": 128000,
        "supported_parameters": [
            "frequency_penalty",
            "logit_bias",
            "logprobs",
            "max_tokens",
            "presence_penalty",
            "response_format",
            "seed",
            "stop",
            "structured_outputs",
            "temperature",
            "top_logprobs",
            "top_p"
        ],
        "inputs": [
            {
                "name": "prompt",
                "display_name": "Prompt",
                "type": "string",
                "description": "Text prompt for completion",
                "required": true
            },
            {
                "name": "temperature",
                "display_name": "Temperature",
                "type": "number",
                "description": "Controls randomness (0-2)",
                "default": null
            },
            {
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "type": "number",
                "description": "Maximum tokens to generate",
                "default": null
            },
            {
                "name": "top_p",
                "display_name": "Top P",
                "type": "number",
                "description": "Controls diversity via nucleus sampling",
                "default": null
            },
            {
                "name": "frequency_penalty",
                "display_name": "Frequency Penalty",
                "type": "number",
                "description": "Reduces repetition (-2 to 2)",
                "default": null
            },
            {
                "name": "presence_penalty",
                "display_name": "Presence Penalty",
                "type": "number",
                "description": "Encourages new topics (-2 to 2)",
                "default": null
            },
            {
                "name": "response_format",
                "display_name": "Response Format",
                "type": "string or object",
                "description": "Output format specification",
                "default": null
            },
            {
                "name": "seed",
                "display_name": "Seed",
                "type": "number",
                "description": "Deterministic outputs",
                "default": null
            },
            {
                "name": "stop",
                "display_name": "Stop",
                "type": "string or array",
                "description": "Custom stop sequences",
                "default": null
            },
            {
                "name": "structured_outputs",
                "display_name": "Structured Outputs",
                "type": "string or object",
                "description": "JSON schema enforcement",
                "default": null
            }
        ],
        "outputs": [
            {
                "name": "content",
                "display_name": "Content",
                "can_stream": true,
                "type": "string",
                "description": "The generated completion text"
            },
            {
                "name": "finish_reason",
                "display_name": "Finish Reason",
                "type": "string",
                "description": "Why the completion finished"
            },
            {
                "name": "usage",
                "display_name": "Token Usage",
                "type": "object",
                "description": "Token usage statistics"
            },
            {
                "name": "cost_total",
                "display_name": "Total Cost",
                "type": "number",
                "description": "Total cost for processing this request (USD)"
            },
            {
                "name": "cost_itemized",
                "display_name": "Itemized Cost",
                "type": "array",
                "description": "Detailed breakdown of costs"
            },
            {
                "name": "logprobs",
                "display_name": "Log Probabilities",
                "type": "object",
                "description": "Token probabilities and logprobs from the model"
            }
        ],
        "pricing": {
            "reference": "https://openrouter.ai/models",
            "items": [
                {
                    "key": "input_cost_per_million",
                    "label": "Input Tokens (per 1M)",
                    "cost": 5,
                    "currency": "USD"
                },
                {
                    "key": "output_cost_per_million",
                    "label": "Output Tokens (per 1M)",
                    "cost": 15,
                    "currency": "USD"
                }
            ]
        },
        "id": "openai-chatgpt-4o-latest"
    },
    {
        "display_name": "OpenAI: Codex Mini",
        "description": "codex-mini-latest is a fine-tuned version of o4-mini specifically for use in Codex CLI. For direct use in the API, we recommend starting with gpt-4.1.",
        "category": "llm",
        "provider": "openai",
        "accepts_plugins": true,
        "model_id": "openai/codex-mini",
        "context_length": 200000,
        "supported_parameters": [
            "include_reasoning",
            "max_tokens",
            "reasoning",
            "response_format",
            "seed",
            "structured_outputs",
            "tool_choice",
            "tools"
        ],
        "inputs": [
            {
                "name": "system_prompt",
                "display_name": "System Prompt",
                "type": "string or message",
                "description": "System prompt for the model",
                "default": null
            },
            {
                "name": "messages",
                "display_name": "Messages",
                "type": "array of messages or message or string",
                "description": "Array of chat messages",
                "required": true
            },
            {
                "name": "tools",
                "display_name": "Tools",
                "type": "tool",
                "description": "Array of tools to use",
                "default": null,
                "allow_multiple": true
            },
            {
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "type": "number",
                "description": "Maximum tokens to generate",
                "default": null
            },
            {
                "name": "include_reasoning",
                "display_name": "Include Reasoning",
                "type": "boolean",
                "description": "Include reasoning in response",
                "default": null
            },
            {
                "name": "reasoning",
                "display_name": "Reasoning",
                "type": "boolean",
                "description": "Internal reasoning mode",
                "default": null
            },
            {
                "name": "response_format",
                "display_name": "Response Format",
                "type": "string or object",
                "description": "Output format specification",
                "default": null
            },
            {
                "name": "seed",
                "display_name": "Seed",
                "type": "number",
                "description": "Deterministic outputs",
                "default": null
            },
            {
                "name": "structured_outputs",
                "display_name": "Structured Outputs",
                "type": "string or object",
                "description": "JSON schema enforcement",
                "default": null
            },
            {
                "name": "tool_choice",
                "display_name": "Tool Choice",
                "type": "string",
                "description": "Tool selection control",
                "default": null
            }
        ],
        "outputs": [
            {
                "name": "content",
                "display_name": "Content",
                "can_stream": true,
                "type": "string",
                "description": "The content portion of the generated response message."
            },
            {
                "name": "message",
                "display_name": "Message",
                "type": "message",
                "can_stream": true,
                "description": "The full generated response message."
            },
            {
                "name": "role",
                "display_name": "Role",
                "can_stream": true,
                "type": "string",
                "description": "Role of the response (usually 'assistant')"
            },
            {
                "name": "tool_calls",
                "display_name": "Tool Calls",
                "type": "array of tools",
                "description": "Tool calls made by the model"
            },
            {
                "name": "finish_reason",
                "display_name": "Finish Reason",
                "type": "string",
                "description": "Why the completion finished"
            },
            {
                "name": "usage",
                "display_name": "Token Usage",
                "type": "object",
                "description": "Token usage statistics"
            },
            {
                "name": "cost_total",
                "display_name": "Total Cost",
                "type": "number",
                "description": "Total cost for processing this request (USD)"
            },
            {
                "name": "cost_itemized",
                "display_name": "Itemized Cost",
                "type": "array",
                "description": "Detailed breakdown of costs"
            },
            {
                "name": "reasoning",
                "display_name": "Reasoning",
                "type": "string",
                "description": "The detailed reasoning chain from the model"
            },
            {
                "name": "refusal",
                "display_name": "Refusal",
                "type": "string",
                "description": "Model refusal response (if any)"
            }
        ],
        "pricing": {
            "reference": "https://openrouter.ai/models",
            "items": [
                {
                    "key": "input_cost_per_million",
                    "label": "Input Tokens (per 1M)",
                    "cost": 1.5,
                    "currency": "USD"
                },
                {
                    "key": "output_cost_per_million",
                    "label": "Output Tokens (per 1M)",
                    "cost": 6,
                    "currency": "USD"
                }
            ]
        },
        "id": "openai-codex-mini"
    },
    {
        "display_name": "OpenAI: GPT-3.5 Turbo",
        "description": "GPT-3.5 Turbo is OpenAI's fastest model. It can understand and generate natural language or code, and is optimized for chat and traditional completion tasks.\n\nTraining data up to Sep 2021.",
        "category": "llm",
        "provider": "openai",
        "accepts_plugins": true,
        "model_id": "openai/gpt-3.5-turbo",
        "context_length": 16385,
        "supported_parameters": [
            "frequency_penalty",
            "logit_bias",
            "logprobs",
            "max_tokens",
            "presence_penalty",
            "response_format",
            "seed",
            "stop",
            "structured_outputs",
            "temperature",
            "tool_choice",
            "tools",
            "top_logprobs",
            "top_p"
        ],
        "inputs": [
            {
                "name": "system_prompt",
                "display_name": "System Prompt",
                "type": "string or message",
                "description": "System prompt for the model",
                "default": null
            },
            {
                "name": "messages",
                "display_name": "Messages",
                "type": "array of messages or message or string",
                "description": "Array of chat messages",
                "required": true
            },
            {
                "name": "tools",
                "display_name": "Tools",
                "type": "tool",
                "description": "Array of tools to use",
                "default": null,
                "allow_multiple": true
            },
            {
                "name": "temperature",
                "display_name": "Temperature",
                "type": "number",
                "description": "Controls randomness (0-2)",
                "default": null
            },
            {
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "type": "number",
                "description": "Maximum tokens to generate",
                "default": null
            },
            {
                "name": "top_p",
                "display_name": "Top P",
                "type": "number",
                "description": "Controls diversity via nucleus sampling",
                "default": null
            },
            {
                "name": "frequency_penalty",
                "display_name": "Frequency Penalty",
                "type": "number",
                "description": "Reduces repetition (-2 to 2)",
                "default": null
            },
            {
                "name": "presence_penalty",
                "display_name": "Presence Penalty",
                "type": "number",
                "description": "Encourages new topics (-2 to 2)",
                "default": null
            },
            {
                "name": "response_format",
                "display_name": "Response Format",
                "type": "string or object",
                "description": "Output format specification",
                "default": null
            },
            {
                "name": "seed",
                "display_name": "Seed",
                "type": "number",
                "description": "Deterministic outputs",
                "default": null
            },
            {
                "name": "stop",
                "display_name": "Stop",
                "type": "string or array",
                "description": "Custom stop sequences",
                "default": null
            },
            {
                "name": "structured_outputs",
                "display_name": "Structured Outputs",
                "type": "string or object",
                "description": "JSON schema enforcement",
                "default": null
            },
            {
                "name": "tool_choice",
                "display_name": "Tool Choice",
                "type": "string",
                "description": "Tool selection control",
                "default": null
            }
        ],
        "outputs": [
            {
                "name": "content",
                "display_name": "Content",
                "can_stream": true,
                "type": "string",
                "description": "The content portion of the generated response message."
            },
            {
                "name": "message",
                "display_name": "Message",
                "type": "message",
                "can_stream": true,
                "description": "The full generated response message."
            },
            {
                "name": "role",
                "display_name": "Role",
                "can_stream": true,
                "type": "string",
                "description": "Role of the response (usually 'assistant')"
            },
            {
                "name": "tool_calls",
                "display_name": "Tool Calls",
                "type": "array of tools",
                "description": "Tool calls made by the model"
            },
            {
                "name": "finish_reason",
                "display_name": "Finish Reason",
                "type": "string",
                "description": "Why the completion finished"
            },
            {
                "name": "usage",
                "display_name": "Token Usage",
                "type": "object",
                "description": "Token usage statistics"
            },
            {
                "name": "cost_total",
                "display_name": "Total Cost",
                "type": "number",
                "description": "Total cost for processing this request (USD)"
            },
            {
                "name": "cost_itemized",
                "display_name": "Itemized Cost",
                "type": "array",
                "description": "Detailed breakdown of costs"
            },
            {
                "name": "logprobs",
                "display_name": "Log Probabilities",
                "type": "object",
                "description": "Token probabilities and logprobs from the model"
            }
        ],
        "pricing": {
            "reference": "https://openrouter.ai/models",
            "items": [
                {
                    "key": "input_cost_per_million",
                    "label": "Input Tokens (per 1M)",
                    "cost": 0.5,
                    "currency": "USD"
                },
                {
                    "key": "output_cost_per_million",
                    "label": "Output Tokens (per 1M)",
                    "cost": 1.5,
                    "currency": "USD"
                }
            ]
        },
        "id": "openai-gpt-3-5-turbo"
    },
    {
        "display_name": "OpenAI: GPT-3.5 Turbo (older v0613)",
        "description": "GPT-3.5 Turbo is OpenAI's fastest model. It can understand and generate natural language or code, and is optimized for chat and traditional completion tasks.\n\nTraining data up to Sep 2021.",
        "category": "llm",
        "provider": "openai",
        "accepts_plugins": true,
        "model_id": "openai/gpt-3.5-turbo-0613",
        "context_length": 4095,
        "supported_parameters": [
            "frequency_penalty",
            "logit_bias",
            "logprobs",
            "max_tokens",
            "presence_penalty",
            "response_format",
            "seed",
            "stop",
            "structured_outputs",
            "temperature",
            "tool_choice",
            "tools",
            "top_logprobs",
            "top_p"
        ],
        "inputs": [
            {
                "name": "system_prompt",
                "display_name": "System Prompt",
                "type": "string or message",
                "description": "System prompt for the model",
                "default": null
            },
            {
                "name": "messages",
                "display_name": "Messages",
                "type": "array of messages or message or string",
                "description": "Array of chat messages",
                "required": true
            },
            {
                "name": "tools",
                "display_name": "Tools",
                "type": "tool",
                "description": "Array of tools to use",
                "default": null,
                "allow_multiple": true
            },
            {
                "name": "temperature",
                "display_name": "Temperature",
                "type": "number",
                "description": "Controls randomness (0-2)",
                "default": null
            },
            {
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "type": "number",
                "description": "Maximum tokens to generate",
                "default": null
            },
            {
                "name": "top_p",
                "display_name": "Top P",
                "type": "number",
                "description": "Controls diversity via nucleus sampling",
                "default": null
            },
            {
                "name": "frequency_penalty",
                "display_name": "Frequency Penalty",
                "type": "number",
                "description": "Reduces repetition (-2 to 2)",
                "default": null
            },
            {
                "name": "presence_penalty",
                "display_name": "Presence Penalty",
                "type": "number",
                "description": "Encourages new topics (-2 to 2)",
                "default": null
            },
            {
                "name": "response_format",
                "display_name": "Response Format",
                "type": "string or object",
                "description": "Output format specification",
                "default": null
            },
            {
                "name": "seed",
                "display_name": "Seed",
                "type": "number",
                "description": "Deterministic outputs",
                "default": null
            },
            {
                "name": "stop",
                "display_name": "Stop",
                "type": "string or array",
                "description": "Custom stop sequences",
                "default": null
            },
            {
                "name": "structured_outputs",
                "display_name": "Structured Outputs",
                "type": "string or object",
                "description": "JSON schema enforcement",
                "default": null
            },
            {
                "name": "tool_choice",
                "display_name": "Tool Choice",
                "type": "string",
                "description": "Tool selection control",
                "default": null
            }
        ],
        "outputs": [
            {
                "name": "content",
                "display_name": "Content",
                "can_stream": true,
                "type": "string",
                "description": "The content portion of the generated response message."
            },
            {
                "name": "message",
                "display_name": "Message",
                "type": "message",
                "can_stream": true,
                "description": "The full generated response message."
            },
            {
                "name": "role",
                "display_name": "Role",
                "can_stream": true,
                "type": "string",
                "description": "Role of the response (usually 'assistant')"
            },
            {
                "name": "tool_calls",
                "display_name": "Tool Calls",
                "type": "array of tools",
                "description": "Tool calls made by the model"
            },
            {
                "name": "finish_reason",
                "display_name": "Finish Reason",
                "type": "string",
                "description": "Why the completion finished"
            },
            {
                "name": "usage",
                "display_name": "Token Usage",
                "type": "object",
                "description": "Token usage statistics"
            },
            {
                "name": "cost_total",
                "display_name": "Total Cost",
                "type": "number",
                "description": "Total cost for processing this request (USD)"
            },
            {
                "name": "cost_itemized",
                "display_name": "Itemized Cost",
                "type": "array",
                "description": "Detailed breakdown of costs"
            },
            {
                "name": "logprobs",
                "display_name": "Log Probabilities",
                "type": "object",
                "description": "Token probabilities and logprobs from the model"
            }
        ],
        "pricing": {
            "reference": "https://openrouter.ai/models",
            "items": [
                {
                    "key": "input_cost_per_million",
                    "label": "Input Tokens (per 1M)",
                    "cost": 1,
                    "currency": "USD"
                },
                {
                    "key": "output_cost_per_million",
                    "label": "Output Tokens (per 1M)",
                    "cost": 2,
                    "currency": "USD"
                }
            ]
        },
        "id": "openai-gpt-3-5-turbo-0613"
    },
    {
        "display_name": "OpenAI: GPT-3.5 Turbo 16k",
        "description": "This model offers four times the context length of gpt-3.5-turbo, allowing it to support approximately 20 pages of text in a single request at a higher cost. Training data: up to Sep 2021.",
        "category": "llm",
        "provider": "openai",
        "accepts_plugins": true,
        "model_id": "openai/gpt-3.5-turbo-16k",
        "context_length": 16385,
        "supported_parameters": [
            "frequency_penalty",
            "logit_bias",
            "logprobs",
            "max_tokens",
            "presence_penalty",
            "response_format",
            "seed",
            "stop",
            "structured_outputs",
            "temperature",
            "tool_choice",
            "tools",
            "top_logprobs",
            "top_p"
        ],
        "inputs": [
            {
                "name": "system_prompt",
                "display_name": "System Prompt",
                "type": "string or message",
                "description": "System prompt for the model",
                "default": null
            },
            {
                "name": "messages",
                "display_name": "Messages",
                "type": "array of messages or message or string",
                "description": "Array of chat messages",
                "required": true
            },
            {
                "name": "tools",
                "display_name": "Tools",
                "type": "tool",
                "description": "Array of tools to use",
                "default": null,
                "allow_multiple": true
            },
            {
                "name": "temperature",
                "display_name": "Temperature",
                "type": "number",
                "description": "Controls randomness (0-2)",
                "default": null
            },
            {
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "type": "number",
                "description": "Maximum tokens to generate",
                "default": null
            },
            {
                "name": "top_p",
                "display_name": "Top P",
                "type": "number",
                "description": "Controls diversity via nucleus sampling",
                "default": null
            },
            {
                "name": "frequency_penalty",
                "display_name": "Frequency Penalty",
                "type": "number",
                "description": "Reduces repetition (-2 to 2)",
                "default": null
            },
            {
                "name": "presence_penalty",
                "display_name": "Presence Penalty",
                "type": "number",
                "description": "Encourages new topics (-2 to 2)",
                "default": null
            },
            {
                "name": "response_format",
                "display_name": "Response Format",
                "type": "string or object",
                "description": "Output format specification",
                "default": null
            },
            {
                "name": "seed",
                "display_name": "Seed",
                "type": "number",
                "description": "Deterministic outputs",
                "default": null
            },
            {
                "name": "stop",
                "display_name": "Stop",
                "type": "string or array",
                "description": "Custom stop sequences",
                "default": null
            },
            {
                "name": "structured_outputs",
                "display_name": "Structured Outputs",
                "type": "string or object",
                "description": "JSON schema enforcement",
                "default": null
            },
            {
                "name": "tool_choice",
                "display_name": "Tool Choice",
                "type": "string",
                "description": "Tool selection control",
                "default": null
            }
        ],
        "outputs": [
            {
                "name": "content",
                "display_name": "Content",
                "can_stream": true,
                "type": "string",
                "description": "The content portion of the generated response message."
            },
            {
                "name": "message",
                "display_name": "Message",
                "type": "message",
                "can_stream": true,
                "description": "The full generated response message."
            },
            {
                "name": "role",
                "display_name": "Role",
                "can_stream": true,
                "type": "string",
                "description": "Role of the response (usually 'assistant')"
            },
            {
                "name": "tool_calls",
                "display_name": "Tool Calls",
                "type": "array of tools",
                "description": "Tool calls made by the model"
            },
            {
                "name": "finish_reason",
                "display_name": "Finish Reason",
                "type": "string",
                "description": "Why the completion finished"
            },
            {
                "name": "usage",
                "display_name": "Token Usage",
                "type": "object",
                "description": "Token usage statistics"
            },
            {
                "name": "cost_total",
                "display_name": "Total Cost",
                "type": "number",
                "description": "Total cost for processing this request (USD)"
            },
            {
                "name": "cost_itemized",
                "display_name": "Itemized Cost",
                "type": "array",
                "description": "Detailed breakdown of costs"
            },
            {
                "name": "logprobs",
                "display_name": "Log Probabilities",
                "type": "object",
                "description": "Token probabilities and logprobs from the model"
            }
        ],
        "pricing": {
            "reference": "https://openrouter.ai/models",
            "items": [
                {
                    "key": "input_cost_per_million",
                    "label": "Input Tokens (per 1M)",
                    "cost": 3,
                    "currency": "USD"
                },
                {
                    "key": "output_cost_per_million",
                    "label": "Output Tokens (per 1M)",
                    "cost": 4,
                    "currency": "USD"
                }
            ]
        },
        "id": "openai-gpt-3-5-turbo-16k"
    },
    {
        "display_name": "OpenAI: GPT-3.5 Turbo Instruct",
        "description": "This model is a variant of GPT-3.5 Turbo tuned for instructional prompts and omitting chat-related optimizations. Training data: up to Sep 2021.",
        "category": "llm",
        "provider": "openai",
        "accepts_plugins": false,
        "model_id": "openai/gpt-3.5-turbo-instruct",
        "context_length": 4095,
        "supported_parameters": [
            "frequency_penalty",
            "logit_bias",
            "logprobs",
            "max_tokens",
            "presence_penalty",
            "response_format",
            "seed",
            "stop",
            "structured_outputs",
            "temperature",
            "top_logprobs",
            "top_p"
        ],
        "inputs": [
            {
                "name": "system_prompt",
                "display_name": "System Prompt",
                "type": "string or message",
                "description": "System prompt for the model",
                "default": null
            },
            {
                "name": "messages",
                "display_name": "Messages",
                "type": "array of messages or message or string",
                "description": "Array of chat messages",
                "required": true
            },
            {
                "name": "temperature",
                "display_name": "Temperature",
                "type": "number",
                "description": "Controls randomness (0-2)",
                "default": null
            },
            {
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "type": "number",
                "description": "Maximum tokens to generate",
                "default": null
            },
            {
                "name": "top_p",
                "display_name": "Top P",
                "type": "number",
                "description": "Controls diversity via nucleus sampling",
                "default": null
            },
            {
                "name": "frequency_penalty",
                "display_name": "Frequency Penalty",
                "type": "number",
                "description": "Reduces repetition (-2 to 2)",
                "default": null
            },
            {
                "name": "presence_penalty",
                "display_name": "Presence Penalty",
                "type": "number",
                "description": "Encourages new topics (-2 to 2)",
                "default": null
            },
            {
                "name": "response_format",
                "display_name": "Response Format",
                "type": "string or object",
                "description": "Output format specification",
                "default": null
            },
            {
                "name": "seed",
                "display_name": "Seed",
                "type": "number",
                "description": "Deterministic outputs",
                "default": null
            },
            {
                "name": "stop",
                "display_name": "Stop",
                "type": "string or array",
                "description": "Custom stop sequences",
                "default": null
            },
            {
                "name": "structured_outputs",
                "display_name": "Structured Outputs",
                "type": "string or object",
                "description": "JSON schema enforcement",
                "default": null
            }
        ],
        "outputs": [
            {
                "name": "content",
                "display_name": "Content",
                "can_stream": true,
                "type": "string",
                "description": "The content portion of the generated response message."
            },
            {
                "name": "message",
                "display_name": "Message",
                "type": "message",
                "can_stream": true,
                "description": "The full generated response message."
            },
            {
                "name": "role",
                "display_name": "Role",
                "can_stream": true,
                "type": "string",
                "description": "Role of the response (usually 'assistant')"
            },
            {
                "name": "finish_reason",
                "display_name": "Finish Reason",
                "type": "string",
                "description": "Why the completion finished"
            },
            {
                "name": "usage",
                "display_name": "Token Usage",
                "type": "object",
                "description": "Token usage statistics"
            },
            {
                "name": "cost_total",
                "display_name": "Total Cost",
                "type": "number",
                "description": "Total cost for processing this request (USD)"
            },
            {
                "name": "cost_itemized",
                "display_name": "Itemized Cost",
                "type": "array",
                "description": "Detailed breakdown of costs"
            },
            {
                "name": "logprobs",
                "display_name": "Log Probabilities",
                "type": "object",
                "description": "Token probabilities and logprobs from the model"
            }
        ],
        "pricing": {
            "reference": "https://openrouter.ai/models",
            "items": [
                {
                    "key": "input_cost_per_million",
                    "label": "Input Tokens (per 1M)",
                    "cost": 1.5,
                    "currency": "USD"
                },
                {
                    "key": "output_cost_per_million",
                    "label": "Output Tokens (per 1M)",
                    "cost": 2,
                    "currency": "USD"
                }
            ]
        },
        "id": "openai-gpt-3-5-turbo-instruct"
    },
    {
        "display_name": "OpenAI: GPT-4",
        "description": "OpenAI's flagship model, GPT-4 is a large-scale multimodal language model capable of solving difficult problems with greater accuracy than previous models due to its broader general knowledge and advanced reasoning capabilities. Training data: up to Sep 2021.",
        "category": "llm",
        "provider": "openai",
        "accepts_plugins": true,
        "model_id": "openai/gpt-4",
        "context_length": 8191,
        "supported_parameters": [
            "frequency_penalty",
            "logit_bias",
            "logprobs",
            "max_tokens",
            "presence_penalty",
            "response_format",
            "seed",
            "stop",
            "structured_outputs",
            "temperature",
            "tool_choice",
            "tools",
            "top_logprobs",
            "top_p"
        ],
        "inputs": [
            {
                "name": "system_prompt",
                "display_name": "System Prompt",
                "type": "string or message",
                "description": "System prompt for the model",
                "default": null
            },
            {
                "name": "messages",
                "display_name": "Messages",
                "type": "array of messages or message or string",
                "description": "Array of chat messages",
                "required": true
            },
            {
                "name": "tools",
                "display_name": "Tools",
                "type": "tool",
                "description": "Array of tools to use",
                "default": null,
                "allow_multiple": true
            },
            {
                "name": "temperature",
                "display_name": "Temperature",
                "type": "number",
                "description": "Controls randomness (0-2)",
                "default": null
            },
            {
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "type": "number",
                "description": "Maximum tokens to generate",
                "default": null
            },
            {
                "name": "top_p",
                "display_name": "Top P",
                "type": "number",
                "description": "Controls diversity via nucleus sampling",
                "default": null
            },
            {
                "name": "frequency_penalty",
                "display_name": "Frequency Penalty",
                "type": "number",
                "description": "Reduces repetition (-2 to 2)",
                "default": null
            },
            {
                "name": "presence_penalty",
                "display_name": "Presence Penalty",
                "type": "number",
                "description": "Encourages new topics (-2 to 2)",
                "default": null
            },
            {
                "name": "response_format",
                "display_name": "Response Format",
                "type": "string or object",
                "description": "Output format specification",
                "default": null
            },
            {
                "name": "seed",
                "display_name": "Seed",
                "type": "number",
                "description": "Deterministic outputs",
                "default": null
            },
            {
                "name": "stop",
                "display_name": "Stop",
                "type": "string or array",
                "description": "Custom stop sequences",
                "default": null
            },
            {
                "name": "structured_outputs",
                "display_name": "Structured Outputs",
                "type": "string or object",
                "description": "JSON schema enforcement",
                "default": null
            },
            {
                "name": "tool_choice",
                "display_name": "Tool Choice",
                "type": "string",
                "description": "Tool selection control",
                "default": null
            }
        ],
        "outputs": [
            {
                "name": "content",
                "display_name": "Content",
                "can_stream": true,
                "type": "string",
                "description": "The content portion of the generated response message."
            },
            {
                "name": "message",
                "display_name": "Message",
                "type": "message",
                "can_stream": true,
                "description": "The full generated response message."
            },
            {
                "name": "role",
                "display_name": "Role",
                "can_stream": true,
                "type": "string",
                "description": "Role of the response (usually 'assistant')"
            },
            {
                "name": "tool_calls",
                "display_name": "Tool Calls",
                "type": "array of tools",
                "description": "Tool calls made by the model"
            },
            {
                "name": "finish_reason",
                "display_name": "Finish Reason",
                "type": "string",
                "description": "Why the completion finished"
            },
            {
                "name": "usage",
                "display_name": "Token Usage",
                "type": "object",
                "description": "Token usage statistics"
            },
            {
                "name": "cost_total",
                "display_name": "Total Cost",
                "type": "number",
                "description": "Total cost for processing this request (USD)"
            },
            {
                "name": "cost_itemized",
                "display_name": "Itemized Cost",
                "type": "array",
                "description": "Detailed breakdown of costs"
            },
            {
                "name": "logprobs",
                "display_name": "Log Probabilities",
                "type": "object",
                "description": "Token probabilities and logprobs from the model"
            }
        ],
        "pricing": {
            "reference": "https://openrouter.ai/models",
            "items": [
                {
                    "key": "input_cost_per_million",
                    "label": "Input Tokens (per 1M)",
                    "cost": 30,
                    "currency": "USD"
                },
                {
                    "key": "output_cost_per_million",
                    "label": "Output Tokens (per 1M)",
                    "cost": 60,
                    "currency": "USD"
                }
            ]
        },
        "id": "openai-gpt-4"
    },
    {
        "display_name": "OpenAI: GPT-4 (older v0314)",
        "description": "GPT-4-0314 is the first version of GPT-4 released, with a context length of 8,192 tokens, and was supported until June 14. Training data: up to Sep 2021.",
        "category": "llm",
        "provider": "openai",
        "accepts_plugins": true,
        "model_id": "openai/gpt-4-0314",
        "context_length": 8191,
        "supported_parameters": [
            "frequency_penalty",
            "logit_bias",
            "logprobs",
            "max_tokens",
            "presence_penalty",
            "response_format",
            "seed",
            "stop",
            "structured_outputs",
            "temperature",
            "tool_choice",
            "tools",
            "top_logprobs",
            "top_p"
        ],
        "inputs": [
            {
                "name": "system_prompt",
                "display_name": "System Prompt",
                "type": "string or message",
                "description": "System prompt for the model",
                "default": null
            },
            {
                "name": "messages",
                "display_name": "Messages",
                "type": "array of messages or message or string",
                "description": "Array of chat messages",
                "required": true
            },
            {
                "name": "tools",
                "display_name": "Tools",
                "type": "tool",
                "description": "Array of tools to use",
                "default": null,
                "allow_multiple": true
            },
            {
                "name": "temperature",
                "display_name": "Temperature",
                "type": "number",
                "description": "Controls randomness (0-2)",
                "default": null
            },
            {
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "type": "number",
                "description": "Maximum tokens to generate",
                "default": null
            },
            {
                "name": "top_p",
                "display_name": "Top P",
                "type": "number",
                "description": "Controls diversity via nucleus sampling",
                "default": null
            },
            {
                "name": "frequency_penalty",
                "display_name": "Frequency Penalty",
                "type": "number",
                "description": "Reduces repetition (-2 to 2)",
                "default": null
            },
            {
                "name": "presence_penalty",
                "display_name": "Presence Penalty",
                "type": "number",
                "description": "Encourages new topics (-2 to 2)",
                "default": null
            },
            {
                "name": "response_format",
                "display_name": "Response Format",
                "type": "string or object",
                "description": "Output format specification",
                "default": null
            },
            {
                "name": "seed",
                "display_name": "Seed",
                "type": "number",
                "description": "Deterministic outputs",
                "default": null
            },
            {
                "name": "stop",
                "display_name": "Stop",
                "type": "string or array",
                "description": "Custom stop sequences",
                "default": null
            },
            {
                "name": "structured_outputs",
                "display_name": "Structured Outputs",
                "type": "string or object",
                "description": "JSON schema enforcement",
                "default": null
            },
            {
                "name": "tool_choice",
                "display_name": "Tool Choice",
                "type": "string",
                "description": "Tool selection control",
                "default": null
            }
        ],
        "outputs": [
            {
                "name": "content",
                "display_name": "Content",
                "can_stream": true,
                "type": "string",
                "description": "The content portion of the generated response message."
            },
            {
                "name": "message",
                "display_name": "Message",
                "type": "message",
                "can_stream": true,
                "description": "The full generated response message."
            },
            {
                "name": "role",
                "display_name": "Role",
                "can_stream": true,
                "type": "string",
                "description": "Role of the response (usually 'assistant')"
            },
            {
                "name": "tool_calls",
                "display_name": "Tool Calls",
                "type": "array of tools",
                "description": "Tool calls made by the model"
            },
            {
                "name": "finish_reason",
                "display_name": "Finish Reason",
                "type": "string",
                "description": "Why the completion finished"
            },
            {
                "name": "usage",
                "display_name": "Token Usage",
                "type": "object",
                "description": "Token usage statistics"
            },
            {
                "name": "cost_total",
                "display_name": "Total Cost",
                "type": "number",
                "description": "Total cost for processing this request (USD)"
            },
            {
                "name": "cost_itemized",
                "display_name": "Itemized Cost",
                "type": "array",
                "description": "Detailed breakdown of costs"
            },
            {
                "name": "logprobs",
                "display_name": "Log Probabilities",
                "type": "object",
                "description": "Token probabilities and logprobs from the model"
            }
        ],
        "pricing": {
            "reference": "https://openrouter.ai/models",
            "items": [
                {
                    "key": "input_cost_per_million",
                    "label": "Input Tokens (per 1M)",
                    "cost": 30,
                    "currency": "USD"
                },
                {
                    "key": "output_cost_per_million",
                    "label": "Output Tokens (per 1M)",
                    "cost": 60,
                    "currency": "USD"
                }
            ]
        },
        "id": "openai-gpt-4-0314"
    },
    {
        "display_name": "OpenAI: GPT-4.1",
        "description": "GPT-4.1 is a flagship large language model optimized for advanced instruction following, real-world software engineering, and long-context reasoning. It supports a 1 million token context window and outperforms GPT-4o and GPT-4.5 across coding (54.6% SWE-bench Verified), instruction compliance (87.4% IFEval), and multimodal understanding benchmarks. It is tuned for precise code diffs, agent reliability, and high recall in large document contexts, making it ideal for agents, IDE tooling, and enterprise knowledge retrieval.",
        "category": "llm",
        "provider": "openai",
        "accepts_plugins": true,
        "model_id": "openai/gpt-4.1",
        "context_length": 1047576,
        "supported_parameters": [
            "frequency_penalty",
            "logit_bias",
            "logprobs",
            "max_tokens",
            "presence_penalty",
            "response_format",
            "seed",
            "stop",
            "structured_outputs",
            "temperature",
            "tool_choice",
            "tools",
            "top_logprobs",
            "top_p",
            "web_search_options"
        ],
        "inputs": [
            {
                "name": "system_prompt",
                "display_name": "System Prompt",
                "type": "string or message",
                "description": "System prompt for the model",
                "default": null
            },
            {
                "name": "messages",
                "display_name": "Messages",
                "type": "array of messages or message or string",
                "description": "Array of chat messages",
                "required": true
            },
            {
                "name": "tools",
                "display_name": "Tools",
                "type": "tool",
                "description": "Array of tools to use",
                "default": null,
                "allow_multiple": true
            },
            {
                "name": "temperature",
                "display_name": "Temperature",
                "type": "number",
                "description": "Controls randomness (0-2)",
                "default": null
            },
            {
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "type": "number",
                "description": "Maximum tokens to generate",
                "default": null
            },
            {
                "name": "top_p",
                "display_name": "Top P",
                "type": "number",
                "description": "Controls diversity via nucleus sampling",
                "default": null
            },
            {
                "name": "frequency_penalty",
                "display_name": "Frequency Penalty",
                "type": "number",
                "description": "Reduces repetition (-2 to 2)",
                "default": null
            },
            {
                "name": "presence_penalty",
                "display_name": "Presence Penalty",
                "type": "number",
                "description": "Encourages new topics (-2 to 2)",
                "default": null
            },
            {
                "name": "response_format",
                "display_name": "Response Format",
                "type": "string or object",
                "description": "Output format specification",
                "default": null
            },
            {
                "name": "seed",
                "display_name": "Seed",
                "type": "number",
                "description": "Deterministic outputs",
                "default": null
            },
            {
                "name": "stop",
                "display_name": "Stop",
                "type": "string or array",
                "description": "Custom stop sequences",
                "default": null
            },
            {
                "name": "structured_outputs",
                "display_name": "Structured Outputs",
                "type": "string or object",
                "description": "JSON schema enforcement",
                "default": null
            },
            {
                "name": "tool_choice",
                "display_name": "Tool Choice",
                "type": "string",
                "description": "Tool selection control",
                "default": null
            }
        ],
        "outputs": [
            {
                "name": "content",
                "display_name": "Content",
                "can_stream": true,
                "type": "string",
                "description": "The content portion of the generated response message."
            },
            {
                "name": "message",
                "display_name": "Message",
                "type": "message",
                "can_stream": true,
                "description": "The full generated response message."
            },
            {
                "name": "role",
                "display_name": "Role",
                "can_stream": true,
                "type": "string",
                "description": "Role of the response (usually 'assistant')"
            },
            {
                "name": "tool_calls",
                "display_name": "Tool Calls",
                "type": "array of tools",
                "description": "Tool calls made by the model"
            },
            {
                "name": "finish_reason",
                "display_name": "Finish Reason",
                "type": "string",
                "description": "Why the completion finished"
            },
            {
                "name": "usage",
                "display_name": "Token Usage",
                "type": "object",
                "description": "Token usage statistics"
            },
            {
                "name": "cost_total",
                "display_name": "Total Cost",
                "type": "number",
                "description": "Total cost for processing this request (USD)"
            },
            {
                "name": "cost_itemized",
                "display_name": "Itemized Cost",
                "type": "array",
                "description": "Detailed breakdown of costs"
            },
            {
                "name": "annotations",
                "display_name": "Annotations",
                "type": "array",
                "description": "Array of annotations and citations from the response"
            },
            {
                "name": "citations",
                "display_name": "Citations",
                "type": "array",
                "description": "Array of citation URLs used by the model"
            },
            {
                "name": "logprobs",
                "display_name": "Log Probabilities",
                "type": "object",
                "description": "Token probabilities and logprobs from the model"
            }
        ],
        "pricing": {
            "reference": "https://openrouter.ai/models",
            "items": [
                {
                    "key": "input_cost_per_million",
                    "label": "Input Tokens (per 1M)",
                    "cost": 2,
                    "currency": "USD"
                },
                {
                    "key": "output_cost_per_million",
                    "label": "Output Tokens (per 1M)",
                    "cost": 8,
                    "currency": "USD"
                }
            ]
        },
        "id": "openai-gpt-4-1"
    },
    {
        "display_name": "OpenAI: GPT-4.1 Mini",
        "description": "GPT-4.1 Mini is a mid-sized model delivering performance competitive with GPT-4o at substantially lower latency and cost. It retains a 1 million token context window and scores 45.1% on hard instruction evals, 35.8% on MultiChallenge, and 84.1% on IFEval. Mini also shows strong coding ability (e.g., 31.6% on Aider’s polyglot diff benchmark) and vision understanding, making it suitable for interactive applications with tight performance constraints.",
        "category": "llm",
        "provider": "openai",
        "accepts_plugins": true,
        "model_id": "openai/gpt-4.1-mini",
        "context_length": 1047576,
        "supported_parameters": [
            "frequency_penalty",
            "logit_bias",
            "logprobs",
            "max_tokens",
            "presence_penalty",
            "response_format",
            "seed",
            "stop",
            "structured_outputs",
            "temperature",
            "tool_choice",
            "tools",
            "top_logprobs",
            "top_p",
            "web_search_options"
        ],
        "inputs": [
            {
                "name": "system_prompt",
                "display_name": "System Prompt",
                "type": "string or message",
                "description": "System prompt for the model",
                "default": null
            },
            {
                "name": "messages",
                "display_name": "Messages",
                "type": "array of messages or message or string",
                "description": "Array of chat messages",
                "required": true
            },
            {
                "name": "tools",
                "display_name": "Tools",
                "type": "tool",
                "description": "Array of tools to use",
                "default": null,
                "allow_multiple": true
            },
            {
                "name": "temperature",
                "display_name": "Temperature",
                "type": "number",
                "description": "Controls randomness (0-2)",
                "default": null
            },
            {
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "type": "number",
                "description": "Maximum tokens to generate",
                "default": null
            },
            {
                "name": "top_p",
                "display_name": "Top P",
                "type": "number",
                "description": "Controls diversity via nucleus sampling",
                "default": null
            },
            {
                "name": "frequency_penalty",
                "display_name": "Frequency Penalty",
                "type": "number",
                "description": "Reduces repetition (-2 to 2)",
                "default": null
            },
            {
                "name": "presence_penalty",
                "display_name": "Presence Penalty",
                "type": "number",
                "description": "Encourages new topics (-2 to 2)",
                "default": null
            },
            {
                "name": "response_format",
                "display_name": "Response Format",
                "type": "string or object",
                "description": "Output format specification",
                "default": null
            },
            {
                "name": "seed",
                "display_name": "Seed",
                "type": "number",
                "description": "Deterministic outputs",
                "default": null
            },
            {
                "name": "stop",
                "display_name": "Stop",
                "type": "string or array",
                "description": "Custom stop sequences",
                "default": null
            },
            {
                "name": "structured_outputs",
                "display_name": "Structured Outputs",
                "type": "string or object",
                "description": "JSON schema enforcement",
                "default": null
            },
            {
                "name": "tool_choice",
                "display_name": "Tool Choice",
                "type": "string",
                "description": "Tool selection control",
                "default": null
            }
        ],
        "outputs": [
            {
                "name": "content",
                "display_name": "Content",
                "can_stream": true,
                "type": "string",
                "description": "The content portion of the generated response message."
            },
            {
                "name": "message",
                "display_name": "Message",
                "type": "message",
                "can_stream": true,
                "description": "The full generated response message."
            },
            {
                "name": "role",
                "display_name": "Role",
                "can_stream": true,
                "type": "string",
                "description": "Role of the response (usually 'assistant')"
            },
            {
                "name": "tool_calls",
                "display_name": "Tool Calls",
                "type": "array of tools",
                "description": "Tool calls made by the model"
            },
            {
                "name": "finish_reason",
                "display_name": "Finish Reason",
                "type": "string",
                "description": "Why the completion finished"
            },
            {
                "name": "usage",
                "display_name": "Token Usage",
                "type": "object",
                "description": "Token usage statistics"
            },
            {
                "name": "cost_total",
                "display_name": "Total Cost",
                "type": "number",
                "description": "Total cost for processing this request (USD)"
            },
            {
                "name": "cost_itemized",
                "display_name": "Itemized Cost",
                "type": "array",
                "description": "Detailed breakdown of costs"
            },
            {
                "name": "annotations",
                "display_name": "Annotations",
                "type": "array",
                "description": "Array of annotations and citations from the response"
            },
            {
                "name": "citations",
                "display_name": "Citations",
                "type": "array",
                "description": "Array of citation URLs used by the model"
            },
            {
                "name": "logprobs",
                "display_name": "Log Probabilities",
                "type": "object",
                "description": "Token probabilities and logprobs from the model"
            }
        ],
        "pricing": {
            "reference": "https://openrouter.ai/models",
            "items": [
                {
                    "key": "input_cost_per_million",
                    "label": "Input Tokens (per 1M)",
                    "cost": 0.39999999999999997,
                    "currency": "USD"
                },
                {
                    "key": "output_cost_per_million",
                    "label": "Output Tokens (per 1M)",
                    "cost": 1.5999999999999999,
                    "currency": "USD"
                }
            ]
        },
        "id": "openai-gpt-4-1-mini"
    },
    {
        "display_name": "OpenAI: GPT-4.1 Nano",
        "description": "For tasks that demand low latency, GPT‑4.1 nano is the fastest and cheapest model in the GPT-4.1 series. It delivers exceptional performance at a small size with its 1 million token context window, and scores 80.1% on MMLU, 50.3% on GPQA, and 9.8% on Aider polyglot coding – even higher than GPT‑4o mini. It’s ideal for tasks like classification or autocompletion.",
        "category": "llm",
        "provider": "openai",
        "accepts_plugins": true,
        "model_id": "openai/gpt-4.1-nano",
        "context_length": 1047576,
        "supported_parameters": [
            "frequency_penalty",
            "logit_bias",
            "logprobs",
            "max_tokens",
            "presence_penalty",
            "response_format",
            "seed",
            "stop",
            "structured_outputs",
            "temperature",
            "tool_choice",
            "tools",
            "top_logprobs",
            "top_p"
        ],
        "inputs": [
            {
                "name": "system_prompt",
                "display_name": "System Prompt",
                "type": "string or message",
                "description": "System prompt for the model",
                "default": null
            },
            {
                "name": "messages",
                "display_name": "Messages",
                "type": "array of messages or message or string",
                "description": "Array of chat messages",
                "required": true
            },
            {
                "name": "tools",
                "display_name": "Tools",
                "type": "tool",
                "description": "Array of tools to use",
                "default": null,
                "allow_multiple": true
            },
            {
                "name": "temperature",
                "display_name": "Temperature",
                "type": "number",
                "description": "Controls randomness (0-2)",
                "default": null
            },
            {
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "type": "number",
                "description": "Maximum tokens to generate",
                "default": null
            },
            {
                "name": "top_p",
                "display_name": "Top P",
                "type": "number",
                "description": "Controls diversity via nucleus sampling",
                "default": null
            },
            {
                "name": "frequency_penalty",
                "display_name": "Frequency Penalty",
                "type": "number",
                "description": "Reduces repetition (-2 to 2)",
                "default": null
            },
            {
                "name": "presence_penalty",
                "display_name": "Presence Penalty",
                "type": "number",
                "description": "Encourages new topics (-2 to 2)",
                "default": null
            },
            {
                "name": "response_format",
                "display_name": "Response Format",
                "type": "string or object",
                "description": "Output format specification",
                "default": null
            },
            {
                "name": "seed",
                "display_name": "Seed",
                "type": "number",
                "description": "Deterministic outputs",
                "default": null
            },
            {
                "name": "stop",
                "display_name": "Stop",
                "type": "string or array",
                "description": "Custom stop sequences",
                "default": null
            },
            {
                "name": "structured_outputs",
                "display_name": "Structured Outputs",
                "type": "string or object",
                "description": "JSON schema enforcement",
                "default": null
            },
            {
                "name": "tool_choice",
                "display_name": "Tool Choice",
                "type": "string",
                "description": "Tool selection control",
                "default": null
            }
        ],
        "outputs": [
            {
                "name": "content",
                "display_name": "Content",
                "can_stream": true,
                "type": "string",
                "description": "The content portion of the generated response message."
            },
            {
                "name": "message",
                "display_name": "Message",
                "type": "message",
                "can_stream": true,
                "description": "The full generated response message."
            },
            {
                "name": "role",
                "display_name": "Role",
                "can_stream": true,
                "type": "string",
                "description": "Role of the response (usually 'assistant')"
            },
            {
                "name": "tool_calls",
                "display_name": "Tool Calls",
                "type": "array of tools",
                "description": "Tool calls made by the model"
            },
            {
                "name": "finish_reason",
                "display_name": "Finish Reason",
                "type": "string",
                "description": "Why the completion finished"
            },
            {
                "name": "usage",
                "display_name": "Token Usage",
                "type": "object",
                "description": "Token usage statistics"
            },
            {
                "name": "cost_total",
                "display_name": "Total Cost",
                "type": "number",
                "description": "Total cost for processing this request (USD)"
            },
            {
                "name": "cost_itemized",
                "display_name": "Itemized Cost",
                "type": "array",
                "description": "Detailed breakdown of costs"
            },
            {
                "name": "logprobs",
                "display_name": "Log Probabilities",
                "type": "object",
                "description": "Token probabilities and logprobs from the model"
            }
        ],
        "pricing": {
            "reference": "https://openrouter.ai/models",
            "items": [
                {
                    "key": "input_cost_per_million",
                    "label": "Input Tokens (per 1M)",
                    "cost": 0.09999999999999999,
                    "currency": "USD"
                },
                {
                    "key": "output_cost_per_million",
                    "label": "Output Tokens (per 1M)",
                    "cost": 0.39999999999999997,
                    "currency": "USD"
                }
            ]
        },
        "id": "openai-gpt-4-1-nano"
    },
    {
        "display_name": "OpenAI: GPT-4 Turbo (older v1106)",
        "description": "The latest GPT-4 Turbo model with vision capabilities. Vision requests can now use JSON mode and function calling.\n\nTraining data: up to April 2023.",
        "category": "llm",
        "provider": "openai",
        "accepts_plugins": true,
        "model_id": "openai/gpt-4-1106-preview",
        "context_length": 128000,
        "supported_parameters": [
            "frequency_penalty",
            "logit_bias",
            "logprobs",
            "max_tokens",
            "presence_penalty",
            "response_format",
            "seed",
            "stop",
            "structured_outputs",
            "temperature",
            "tool_choice",
            "tools",
            "top_logprobs",
            "top_p"
        ],
        "inputs": [
            {
                "name": "system_prompt",
                "display_name": "System Prompt",
                "type": "string or message",
                "description": "System prompt for the model",
                "default": null
            },
            {
                "name": "messages",
                "display_name": "Messages",
                "type": "array of messages or message or string",
                "description": "Array of chat messages",
                "required": true
            },
            {
                "name": "tools",
                "display_name": "Tools",
                "type": "tool",
                "description": "Array of tools to use",
                "default": null,
                "allow_multiple": true
            },
            {
                "name": "temperature",
                "display_name": "Temperature",
                "type": "number",
                "description": "Controls randomness (0-2)",
                "default": null
            },
            {
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "type": "number",
                "description": "Maximum tokens to generate",
                "default": null
            },
            {
                "name": "top_p",
                "display_name": "Top P",
                "type": "number",
                "description": "Controls diversity via nucleus sampling",
                "default": null
            },
            {
                "name": "frequency_penalty",
                "display_name": "Frequency Penalty",
                "type": "number",
                "description": "Reduces repetition (-2 to 2)",
                "default": null
            },
            {
                "name": "presence_penalty",
                "display_name": "Presence Penalty",
                "type": "number",
                "description": "Encourages new topics (-2 to 2)",
                "default": null
            },
            {
                "name": "response_format",
                "display_name": "Response Format",
                "type": "string or object",
                "description": "Output format specification",
                "default": null
            },
            {
                "name": "seed",
                "display_name": "Seed",
                "type": "number",
                "description": "Deterministic outputs",
                "default": null
            },
            {
                "name": "stop",
                "display_name": "Stop",
                "type": "string or array",
                "description": "Custom stop sequences",
                "default": null
            },
            {
                "name": "structured_outputs",
                "display_name": "Structured Outputs",
                "type": "string or object",
                "description": "JSON schema enforcement",
                "default": null
            },
            {
                "name": "tool_choice",
                "display_name": "Tool Choice",
                "type": "string",
                "description": "Tool selection control",
                "default": null
            }
        ],
        "outputs": [
            {
                "name": "content",
                "display_name": "Content",
                "can_stream": true,
                "type": "string",
                "description": "The content portion of the generated response message."
            },
            {
                "name": "message",
                "display_name": "Message",
                "type": "message",
                "can_stream": true,
                "description": "The full generated response message."
            },
            {
                "name": "role",
                "display_name": "Role",
                "can_stream": true,
                "type": "string",
                "description": "Role of the response (usually 'assistant')"
            },
            {
                "name": "tool_calls",
                "display_name": "Tool Calls",
                "type": "array of tools",
                "description": "Tool calls made by the model"
            },
            {
                "name": "finish_reason",
                "display_name": "Finish Reason",
                "type": "string",
                "description": "Why the completion finished"
            },
            {
                "name": "usage",
                "display_name": "Token Usage",
                "type": "object",
                "description": "Token usage statistics"
            },
            {
                "name": "cost_total",
                "display_name": "Total Cost",
                "type": "number",
                "description": "Total cost for processing this request (USD)"
            },
            {
                "name": "cost_itemized",
                "display_name": "Itemized Cost",
                "type": "array",
                "description": "Detailed breakdown of costs"
            },
            {
                "name": "logprobs",
                "display_name": "Log Probabilities",
                "type": "object",
                "description": "Token probabilities and logprobs from the model"
            }
        ],
        "pricing": {
            "reference": "https://openrouter.ai/models",
            "items": [
                {
                    "key": "input_cost_per_million",
                    "label": "Input Tokens (per 1M)",
                    "cost": 10,
                    "currency": "USD"
                },
                {
                    "key": "output_cost_per_million",
                    "label": "Output Tokens (per 1M)",
                    "cost": 30,
                    "currency": "USD"
                }
            ]
        },
        "id": "openai-gpt-4-1106-preview"
    },
    {
        "display_name": "OpenAI: GPT-4 Turbo",
        "description": "The latest GPT-4 Turbo model with vision capabilities. Vision requests can now use JSON mode and function calling.\n\nTraining data: up to December 2023.",
        "category": "llm",
        "provider": "openai",
        "accepts_plugins": true,
        "model_id": "openai/gpt-4-turbo",
        "context_length": 128000,
        "supported_parameters": [
            "frequency_penalty",
            "logit_bias",
            "logprobs",
            "max_tokens",
            "presence_penalty",
            "response_format",
            "seed",
            "stop",
            "structured_outputs",
            "temperature",
            "tool_choice",
            "tools",
            "top_logprobs",
            "top_p"
        ],
        "inputs": [
            {
                "name": "system_prompt",
                "display_name": "System Prompt",
                "type": "string or message",
                "description": "System prompt for the model",
                "default": null
            },
            {
                "name": "messages",
                "display_name": "Messages",
                "type": "array of messages or message or string",
                "description": "Array of chat messages",
                "required": true
            },
            {
                "name": "tools",
                "display_name": "Tools",
                "type": "tool",
                "description": "Array of tools to use",
                "default": null,
                "allow_multiple": true
            },
            {
                "name": "temperature",
                "display_name": "Temperature",
                "type": "number",
                "description": "Controls randomness (0-2)",
                "default": null
            },
            {
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "type": "number",
                "description": "Maximum tokens to generate",
                "default": null
            },
            {
                "name": "top_p",
                "display_name": "Top P",
                "type": "number",
                "description": "Controls diversity via nucleus sampling",
                "default": null
            },
            {
                "name": "frequency_penalty",
                "display_name": "Frequency Penalty",
                "type": "number",
                "description": "Reduces repetition (-2 to 2)",
                "default": null
            },
            {
                "name": "presence_penalty",
                "display_name": "Presence Penalty",
                "type": "number",
                "description": "Encourages new topics (-2 to 2)",
                "default": null
            },
            {
                "name": "response_format",
                "display_name": "Response Format",
                "type": "string or object",
                "description": "Output format specification",
                "default": null
            },
            {
                "name": "seed",
                "display_name": "Seed",
                "type": "number",
                "description": "Deterministic outputs",
                "default": null
            },
            {
                "name": "stop",
                "display_name": "Stop",
                "type": "string or array",
                "description": "Custom stop sequences",
                "default": null
            },
            {
                "name": "structured_outputs",
                "display_name": "Structured Outputs",
                "type": "string or object",
                "description": "JSON schema enforcement",
                "default": null
            },
            {
                "name": "tool_choice",
                "display_name": "Tool Choice",
                "type": "string",
                "description": "Tool selection control",
                "default": null
            }
        ],
        "outputs": [
            {
                "name": "content",
                "display_name": "Content",
                "can_stream": true,
                "type": "string",
                "description": "The content portion of the generated response message."
            },
            {
                "name": "message",
                "display_name": "Message",
                "type": "message",
                "can_stream": true,
                "description": "The full generated response message."
            },
            {
                "name": "role",
                "display_name": "Role",
                "can_stream": true,
                "type": "string",
                "description": "Role of the response (usually 'assistant')"
            },
            {
                "name": "tool_calls",
                "display_name": "Tool Calls",
                "type": "array of tools",
                "description": "Tool calls made by the model"
            },
            {
                "name": "finish_reason",
                "display_name": "Finish Reason",
                "type": "string",
                "description": "Why the completion finished"
            },
            {
                "name": "usage",
                "display_name": "Token Usage",
                "type": "object",
                "description": "Token usage statistics"
            },
            {
                "name": "cost_total",
                "display_name": "Total Cost",
                "type": "number",
                "description": "Total cost for processing this request (USD)"
            },
            {
                "name": "cost_itemized",
                "display_name": "Itemized Cost",
                "type": "array",
                "description": "Detailed breakdown of costs"
            },
            {
                "name": "logprobs",
                "display_name": "Log Probabilities",
                "type": "object",
                "description": "Token probabilities and logprobs from the model"
            }
        ],
        "pricing": {
            "reference": "https://openrouter.ai/models",
            "items": [
                {
                    "key": "input_cost_per_million",
                    "label": "Input Tokens (per 1M)",
                    "cost": 10,
                    "currency": "USD"
                },
                {
                    "key": "output_cost_per_million",
                    "label": "Output Tokens (per 1M)",
                    "cost": 30,
                    "currency": "USD"
                }
            ]
        },
        "id": "openai-gpt-4-turbo"
    },
    {
        "display_name": "OpenAI: GPT-4 Turbo Preview",
        "description": "The preview GPT-4 model with improved instruction following, JSON mode, reproducible outputs, parallel function calling, and more. Training data: up to Dec 2023.\n\n**Note:** heavily rate limited by OpenAI while in preview.",
        "category": "llm",
        "provider": "openai",
        "accepts_plugins": true,
        "model_id": "openai/gpt-4-turbo-preview",
        "context_length": 128000,
        "supported_parameters": [
            "frequency_penalty",
            "logit_bias",
            "logprobs",
            "max_tokens",
            "presence_penalty",
            "response_format",
            "seed",
            "stop",
            "structured_outputs",
            "temperature",
            "tool_choice",
            "tools",
            "top_logprobs",
            "top_p"
        ],
        "inputs": [
            {
                "name": "system_prompt",
                "display_name": "System Prompt",
                "type": "string or message",
                "description": "System prompt for the model",
                "default": null
            },
            {
                "name": "messages",
                "display_name": "Messages",
                "type": "array of messages or message or string",
                "description": "Array of chat messages",
                "required": true
            },
            {
                "name": "tools",
                "display_name": "Tools",
                "type": "tool",
                "description": "Array of tools to use",
                "default": null,
                "allow_multiple": true
            },
            {
                "name": "temperature",
                "display_name": "Temperature",
                "type": "number",
                "description": "Controls randomness (0-2)",
                "default": null
            },
            {
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "type": "number",
                "description": "Maximum tokens to generate",
                "default": null
            },
            {
                "name": "top_p",
                "display_name": "Top P",
                "type": "number",
                "description": "Controls diversity via nucleus sampling",
                "default": null
            },
            {
                "name": "frequency_penalty",
                "display_name": "Frequency Penalty",
                "type": "number",
                "description": "Reduces repetition (-2 to 2)",
                "default": null
            },
            {
                "name": "presence_penalty",
                "display_name": "Presence Penalty",
                "type": "number",
                "description": "Encourages new topics (-2 to 2)",
                "default": null
            },
            {
                "name": "response_format",
                "display_name": "Response Format",
                "type": "string or object",
                "description": "Output format specification",
                "default": null
            },
            {
                "name": "seed",
                "display_name": "Seed",
                "type": "number",
                "description": "Deterministic outputs",
                "default": null
            },
            {
                "name": "stop",
                "display_name": "Stop",
                "type": "string or array",
                "description": "Custom stop sequences",
                "default": null
            },
            {
                "name": "structured_outputs",
                "display_name": "Structured Outputs",
                "type": "string or object",
                "description": "JSON schema enforcement",
                "default": null
            },
            {
                "name": "tool_choice",
                "display_name": "Tool Choice",
                "type": "string",
                "description": "Tool selection control",
                "default": null
            }
        ],
        "outputs": [
            {
                "name": "content",
                "display_name": "Content",
                "can_stream": true,
                "type": "string",
                "description": "The content portion of the generated response message."
            },
            {
                "name": "message",
                "display_name": "Message",
                "type": "message",
                "can_stream": true,
                "description": "The full generated response message."
            },
            {
                "name": "role",
                "display_name": "Role",
                "can_stream": true,
                "type": "string",
                "description": "Role of the response (usually 'assistant')"
            },
            {
                "name": "tool_calls",
                "display_name": "Tool Calls",
                "type": "array of tools",
                "description": "Tool calls made by the model"
            },
            {
                "name": "finish_reason",
                "display_name": "Finish Reason",
                "type": "string",
                "description": "Why the completion finished"
            },
            {
                "name": "usage",
                "display_name": "Token Usage",
                "type": "object",
                "description": "Token usage statistics"
            },
            {
                "name": "cost_total",
                "display_name": "Total Cost",
                "type": "number",
                "description": "Total cost for processing this request (USD)"
            },
            {
                "name": "cost_itemized",
                "display_name": "Itemized Cost",
                "type": "array",
                "description": "Detailed breakdown of costs"
            },
            {
                "name": "logprobs",
                "display_name": "Log Probabilities",
                "type": "object",
                "description": "Token probabilities and logprobs from the model"
            }
        ],
        "pricing": {
            "reference": "https://openrouter.ai/models",
            "items": [
                {
                    "key": "input_cost_per_million",
                    "label": "Input Tokens (per 1M)",
                    "cost": 10,
                    "currency": "USD"
                },
                {
                    "key": "output_cost_per_million",
                    "label": "Output Tokens (per 1M)",
                    "cost": 30,
                    "currency": "USD"
                }
            ]
        },
        "id": "openai-gpt-4-turbo-preview"
    },
    {
        "display_name": "OpenAI: GPT-4o",
        "description": "GPT-4o (\"o\" for \"omni\") is OpenAI's latest AI model, supporting both text and image inputs with text outputs. It maintains the intelligence level of [GPT-4 Turbo](/models/openai/gpt-4-turbo) while being twice as fast and 50% more cost-effective. GPT-4o also offers improved performance in processing non-English languages and enhanced visual capabilities.\n\nFor benchmarking against other models, it was briefly called [\"im-also-a-good-gpt2-chatbot\"](https://twitter.com/LiamFedus/status/1790064963966370209)\n\n#multimodal",
        "category": "llm",
        "provider": "openai",
        "accepts_plugins": true,
        "model_id": "openai/gpt-4o",
        "context_length": 128000,
        "supported_parameters": [
            "frequency_penalty",
            "logit_bias",
            "logprobs",
            "max_tokens",
            "presence_penalty",
            "response_format",
            "seed",
            "stop",
            "structured_outputs",
            "temperature",
            "tool_choice",
            "tools",
            "top_logprobs",
            "top_p",
            "web_search_options"
        ],
        "inputs": [
            {
                "name": "system_prompt",
                "display_name": "System Prompt",
                "type": "string or message",
                "description": "System prompt for the model",
                "default": null
            },
            {
                "name": "messages",
                "display_name": "Messages",
                "type": "array of messages or message or string",
                "description": "Array of chat messages",
                "required": true
            },
            {
                "name": "tools",
                "display_name": "Tools",
                "type": "tool",
                "description": "Array of tools to use",
                "default": null,
                "allow_multiple": true
            },
            {
                "name": "temperature",
                "display_name": "Temperature",
                "type": "number",
                "description": "Controls randomness (0-2)",
                "default": null
            },
            {
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "type": "number",
                "description": "Maximum tokens to generate",
                "default": null
            },
            {
                "name": "top_p",
                "display_name": "Top P",
                "type": "number",
                "description": "Controls diversity via nucleus sampling",
                "default": null
            },
            {
                "name": "frequency_penalty",
                "display_name": "Frequency Penalty",
                "type": "number",
                "description": "Reduces repetition (-2 to 2)",
                "default": null
            },
            {
                "name": "presence_penalty",
                "display_name": "Presence Penalty",
                "type": "number",
                "description": "Encourages new topics (-2 to 2)",
                "default": null
            },
            {
                "name": "response_format",
                "display_name": "Response Format",
                "type": "string or object",
                "description": "Output format specification",
                "default": null
            },
            {
                "name": "seed",
                "display_name": "Seed",
                "type": "number",
                "description": "Deterministic outputs",
                "default": null
            },
            {
                "name": "stop",
                "display_name": "Stop",
                "type": "string or array",
                "description": "Custom stop sequences",
                "default": null
            },
            {
                "name": "structured_outputs",
                "display_name": "Structured Outputs",
                "type": "string or object",
                "description": "JSON schema enforcement",
                "default": null
            },
            {
                "name": "tool_choice",
                "display_name": "Tool Choice",
                "type": "string",
                "description": "Tool selection control",
                "default": null
            }
        ],
        "outputs": [
            {
                "name": "content",
                "display_name": "Content",
                "can_stream": true,
                "type": "string",
                "description": "The content portion of the generated response message."
            },
            {
                "name": "message",
                "display_name": "Message",
                "type": "message",
                "can_stream": true,
                "description": "The full generated response message."
            },
            {
                "name": "role",
                "display_name": "Role",
                "can_stream": true,
                "type": "string",
                "description": "Role of the response (usually 'assistant')"
            },
            {
                "name": "tool_calls",
                "display_name": "Tool Calls",
                "type": "array of tools",
                "description": "Tool calls made by the model"
            },
            {
                "name": "finish_reason",
                "display_name": "Finish Reason",
                "type": "string",
                "description": "Why the completion finished"
            },
            {
                "name": "usage",
                "display_name": "Token Usage",
                "type": "object",
                "description": "Token usage statistics"
            },
            {
                "name": "cost_total",
                "display_name": "Total Cost",
                "type": "number",
                "description": "Total cost for processing this request (USD)"
            },
            {
                "name": "cost_itemized",
                "display_name": "Itemized Cost",
                "type": "array",
                "description": "Detailed breakdown of costs"
            },
            {
                "name": "annotations",
                "display_name": "Annotations",
                "type": "array",
                "description": "Array of annotations and citations from the response"
            },
            {
                "name": "citations",
                "display_name": "Citations",
                "type": "array",
                "description": "Array of citation URLs used by the model"
            },
            {
                "name": "logprobs",
                "display_name": "Log Probabilities",
                "type": "object",
                "description": "Token probabilities and logprobs from the model"
            }
        ],
        "pricing": {
            "reference": "https://openrouter.ai/models",
            "items": [
                {
                    "key": "input_cost_per_million",
                    "label": "Input Tokens (per 1M)",
                    "cost": 2.5,
                    "currency": "USD"
                },
                {
                    "key": "output_cost_per_million",
                    "label": "Output Tokens (per 1M)",
                    "cost": 10,
                    "currency": "USD"
                }
            ]
        },
        "id": "openai-gpt-4o"
    },
    {
        "display_name": "OpenAI: GPT-4o (2024-05-13)",
        "description": "GPT-4o (\"o\" for \"omni\") is OpenAI's latest AI model, supporting both text and image inputs with text outputs. It maintains the intelligence level of [GPT-4 Turbo](/models/openai/gpt-4-turbo) while being twice as fast and 50% more cost-effective. GPT-4o also offers improved performance in processing non-English languages and enhanced visual capabilities.\n\nFor benchmarking against other models, it was briefly called [\"im-also-a-good-gpt2-chatbot\"](https://twitter.com/LiamFedus/status/1790064963966370209)\n\n#multimodal",
        "category": "llm",
        "provider": "openai",
        "accepts_plugins": true,
        "model_id": "openai/gpt-4o-2024-05-13",
        "context_length": 128000,
        "supported_parameters": [
            "frequency_penalty",
            "logit_bias",
            "logprobs",
            "max_tokens",
            "presence_penalty",
            "response_format",
            "seed",
            "stop",
            "structured_outputs",
            "temperature",
            "tool_choice",
            "tools",
            "top_logprobs",
            "top_p",
            "web_search_options"
        ],
        "inputs": [
            {
                "name": "system_prompt",
                "display_name": "System Prompt",
                "type": "string or message",
                "description": "System prompt for the model",
                "default": null
            },
            {
                "name": "messages",
                "display_name": "Messages",
                "type": "array of messages or message or string",
                "description": "Array of chat messages",
                "required": true
            },
            {
                "name": "tools",
                "display_name": "Tools",
                "type": "tool",
                "description": "Array of tools to use",
                "default": null,
                "allow_multiple": true
            },
            {
                "name": "temperature",
                "display_name": "Temperature",
                "type": "number",
                "description": "Controls randomness (0-2)",
                "default": null
            },
            {
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "type": "number",
                "description": "Maximum tokens to generate",
                "default": null
            },
            {
                "name": "top_p",
                "display_name": "Top P",
                "type": "number",
                "description": "Controls diversity via nucleus sampling",
                "default": null
            },
            {
                "name": "frequency_penalty",
                "display_name": "Frequency Penalty",
                "type": "number",
                "description": "Reduces repetition (-2 to 2)",
                "default": null
            },
            {
                "name": "presence_penalty",
                "display_name": "Presence Penalty",
                "type": "number",
                "description": "Encourages new topics (-2 to 2)",
                "default": null
            },
            {
                "name": "response_format",
                "display_name": "Response Format",
                "type": "string or object",
                "description": "Output format specification",
                "default": null
            },
            {
                "name": "seed",
                "display_name": "Seed",
                "type": "number",
                "description": "Deterministic outputs",
                "default": null
            },
            {
                "name": "stop",
                "display_name": "Stop",
                "type": "string or array",
                "description": "Custom stop sequences",
                "default": null
            },
            {
                "name": "structured_outputs",
                "display_name": "Structured Outputs",
                "type": "string or object",
                "description": "JSON schema enforcement",
                "default": null
            },
            {
                "name": "tool_choice",
                "display_name": "Tool Choice",
                "type": "string",
                "description": "Tool selection control",
                "default": null
            }
        ],
        "outputs": [
            {
                "name": "content",
                "display_name": "Content",
                "can_stream": true,
                "type": "string",
                "description": "The content portion of the generated response message."
            },
            {
                "name": "message",
                "display_name": "Message",
                "type": "message",
                "can_stream": true,
                "description": "The full generated response message."
            },
            {
                "name": "role",
                "display_name": "Role",
                "can_stream": true,
                "type": "string",
                "description": "Role of the response (usually 'assistant')"
            },
            {
                "name": "tool_calls",
                "display_name": "Tool Calls",
                "type": "array of tools",
                "description": "Tool calls made by the model"
            },
            {
                "name": "finish_reason",
                "display_name": "Finish Reason",
                "type": "string",
                "description": "Why the completion finished"
            },
            {
                "name": "usage",
                "display_name": "Token Usage",
                "type": "object",
                "description": "Token usage statistics"
            },
            {
                "name": "cost_total",
                "display_name": "Total Cost",
                "type": "number",
                "description": "Total cost for processing this request (USD)"
            },
            {
                "name": "cost_itemized",
                "display_name": "Itemized Cost",
                "type": "array",
                "description": "Detailed breakdown of costs"
            },
            {
                "name": "annotations",
                "display_name": "Annotations",
                "type": "array",
                "description": "Array of annotations and citations from the response"
            },
            {
                "name": "citations",
                "display_name": "Citations",
                "type": "array",
                "description": "Array of citation URLs used by the model"
            },
            {
                "name": "logprobs",
                "display_name": "Log Probabilities",
                "type": "object",
                "description": "Token probabilities and logprobs from the model"
            }
        ],
        "pricing": {
            "reference": "https://openrouter.ai/models",
            "items": [
                {
                    "key": "input_cost_per_million",
                    "label": "Input Tokens (per 1M)",
                    "cost": 5,
                    "currency": "USD"
                },
                {
                    "key": "output_cost_per_million",
                    "label": "Output Tokens (per 1M)",
                    "cost": 15,
                    "currency": "USD"
                }
            ]
        },
        "id": "openai-gpt-4o-2024-05-13"
    },
    {
        "display_name": "OpenAI: GPT-4o (2024-08-06)",
        "description": "The 2024-08-06 version of GPT-4o offers improved performance in structured outputs, with the ability to supply a JSON schema in the respone_format. Read more [here](https://openai.com/index/introducing-structured-outputs-in-the-api/).\n\nGPT-4o (\"o\" for \"omni\") is OpenAI's latest AI model, supporting both text and image inputs with text outputs. It maintains the intelligence level of [GPT-4 Turbo](/models/openai/gpt-4-turbo) while being twice as fast and 50% more cost-effective. GPT-4o also offers improved performance in processing non-English languages and enhanced visual capabilities.\n\nFor benchmarking against other models, it was briefly called [\"im-also-a-good-gpt2-chatbot\"](https://twitter.com/LiamFedus/status/1790064963966370209)",
        "category": "llm",
        "provider": "openai",
        "accepts_plugins": true,
        "model_id": "openai/gpt-4o-2024-08-06",
        "context_length": 128000,
        "supported_parameters": [
            "frequency_penalty",
            "logit_bias",
            "logprobs",
            "max_tokens",
            "presence_penalty",
            "response_format",
            "seed",
            "stop",
            "structured_outputs",
            "temperature",
            "tool_choice",
            "tools",
            "top_logprobs",
            "top_p",
            "web_search_options"
        ],
        "inputs": [
            {
                "name": "system_prompt",
                "display_name": "System Prompt",
                "type": "string or message",
                "description": "System prompt for the model",
                "default": null
            },
            {
                "name": "messages",
                "display_name": "Messages",
                "type": "array of messages or message or string",
                "description": "Array of chat messages",
                "required": true
            },
            {
                "name": "tools",
                "display_name": "Tools",
                "type": "tool",
                "description": "Array of tools to use",
                "default": null,
                "allow_multiple": true
            },
            {
                "name": "temperature",
                "display_name": "Temperature",
                "type": "number",
                "description": "Controls randomness (0-2)",
                "default": null
            },
            {
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "type": "number",
                "description": "Maximum tokens to generate",
                "default": null
            },
            {
                "name": "top_p",
                "display_name": "Top P",
                "type": "number",
                "description": "Controls diversity via nucleus sampling",
                "default": null
            },
            {
                "name": "frequency_penalty",
                "display_name": "Frequency Penalty",
                "type": "number",
                "description": "Reduces repetition (-2 to 2)",
                "default": null
            },
            {
                "name": "presence_penalty",
                "display_name": "Presence Penalty",
                "type": "number",
                "description": "Encourages new topics (-2 to 2)",
                "default": null
            },
            {
                "name": "response_format",
                "display_name": "Response Format",
                "type": "string or object",
                "description": "Output format specification",
                "default": null
            },
            {
                "name": "seed",
                "display_name": "Seed",
                "type": "number",
                "description": "Deterministic outputs",
                "default": null
            },
            {
                "name": "stop",
                "display_name": "Stop",
                "type": "string or array",
                "description": "Custom stop sequences",
                "default": null
            },
            {
                "name": "structured_outputs",
                "display_name": "Structured Outputs",
                "type": "string or object",
                "description": "JSON schema enforcement",
                "default": null
            },
            {
                "name": "tool_choice",
                "display_name": "Tool Choice",
                "type": "string",
                "description": "Tool selection control",
                "default": null
            }
        ],
        "outputs": [
            {
                "name": "content",
                "display_name": "Content",
                "can_stream": true,
                "type": "string",
                "description": "The content portion of the generated response message."
            },
            {
                "name": "message",
                "display_name": "Message",
                "type": "message",
                "can_stream": true,
                "description": "The full generated response message."
            },
            {
                "name": "role",
                "display_name": "Role",
                "can_stream": true,
                "type": "string",
                "description": "Role of the response (usually 'assistant')"
            },
            {
                "name": "tool_calls",
                "display_name": "Tool Calls",
                "type": "array of tools",
                "description": "Tool calls made by the model"
            },
            {
                "name": "finish_reason",
                "display_name": "Finish Reason",
                "type": "string",
                "description": "Why the completion finished"
            },
            {
                "name": "usage",
                "display_name": "Token Usage",
                "type": "object",
                "description": "Token usage statistics"
            },
            {
                "name": "cost_total",
                "display_name": "Total Cost",
                "type": "number",
                "description": "Total cost for processing this request (USD)"
            },
            {
                "name": "cost_itemized",
                "display_name": "Itemized Cost",
                "type": "array",
                "description": "Detailed breakdown of costs"
            },
            {
                "name": "annotations",
                "display_name": "Annotations",
                "type": "array",
                "description": "Array of annotations and citations from the response"
            },
            {
                "name": "citations",
                "display_name": "Citations",
                "type": "array",
                "description": "Array of citation URLs used by the model"
            },
            {
                "name": "logprobs",
                "display_name": "Log Probabilities",
                "type": "object",
                "description": "Token probabilities and logprobs from the model"
            }
        ],
        "pricing": {
            "reference": "https://openrouter.ai/models",
            "items": [
                {
                    "key": "input_cost_per_million",
                    "label": "Input Tokens (per 1M)",
                    "cost": 2.5,
                    "currency": "USD"
                },
                {
                    "key": "output_cost_per_million",
                    "label": "Output Tokens (per 1M)",
                    "cost": 10,
                    "currency": "USD"
                }
            ]
        },
        "id": "openai-gpt-4o-2024-08-06"
    },
    {
        "display_name": "OpenAI: GPT-4o (2024-11-20)",
        "description": "The 2024-11-20 version of GPT-4o offers a leveled-up creative writing ability with more natural, engaging, and tailored writing to improve relevance & readability. It’s also better at working with uploaded files, providing deeper insights & more thorough responses.\n\nGPT-4o (\"o\" for \"omni\") is OpenAI's latest AI model, supporting both text and image inputs with text outputs. It maintains the intelligence level of [GPT-4 Turbo](/models/openai/gpt-4-turbo) while being twice as fast and 50% more cost-effective. GPT-4o also offers improved performance in processing non-English languages and enhanced visual capabilities.",
        "category": "llm",
        "provider": "openai",
        "accepts_plugins": true,
        "model_id": "openai/gpt-4o-2024-11-20",
        "context_length": 128000,
        "supported_parameters": [
            "frequency_penalty",
            "logit_bias",
            "logprobs",
            "max_tokens",
            "presence_penalty",
            "response_format",
            "seed",
            "stop",
            "structured_outputs",
            "temperature",
            "tool_choice",
            "tools",
            "top_logprobs",
            "top_p",
            "web_search_options"
        ],
        "inputs": [
            {
                "name": "system_prompt",
                "display_name": "System Prompt",
                "type": "string or message",
                "description": "System prompt for the model",
                "default": null
            },
            {
                "name": "messages",
                "display_name": "Messages",
                "type": "array of messages or message or string",
                "description": "Array of chat messages",
                "required": true
            },
            {
                "name": "tools",
                "display_name": "Tools",
                "type": "tool",
                "description": "Array of tools to use",
                "default": null,
                "allow_multiple": true
            },
            {
                "name": "temperature",
                "display_name": "Temperature",
                "type": "number",
                "description": "Controls randomness (0-2)",
                "default": null
            },
            {
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "type": "number",
                "description": "Maximum tokens to generate",
                "default": null
            },
            {
                "name": "top_p",
                "display_name": "Top P",
                "type": "number",
                "description": "Controls diversity via nucleus sampling",
                "default": null
            },
            {
                "name": "frequency_penalty",
                "display_name": "Frequency Penalty",
                "type": "number",
                "description": "Reduces repetition (-2 to 2)",
                "default": null
            },
            {
                "name": "presence_penalty",
                "display_name": "Presence Penalty",
                "type": "number",
                "description": "Encourages new topics (-2 to 2)",
                "default": null
            },
            {
                "name": "response_format",
                "display_name": "Response Format",
                "type": "string or object",
                "description": "Output format specification",
                "default": null
            },
            {
                "name": "seed",
                "display_name": "Seed",
                "type": "number",
                "description": "Deterministic outputs",
                "default": null
            },
            {
                "name": "stop",
                "display_name": "Stop",
                "type": "string or array",
                "description": "Custom stop sequences",
                "default": null
            },
            {
                "name": "structured_outputs",
                "display_name": "Structured Outputs",
                "type": "string or object",
                "description": "JSON schema enforcement",
                "default": null
            },
            {
                "name": "tool_choice",
                "display_name": "Tool Choice",
                "type": "string",
                "description": "Tool selection control",
                "default": null
            }
        ],
        "outputs": [
            {
                "name": "content",
                "display_name": "Content",
                "can_stream": true,
                "type": "string",
                "description": "The content portion of the generated response message."
            },
            {
                "name": "message",
                "display_name": "Message",
                "type": "message",
                "can_stream": true,
                "description": "The full generated response message."
            },
            {
                "name": "role",
                "display_name": "Role",
                "can_stream": true,
                "type": "string",
                "description": "Role of the response (usually 'assistant')"
            },
            {
                "name": "tool_calls",
                "display_name": "Tool Calls",
                "type": "array of tools",
                "description": "Tool calls made by the model"
            },
            {
                "name": "finish_reason",
                "display_name": "Finish Reason",
                "type": "string",
                "description": "Why the completion finished"
            },
            {
                "name": "usage",
                "display_name": "Token Usage",
                "type": "object",
                "description": "Token usage statistics"
            },
            {
                "name": "cost_total",
                "display_name": "Total Cost",
                "type": "number",
                "description": "Total cost for processing this request (USD)"
            },
            {
                "name": "cost_itemized",
                "display_name": "Itemized Cost",
                "type": "array",
                "description": "Detailed breakdown of costs"
            },
            {
                "name": "annotations",
                "display_name": "Annotations",
                "type": "array",
                "description": "Array of annotations and citations from the response"
            },
            {
                "name": "citations",
                "display_name": "Citations",
                "type": "array",
                "description": "Array of citation URLs used by the model"
            },
            {
                "name": "logprobs",
                "display_name": "Log Probabilities",
                "type": "object",
                "description": "Token probabilities and logprobs from the model"
            }
        ],
        "pricing": {
            "reference": "https://openrouter.ai/models",
            "items": [
                {
                    "key": "input_cost_per_million",
                    "label": "Input Tokens (per 1M)",
                    "cost": 2.5,
                    "currency": "USD"
                },
                {
                    "key": "output_cost_per_million",
                    "label": "Output Tokens (per 1M)",
                    "cost": 10,
                    "currency": "USD"
                }
            ]
        },
        "id": "openai-gpt-4o-2024-11-20"
    },
    {
        "display_name": "OpenAI: GPT-4o Audio",
        "description": "The gpt-4o-audio-preview model adds support for audio inputs as prompts. This enhancement allows the model to detect nuances within audio recordings and add depth to generated user experiences. Audio outputs are currently not supported. Audio tokens are priced at $40 per million input audio tokens.",
        "category": "llm",
        "provider": "openai",
        "accepts_plugins": true,
        "model_id": "openai/gpt-4o-audio-preview",
        "context_length": 128000,
        "supported_parameters": [
            "frequency_penalty",
            "logit_bias",
            "logprobs",
            "max_tokens",
            "presence_penalty",
            "response_format",
            "seed",
            "stop",
            "structured_outputs",
            "temperature",
            "tool_choice",
            "tools",
            "top_logprobs",
            "top_p"
        ],
        "inputs": [
            {
                "name": "system_prompt",
                "display_name": "System Prompt",
                "type": "string or message",
                "description": "System prompt for the model",
                "default": null
            },
            {
                "name": "messages",
                "display_name": "Messages",
                "type": "array of messages or message or string",
                "description": "Array of chat messages",
                "required": true
            },
            {
                "name": "tools",
                "display_name": "Tools",
                "type": "tool",
                "description": "Array of tools to use",
                "default": null,
                "allow_multiple": true
            },
            {
                "name": "temperature",
                "display_name": "Temperature",
                "type": "number",
                "description": "Controls randomness (0-2)",
                "default": null
            },
            {
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "type": "number",
                "description": "Maximum tokens to generate",
                "default": null
            },
            {
                "name": "top_p",
                "display_name": "Top P",
                "type": "number",
                "description": "Controls diversity via nucleus sampling",
                "default": null
            },
            {
                "name": "frequency_penalty",
                "display_name": "Frequency Penalty",
                "type": "number",
                "description": "Reduces repetition (-2 to 2)",
                "default": null
            },
            {
                "name": "presence_penalty",
                "display_name": "Presence Penalty",
                "type": "number",
                "description": "Encourages new topics (-2 to 2)",
                "default": null
            },
            {
                "name": "response_format",
                "display_name": "Response Format",
                "type": "string or object",
                "description": "Output format specification",
                "default": null
            },
            {
                "name": "seed",
                "display_name": "Seed",
                "type": "number",
                "description": "Deterministic outputs",
                "default": null
            },
            {
                "name": "stop",
                "display_name": "Stop",
                "type": "string or array",
                "description": "Custom stop sequences",
                "default": null
            },
            {
                "name": "structured_outputs",
                "display_name": "Structured Outputs",
                "type": "string or object",
                "description": "JSON schema enforcement",
                "default": null
            },
            {
                "name": "tool_choice",
                "display_name": "Tool Choice",
                "type": "string",
                "description": "Tool selection control",
                "default": null
            }
        ],
        "outputs": [
            {
                "name": "content",
                "display_name": "Content",
                "can_stream": true,
                "type": "string",
                "description": "The content portion of the generated response message."
            },
            {
                "name": "message",
                "display_name": "Message",
                "type": "message",
                "can_stream": true,
                "description": "The full generated response message."
            },
            {
                "name": "role",
                "display_name": "Role",
                "can_stream": true,
                "type": "string",
                "description": "Role of the response (usually 'assistant')"
            },
            {
                "name": "tool_calls",
                "display_name": "Tool Calls",
                "type": "array of tools",
                "description": "Tool calls made by the model"
            },
            {
                "name": "finish_reason",
                "display_name": "Finish Reason",
                "type": "string",
                "description": "Why the completion finished"
            },
            {
                "name": "usage",
                "display_name": "Token Usage",
                "type": "object",
                "description": "Token usage statistics"
            },
            {
                "name": "cost_total",
                "display_name": "Total Cost",
                "type": "number",
                "description": "Total cost for processing this request (USD)"
            },
            {
                "name": "cost_itemized",
                "display_name": "Itemized Cost",
                "type": "array",
                "description": "Detailed breakdown of costs"
            },
            {
                "name": "logprobs",
                "display_name": "Log Probabilities",
                "type": "object",
                "description": "Token probabilities and logprobs from the model"
            }
        ],
        "pricing": {
            "reference": "https://openrouter.ai/models",
            "items": [
                {
                    "key": "input_cost_per_million",
                    "label": "Input Tokens (per 1M)",
                    "cost": 2.5,
                    "currency": "USD"
                },
                {
                    "key": "output_cost_per_million",
                    "label": "Output Tokens (per 1M)",
                    "cost": 10,
                    "currency": "USD"
                }
            ]
        },
        "id": "openai-gpt-4o-audio-preview"
    },
    {
        "display_name": "OpenAI: GPT-4o (extended)",
        "description": "GPT-4o (\"o\" for \"omni\") is OpenAI's latest AI model, supporting both text and image inputs with text outputs. It maintains the intelligence level of [GPT-4 Turbo](/models/openai/gpt-4-turbo) while being twice as fast and 50% more cost-effective. GPT-4o also offers improved performance in processing non-English languages and enhanced visual capabilities.\n\nFor benchmarking against other models, it was briefly called [\"im-also-a-good-gpt2-chatbot\"](https://twitter.com/LiamFedus/status/1790064963966370209)\n\n#multimodal",
        "category": "llm",
        "provider": "openai",
        "accepts_plugins": true,
        "model_id": "openai/gpt-4o:extended",
        "context_length": 128000,
        "supported_parameters": [
            "frequency_penalty",
            "logit_bias",
            "logprobs",
            "max_tokens",
            "presence_penalty",
            "response_format",
            "seed",
            "stop",
            "structured_outputs",
            "temperature",
            "tool_choice",
            "tools",
            "top_logprobs",
            "top_p",
            "web_search_options"
        ],
        "inputs": [
            {
                "name": "system_prompt",
                "display_name": "System Prompt",
                "type": "string or message",
                "description": "System prompt for the model",
                "default": null
            },
            {
                "name": "messages",
                "display_name": "Messages",
                "type": "array of messages or message or string",
                "description": "Array of chat messages",
                "required": true
            },
            {
                "name": "tools",
                "display_name": "Tools",
                "type": "tool",
                "description": "Array of tools to use",
                "default": null,
                "allow_multiple": true
            },
            {
                "name": "temperature",
                "display_name": "Temperature",
                "type": "number",
                "description": "Controls randomness (0-2)",
                "default": null
            },
            {
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "type": "number",
                "description": "Maximum tokens to generate",
                "default": null
            },
            {
                "name": "top_p",
                "display_name": "Top P",
                "type": "number",
                "description": "Controls diversity via nucleus sampling",
                "default": null
            },
            {
                "name": "frequency_penalty",
                "display_name": "Frequency Penalty",
                "type": "number",
                "description": "Reduces repetition (-2 to 2)",
                "default": null
            },
            {
                "name": "presence_penalty",
                "display_name": "Presence Penalty",
                "type": "number",
                "description": "Encourages new topics (-2 to 2)",
                "default": null
            },
            {
                "name": "response_format",
                "display_name": "Response Format",
                "type": "string or object",
                "description": "Output format specification",
                "default": null
            },
            {
                "name": "seed",
                "display_name": "Seed",
                "type": "number",
                "description": "Deterministic outputs",
                "default": null
            },
            {
                "name": "stop",
                "display_name": "Stop",
                "type": "string or array",
                "description": "Custom stop sequences",
                "default": null
            },
            {
                "name": "structured_outputs",
                "display_name": "Structured Outputs",
                "type": "string or object",
                "description": "JSON schema enforcement",
                "default": null
            },
            {
                "name": "tool_choice",
                "display_name": "Tool Choice",
                "type": "string",
                "description": "Tool selection control",
                "default": null
            }
        ],
        "outputs": [
            {
                "name": "content",
                "display_name": "Content",
                "can_stream": true,
                "type": "string",
                "description": "The content portion of the generated response message."
            },
            {
                "name": "message",
                "display_name": "Message",
                "type": "message",
                "can_stream": true,
                "description": "The full generated response message."
            },
            {
                "name": "role",
                "display_name": "Role",
                "can_stream": true,
                "type": "string",
                "description": "Role of the response (usually 'assistant')"
            },
            {
                "name": "tool_calls",
                "display_name": "Tool Calls",
                "type": "array of tools",
                "description": "Tool calls made by the model"
            },
            {
                "name": "finish_reason",
                "display_name": "Finish Reason",
                "type": "string",
                "description": "Why the completion finished"
            },
            {
                "name": "usage",
                "display_name": "Token Usage",
                "type": "object",
                "description": "Token usage statistics"
            },
            {
                "name": "cost_total",
                "display_name": "Total Cost",
                "type": "number",
                "description": "Total cost for processing this request (USD)"
            },
            {
                "name": "cost_itemized",
                "display_name": "Itemized Cost",
                "type": "array",
                "description": "Detailed breakdown of costs"
            },
            {
                "name": "annotations",
                "display_name": "Annotations",
                "type": "array",
                "description": "Array of annotations and citations from the response"
            },
            {
                "name": "citations",
                "display_name": "Citations",
                "type": "array",
                "description": "Array of citation URLs used by the model"
            },
            {
                "name": "logprobs",
                "display_name": "Log Probabilities",
                "type": "object",
                "description": "Token probabilities and logprobs from the model"
            }
        ],
        "pricing": {
            "reference": "https://openrouter.ai/models",
            "items": [
                {
                    "key": "input_cost_per_million",
                    "label": "Input Tokens (per 1M)",
                    "cost": 6,
                    "currency": "USD"
                },
                {
                    "key": "output_cost_per_million",
                    "label": "Output Tokens (per 1M)",
                    "cost": 18,
                    "currency": "USD"
                }
            ]
        },
        "id": "openai-gpt-4o-extended"
    },
    {
        "display_name": "OpenAI: GPT-4o-mini",
        "description": "GPT-4o mini is OpenAI's newest model after [GPT-4 Omni](/models/openai/gpt-4o), supporting both text and image inputs with text outputs.\n\nAs their most advanced small model, it is many multiples more affordable than other recent frontier models, and more than 60% cheaper than [GPT-3.5 Turbo](/models/openai/gpt-3.5-turbo). It maintains SOTA intelligence, while being significantly more cost-effective.\n\nGPT-4o mini achieves an 82% score on MMLU and presently ranks higher than GPT-4 on chat preferences [common leaderboards](https://arena.lmsys.org/).\n\nCheck out the [launch announcement](https://openai.com/index/gpt-4o-mini-advancing-cost-efficient-intelligence/) to learn more.\n\n#multimodal",
        "category": "llm",
        "provider": "openai",
        "accepts_plugins": true,
        "model_id": "openai/gpt-4o-mini",
        "context_length": 128000,
        "supported_parameters": [
            "frequency_penalty",
            "logit_bias",
            "logprobs",
            "max_tokens",
            "presence_penalty",
            "response_format",
            "seed",
            "stop",
            "structured_outputs",
            "temperature",
            "tool_choice",
            "tools",
            "top_logprobs",
            "top_p",
            "web_search_options"
        ],
        "inputs": [
            {
                "name": "system_prompt",
                "display_name": "System Prompt",
                "type": "string or message",
                "description": "System prompt for the model",
                "default": null
            },
            {
                "name": "messages",
                "display_name": "Messages",
                "type": "array of messages or message or string",
                "description": "Array of chat messages",
                "required": true
            },
            {
                "name": "tools",
                "display_name": "Tools",
                "type": "tool",
                "description": "Array of tools to use",
                "default": null,
                "allow_multiple": true
            },
            {
                "name": "temperature",
                "display_name": "Temperature",
                "type": "number",
                "description": "Controls randomness (0-2)",
                "default": null
            },
            {
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "type": "number",
                "description": "Maximum tokens to generate",
                "default": null
            },
            {
                "name": "top_p",
                "display_name": "Top P",
                "type": "number",
                "description": "Controls diversity via nucleus sampling",
                "default": null
            },
            {
                "name": "frequency_penalty",
                "display_name": "Frequency Penalty",
                "type": "number",
                "description": "Reduces repetition (-2 to 2)",
                "default": null
            },
            {
                "name": "presence_penalty",
                "display_name": "Presence Penalty",
                "type": "number",
                "description": "Encourages new topics (-2 to 2)",
                "default": null
            },
            {
                "name": "response_format",
                "display_name": "Response Format",
                "type": "string or object",
                "description": "Output format specification",
                "default": null
            },
            {
                "name": "seed",
                "display_name": "Seed",
                "type": "number",
                "description": "Deterministic outputs",
                "default": null
            },
            {
                "name": "stop",
                "display_name": "Stop",
                "type": "string or array",
                "description": "Custom stop sequences",
                "default": null
            },
            {
                "name": "structured_outputs",
                "display_name": "Structured Outputs",
                "type": "string or object",
                "description": "JSON schema enforcement",
                "default": null
            },
            {
                "name": "tool_choice",
                "display_name": "Tool Choice",
                "type": "string",
                "description": "Tool selection control",
                "default": null
            }
        ],
        "outputs": [
            {
                "name": "content",
                "display_name": "Content",
                "can_stream": true,
                "type": "string",
                "description": "The content portion of the generated response message."
            },
            {
                "name": "message",
                "display_name": "Message",
                "type": "message",
                "can_stream": true,
                "description": "The full generated response message."
            },
            {
                "name": "role",
                "display_name": "Role",
                "can_stream": true,
                "type": "string",
                "description": "Role of the response (usually 'assistant')"
            },
            {
                "name": "tool_calls",
                "display_name": "Tool Calls",
                "type": "array of tools",
                "description": "Tool calls made by the model"
            },
            {
                "name": "finish_reason",
                "display_name": "Finish Reason",
                "type": "string",
                "description": "Why the completion finished"
            },
            {
                "name": "usage",
                "display_name": "Token Usage",
                "type": "object",
                "description": "Token usage statistics"
            },
            {
                "name": "cost_total",
                "display_name": "Total Cost",
                "type": "number",
                "description": "Total cost for processing this request (USD)"
            },
            {
                "name": "cost_itemized",
                "display_name": "Itemized Cost",
                "type": "array",
                "description": "Detailed breakdown of costs"
            },
            {
                "name": "annotations",
                "display_name": "Annotations",
                "type": "array",
                "description": "Array of annotations and citations from the response"
            },
            {
                "name": "citations",
                "display_name": "Citations",
                "type": "array",
                "description": "Array of citation URLs used by the model"
            },
            {
                "name": "logprobs",
                "display_name": "Log Probabilities",
                "type": "object",
                "description": "Token probabilities and logprobs from the model"
            }
        ],
        "pricing": {
            "reference": "https://openrouter.ai/models",
            "items": [
                {
                    "key": "input_cost_per_million",
                    "label": "Input Tokens (per 1M)",
                    "cost": 0.15,
                    "currency": "USD"
                },
                {
                    "key": "output_cost_per_million",
                    "label": "Output Tokens (per 1M)",
                    "cost": 0.6,
                    "currency": "USD"
                }
            ]
        },
        "id": "openai-gpt-4o-mini"
    },
    {
        "display_name": "OpenAI: GPT-4o-mini (2024-07-18)",
        "description": "GPT-4o mini is OpenAI's newest model after [GPT-4 Omni](/models/openai/gpt-4o), supporting both text and image inputs with text outputs.\n\nAs their most advanced small model, it is many multiples more affordable than other recent frontier models, and more than 60% cheaper than [GPT-3.5 Turbo](/models/openai/gpt-3.5-turbo). It maintains SOTA intelligence, while being significantly more cost-effective.\n\nGPT-4o mini achieves an 82% score on MMLU and presently ranks higher than GPT-4 on chat preferences [common leaderboards](https://arena.lmsys.org/).\n\nCheck out the [launch announcement](https://openai.com/index/gpt-4o-mini-advancing-cost-efficient-intelligence/) to learn more.\n\n#multimodal",
        "category": "llm",
        "provider": "openai",
        "accepts_plugins": true,
        "model_id": "openai/gpt-4o-mini-2024-07-18",
        "context_length": 128000,
        "supported_parameters": [
            "frequency_penalty",
            "logit_bias",
            "logprobs",
            "max_tokens",
            "presence_penalty",
            "response_format",
            "seed",
            "stop",
            "structured_outputs",
            "temperature",
            "tool_choice",
            "tools",
            "top_logprobs",
            "top_p",
            "web_search_options"
        ],
        "inputs": [
            {
                "name": "system_prompt",
                "display_name": "System Prompt",
                "type": "string or message",
                "description": "System prompt for the model",
                "default": null
            },
            {
                "name": "messages",
                "display_name": "Messages",
                "type": "array of messages or message or string",
                "description": "Array of chat messages",
                "required": true
            },
            {
                "name": "tools",
                "display_name": "Tools",
                "type": "tool",
                "description": "Array of tools to use",
                "default": null,
                "allow_multiple": true
            },
            {
                "name": "temperature",
                "display_name": "Temperature",
                "type": "number",
                "description": "Controls randomness (0-2)",
                "default": null
            },
            {
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "type": "number",
                "description": "Maximum tokens to generate",
                "default": null
            },
            {
                "name": "top_p",
                "display_name": "Top P",
                "type": "number",
                "description": "Controls diversity via nucleus sampling",
                "default": null
            },
            {
                "name": "frequency_penalty",
                "display_name": "Frequency Penalty",
                "type": "number",
                "description": "Reduces repetition (-2 to 2)",
                "default": null
            },
            {
                "name": "presence_penalty",
                "display_name": "Presence Penalty",
                "type": "number",
                "description": "Encourages new topics (-2 to 2)",
                "default": null
            },
            {
                "name": "response_format",
                "display_name": "Response Format",
                "type": "string or object",
                "description": "Output format specification",
                "default": null
            },
            {
                "name": "seed",
                "display_name": "Seed",
                "type": "number",
                "description": "Deterministic outputs",
                "default": null
            },
            {
                "name": "stop",
                "display_name": "Stop",
                "type": "string or array",
                "description": "Custom stop sequences",
                "default": null
            },
            {
                "name": "structured_outputs",
                "display_name": "Structured Outputs",
                "type": "string or object",
                "description": "JSON schema enforcement",
                "default": null
            },
            {
                "name": "tool_choice",
                "display_name": "Tool Choice",
                "type": "string",
                "description": "Tool selection control",
                "default": null
            }
        ],
        "outputs": [
            {
                "name": "content",
                "display_name": "Content",
                "can_stream": true,
                "type": "string",
                "description": "The content portion of the generated response message."
            },
            {
                "name": "message",
                "display_name": "Message",
                "type": "message",
                "can_stream": true,
                "description": "The full generated response message."
            },
            {
                "name": "role",
                "display_name": "Role",
                "can_stream": true,
                "type": "string",
                "description": "Role of the response (usually 'assistant')"
            },
            {
                "name": "tool_calls",
                "display_name": "Tool Calls",
                "type": "array of tools",
                "description": "Tool calls made by the model"
            },
            {
                "name": "finish_reason",
                "display_name": "Finish Reason",
                "type": "string",
                "description": "Why the completion finished"
            },
            {
                "name": "usage",
                "display_name": "Token Usage",
                "type": "object",
                "description": "Token usage statistics"
            },
            {
                "name": "cost_total",
                "display_name": "Total Cost",
                "type": "number",
                "description": "Total cost for processing this request (USD)"
            },
            {
                "name": "cost_itemized",
                "display_name": "Itemized Cost",
                "type": "array",
                "description": "Detailed breakdown of costs"
            },
            {
                "name": "annotations",
                "display_name": "Annotations",
                "type": "array",
                "description": "Array of annotations and citations from the response"
            },
            {
                "name": "citations",
                "display_name": "Citations",
                "type": "array",
                "description": "Array of citation URLs used by the model"
            },
            {
                "name": "logprobs",
                "display_name": "Log Probabilities",
                "type": "object",
                "description": "Token probabilities and logprobs from the model"
            }
        ],
        "pricing": {
            "reference": "https://openrouter.ai/models",
            "items": [
                {
                    "key": "input_cost_per_million",
                    "label": "Input Tokens (per 1M)",
                    "cost": 0.15,
                    "currency": "USD"
                },
                {
                    "key": "output_cost_per_million",
                    "label": "Output Tokens (per 1M)",
                    "cost": 0.6,
                    "currency": "USD"
                }
            ]
        },
        "id": "openai-gpt-4o-mini-2024-07-18"
    },
    {
        "display_name": "OpenAI: GPT-4o-mini Search Preview",
        "description": "GPT-4o mini Search Preview is a specialized model for web search in Chat Completions. It is trained to understand and execute web search queries.",
        "category": "llm",
        "provider": "openai",
        "accepts_plugins": false,
        "model_id": "openai/gpt-4o-mini-search-preview",
        "context_length": 128000,
        "supported_parameters": [
            "max_tokens",
            "response_format",
            "structured_outputs",
            "web_search_options"
        ],
        "inputs": [
            {
                "name": "prompt",
                "display_name": "Prompt",
                "type": "string",
                "description": "Text prompt for completion",
                "required": true
            },
            {
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "type": "number",
                "description": "Maximum tokens to generate",
                "default": null
            },
            {
                "name": "response_format",
                "display_name": "Response Format",
                "type": "string or object",
                "description": "Output format specification",
                "default": null
            },
            {
                "name": "structured_outputs",
                "display_name": "Structured Outputs",
                "type": "string or object",
                "description": "JSON schema enforcement",
                "default": null
            }
        ],
        "outputs": [
            {
                "name": "content",
                "display_name": "Content",
                "can_stream": true,
                "type": "string",
                "description": "The generated completion text"
            },
            {
                "name": "finish_reason",
                "display_name": "Finish Reason",
                "type": "string",
                "description": "Why the completion finished"
            },
            {
                "name": "usage",
                "display_name": "Token Usage",
                "type": "object",
                "description": "Token usage statistics"
            },
            {
                "name": "cost_total",
                "display_name": "Total Cost",
                "type": "number",
                "description": "Total cost for processing this request (USD)"
            },
            {
                "name": "cost_itemized",
                "display_name": "Itemized Cost",
                "type": "array",
                "description": "Detailed breakdown of costs"
            },
            {
                "name": "annotations",
                "display_name": "Annotations",
                "type": "array",
                "description": "Array of annotations and citations from the response"
            },
            {
                "name": "citations",
                "display_name": "Citations",
                "type": "array",
                "description": "Array of citation URLs used by the model"
            }
        ],
        "pricing": {
            "reference": "https://openrouter.ai/models",
            "items": [
                {
                    "key": "input_cost_per_million",
                    "label": "Input Tokens (per 1M)",
                    "cost": 0.15,
                    "currency": "USD"
                },
                {
                    "key": "output_cost_per_million",
                    "label": "Output Tokens (per 1M)",
                    "cost": 0.6,
                    "currency": "USD"
                }
            ]
        },
        "id": "openai-gpt-4o-mini-search-preview"
    },
    {
        "display_name": "OpenAI: GPT-4o Search Preview",
        "description": "GPT-4o Search Previewis a specialized model for web search in Chat Completions. It is trained to understand and execute web search queries.",
        "category": "llm",
        "provider": "openai",
        "accepts_plugins": false,
        "model_id": "openai/gpt-4o-search-preview",
        "context_length": 128000,
        "supported_parameters": [
            "max_tokens",
            "response_format",
            "structured_outputs",
            "web_search_options"
        ],
        "inputs": [
            {
                "name": "prompt",
                "display_name": "Prompt",
                "type": "string",
                "description": "Text prompt for completion",
                "required": true
            },
            {
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "type": "number",
                "description": "Maximum tokens to generate",
                "default": null
            },
            {
                "name": "response_format",
                "display_name": "Response Format",
                "type": "string or object",
                "description": "Output format specification",
                "default": null
            },
            {
                "name": "structured_outputs",
                "display_name": "Structured Outputs",
                "type": "string or object",
                "description": "JSON schema enforcement",
                "default": null
            }
        ],
        "outputs": [
            {
                "name": "content",
                "display_name": "Content",
                "can_stream": true,
                "type": "string",
                "description": "The generated completion text"
            },
            {
                "name": "finish_reason",
                "display_name": "Finish Reason",
                "type": "string",
                "description": "Why the completion finished"
            },
            {
                "name": "usage",
                "display_name": "Token Usage",
                "type": "object",
                "description": "Token usage statistics"
            },
            {
                "name": "cost_total",
                "display_name": "Total Cost",
                "type": "number",
                "description": "Total cost for processing this request (USD)"
            },
            {
                "name": "cost_itemized",
                "display_name": "Itemized Cost",
                "type": "array",
                "description": "Detailed breakdown of costs"
            },
            {
                "name": "annotations",
                "display_name": "Annotations",
                "type": "array",
                "description": "Array of annotations and citations from the response"
            },
            {
                "name": "citations",
                "display_name": "Citations",
                "type": "array",
                "description": "Array of citation URLs used by the model"
            }
        ],
        "pricing": {
            "reference": "https://openrouter.ai/models",
            "items": [
                {
                    "key": "input_cost_per_million",
                    "label": "Input Tokens (per 1M)",
                    "cost": 2.5,
                    "currency": "USD"
                },
                {
                    "key": "output_cost_per_million",
                    "label": "Output Tokens (per 1M)",
                    "cost": 10,
                    "currency": "USD"
                }
            ]
        },
        "id": "openai-gpt-4o-search-preview"
    },
    {
        "display_name": "OpenAI: GPT-5",
        "description": "GPT-5 is OpenAI’s most advanced model, offering major improvements in reasoning, code quality, and user experience. It is optimized for complex tasks that require step-by-step reasoning, instruction following, and accuracy in high-stakes use cases. It supports test-time routing features and advanced prompt understanding, including user-specified intent like \"think hard about this.\" Improvements include reductions in hallucination, sycophancy, and better performance in coding, writing, and health-related tasks.\n\nNote that BYOK is required for this model. Set up here: https://openrouter.ai/settings/integrations",
        "category": "llm",
        "provider": "openai",
        "accepts_plugins": true,
        "model_id": "openai/gpt-5",
        "context_length": 400000,
        "supported_parameters": [
            "include_reasoning",
            "max_tokens",
            "reasoning",
            "response_format",
            "seed",
            "structured_outputs",
            "tool_choice",
            "tools"
        ],
        "inputs": [
            {
                "name": "system_prompt",
                "display_name": "System Prompt",
                "type": "string or message",
                "description": "System prompt for the model",
                "default": null
            },
            {
                "name": "messages",
                "display_name": "Messages",
                "type": "array of messages or message or string",
                "description": "Array of chat messages",
                "required": true
            },
            {
                "name": "tools",
                "display_name": "Tools",
                "type": "tool",
                "description": "Array of tools to use",
                "default": null,
                "allow_multiple": true
            },
            {
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "type": "number",
                "description": "Maximum tokens to generate",
                "default": null
            },
            {
                "name": "include_reasoning",
                "display_name": "Include Reasoning",
                "type": "boolean",
                "description": "Include reasoning in response",
                "default": null
            },
            {
                "name": "reasoning",
                "display_name": "Reasoning",
                "type": "boolean",
                "description": "Internal reasoning mode",
                "default": null
            },
            {
                "name": "response_format",
                "display_name": "Response Format",
                "type": "string or object",
                "description": "Output format specification",
                "default": null
            },
            {
                "name": "seed",
                "display_name": "Seed",
                "type": "number",
                "description": "Deterministic outputs",
                "default": null
            },
            {
                "name": "structured_outputs",
                "display_name": "Structured Outputs",
                "type": "string or object",
                "description": "JSON schema enforcement",
                "default": null
            },
            {
                "name": "tool_choice",
                "display_name": "Tool Choice",
                "type": "string",
                "description": "Tool selection control",
                "default": null
            }
        ],
        "outputs": [
            {
                "name": "content",
                "display_name": "Content",
                "can_stream": true,
                "type": "string",
                "description": "The content portion of the generated response message."
            },
            {
                "name": "message",
                "display_name": "Message",
                "type": "message",
                "can_stream": true,
                "description": "The full generated response message."
            },
            {
                "name": "role",
                "display_name": "Role",
                "can_stream": true,
                "type": "string",
                "description": "Role of the response (usually 'assistant')"
            },
            {
                "name": "tool_calls",
                "display_name": "Tool Calls",
                "type": "array of tools",
                "description": "Tool calls made by the model"
            },
            {
                "name": "finish_reason",
                "display_name": "Finish Reason",
                "type": "string",
                "description": "Why the completion finished"
            },
            {
                "name": "usage",
                "display_name": "Token Usage",
                "type": "object",
                "description": "Token usage statistics"
            },
            {
                "name": "cost_total",
                "display_name": "Total Cost",
                "type": "number",
                "description": "Total cost for processing this request (USD)"
            },
            {
                "name": "cost_itemized",
                "display_name": "Itemized Cost",
                "type": "array",
                "description": "Detailed breakdown of costs"
            },
            {
                "name": "reasoning",
                "display_name": "Reasoning",
                "type": "string",
                "description": "The detailed reasoning chain from the model"
            },
            {
                "name": "refusal",
                "display_name": "Refusal",
                "type": "string",
                "description": "Model refusal response (if any)"
            }
        ],
        "pricing": {
            "reference": "https://openrouter.ai/models",
            "items": [
                {
                    "key": "input_cost_per_million",
                    "label": "Input Tokens (per 1M)",
                    "cost": 1.25,
                    "currency": "USD"
                },
                {
                    "key": "output_cost_per_million",
                    "label": "Output Tokens (per 1M)",
                    "cost": 10,
                    "currency": "USD"
                }
            ]
        },
        "id": "openai-gpt-5"
    },
    {
        "display_name": "OpenAI: GPT-5 Chat",
        "description": "GPT-5 Chat is designed for advanced, natural, multimodal, and context-aware conversations for enterprise applications.",
        "category": "llm",
        "provider": "openai",
        "accepts_plugins": false,
        "model_id": "openai/gpt-5-chat",
        "context_length": 400000,
        "supported_parameters": [
            "include_reasoning",
            "max_tokens",
            "reasoning",
            "response_format",
            "seed",
            "structured_outputs"
        ],
        "inputs": [
            {
                "name": "prompt",
                "display_name": "Prompt",
                "type": "string",
                "description": "Text prompt for completion",
                "required": true
            },
            {
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "type": "number",
                "description": "Maximum tokens to generate",
                "default": null
            },
            {
                "name": "include_reasoning",
                "display_name": "Include Reasoning",
                "type": "boolean",
                "description": "Include reasoning in response",
                "default": null
            },
            {
                "name": "reasoning",
                "display_name": "Reasoning",
                "type": "boolean",
                "description": "Internal reasoning mode",
                "default": null
            },
            {
                "name": "response_format",
                "display_name": "Response Format",
                "type": "string or object",
                "description": "Output format specification",
                "default": null
            },
            {
                "name": "seed",
                "display_name": "Seed",
                "type": "number",
                "description": "Deterministic outputs",
                "default": null
            },
            {
                "name": "structured_outputs",
                "display_name": "Structured Outputs",
                "type": "string or object",
                "description": "JSON schema enforcement",
                "default": null
            }
        ],
        "outputs": [
            {
                "name": "content",
                "display_name": "Content",
                "can_stream": true,
                "type": "string",
                "description": "The generated completion text"
            },
            {
                "name": "finish_reason",
                "display_name": "Finish Reason",
                "type": "string",
                "description": "Why the completion finished"
            },
            {
                "name": "usage",
                "display_name": "Token Usage",
                "type": "object",
                "description": "Token usage statistics"
            },
            {
                "name": "cost_total",
                "display_name": "Total Cost",
                "type": "number",
                "description": "Total cost for processing this request (USD)"
            },
            {
                "name": "cost_itemized",
                "display_name": "Itemized Cost",
                "type": "array",
                "description": "Detailed breakdown of costs"
            },
            {
                "name": "reasoning",
                "display_name": "Reasoning",
                "type": "string",
                "description": "The detailed reasoning chain from the model"
            },
            {
                "name": "refusal",
                "display_name": "Refusal",
                "type": "string",
                "description": "Model refusal response (if any)"
            }
        ],
        "pricing": {
            "reference": "https://openrouter.ai/models",
            "items": [
                {
                    "key": "input_cost_per_million",
                    "label": "Input Tokens (per 1M)",
                    "cost": 1.25,
                    "currency": "USD"
                },
                {
                    "key": "output_cost_per_million",
                    "label": "Output Tokens (per 1M)",
                    "cost": 10,
                    "currency": "USD"
                }
            ]
        },
        "id": "openai-gpt-5-chat"
    },
    {
        "display_name": "OpenAI: GPT-5 Mini",
        "description": "GPT-5 Mini is a compact version of GPT-5, designed to handle lighter-weight reasoning tasks. It provides the same instruction-following and safety-tuning benefits as GPT-5, but with reduced latency and cost. GPT-5 Mini is the successor to OpenAI's o4-mini model.",
        "category": "llm",
        "provider": "openai",
        "accepts_plugins": true,
        "model_id": "openai/gpt-5-mini",
        "context_length": 400000,
        "supported_parameters": [
            "include_reasoning",
            "max_tokens",
            "reasoning",
            "response_format",
            "seed",
            "structured_outputs",
            "tool_choice",
            "tools"
        ],
        "inputs": [
            {
                "name": "system_prompt",
                "display_name": "System Prompt",
                "type": "string or message",
                "description": "System prompt for the model",
                "default": null
            },
            {
                "name": "messages",
                "display_name": "Messages",
                "type": "array of messages or message or string",
                "description": "Array of chat messages",
                "required": true
            },
            {
                "name": "tools",
                "display_name": "Tools",
                "type": "tool",
                "description": "Array of tools to use",
                "default": null,
                "allow_multiple": true
            },
            {
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "type": "number",
                "description": "Maximum tokens to generate",
                "default": null
            },
            {
                "name": "include_reasoning",
                "display_name": "Include Reasoning",
                "type": "boolean",
                "description": "Include reasoning in response",
                "default": null
            },
            {
                "name": "reasoning",
                "display_name": "Reasoning",
                "type": "boolean",
                "description": "Internal reasoning mode",
                "default": null
            },
            {
                "name": "response_format",
                "display_name": "Response Format",
                "type": "string or object",
                "description": "Output format specification",
                "default": null
            },
            {
                "name": "seed",
                "display_name": "Seed",
                "type": "number",
                "description": "Deterministic outputs",
                "default": null
            },
            {
                "name": "structured_outputs",
                "display_name": "Structured Outputs",
                "type": "string or object",
                "description": "JSON schema enforcement",
                "default": null
            },
            {
                "name": "tool_choice",
                "display_name": "Tool Choice",
                "type": "string",
                "description": "Tool selection control",
                "default": null
            }
        ],
        "outputs": [
            {
                "name": "content",
                "display_name": "Content",
                "can_stream": true,
                "type": "string",
                "description": "The content portion of the generated response message."
            },
            {
                "name": "message",
                "display_name": "Message",
                "type": "message",
                "can_stream": true,
                "description": "The full generated response message."
            },
            {
                "name": "role",
                "display_name": "Role",
                "can_stream": true,
                "type": "string",
                "description": "Role of the response (usually 'assistant')"
            },
            {
                "name": "tool_calls",
                "display_name": "Tool Calls",
                "type": "array of tools",
                "description": "Tool calls made by the model"
            },
            {
                "name": "finish_reason",
                "display_name": "Finish Reason",
                "type": "string",
                "description": "Why the completion finished"
            },
            {
                "name": "usage",
                "display_name": "Token Usage",
                "type": "object",
                "description": "Token usage statistics"
            },
            {
                "name": "cost_total",
                "display_name": "Total Cost",
                "type": "number",
                "description": "Total cost for processing this request (USD)"
            },
            {
                "name": "cost_itemized",
                "display_name": "Itemized Cost",
                "type": "array",
                "description": "Detailed breakdown of costs"
            },
            {
                "name": "reasoning",
                "display_name": "Reasoning",
                "type": "string",
                "description": "The detailed reasoning chain from the model"
            },
            {
                "name": "refusal",
                "display_name": "Refusal",
                "type": "string",
                "description": "Model refusal response (if any)"
            }
        ],
        "pricing": {
            "reference": "https://openrouter.ai/models",
            "items": [
                {
                    "key": "input_cost_per_million",
                    "label": "Input Tokens (per 1M)",
                    "cost": 0.25,
                    "currency": "USD"
                },
                {
                    "key": "output_cost_per_million",
                    "label": "Output Tokens (per 1M)",
                    "cost": 2,
                    "currency": "USD"
                }
            ]
        },
        "id": "openai-gpt-5-mini"
    },
    {
        "display_name": "OpenAI: GPT-5 Nano",
        "description": "GPT-5-Nano is the smallest and fastest variant in the GPT-5 system, optimized for developer tools, rapid interactions, and ultra-low latency environments. While limited in reasoning depth compared to its larger counterparts, it retains key instruction-following and safety features. It is the successor to GPT-4.1-nano and offers a lightweight option for cost-sensitive or real-time applications.",
        "category": "llm",
        "provider": "openai",
        "accepts_plugins": true,
        "model_id": "openai/gpt-5-nano",
        "context_length": 400000,
        "supported_parameters": [
            "include_reasoning",
            "max_tokens",
            "reasoning",
            "response_format",
            "seed",
            "structured_outputs",
            "tool_choice",
            "tools"
        ],
        "inputs": [
            {
                "name": "system_prompt",
                "display_name": "System Prompt",
                "type": "string or message",
                "description": "System prompt for the model",
                "default": null
            },
            {
                "name": "messages",
                "display_name": "Messages",
                "type": "array of messages or message or string",
                "description": "Array of chat messages",
                "required": true
            },
            {
                "name": "tools",
                "display_name": "Tools",
                "type": "tool",
                "description": "Array of tools to use",
                "default": null,
                "allow_multiple": true
            },
            {
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "type": "number",
                "description": "Maximum tokens to generate",
                "default": null
            },
            {
                "name": "include_reasoning",
                "display_name": "Include Reasoning",
                "type": "boolean",
                "description": "Include reasoning in response",
                "default": null
            },
            {
                "name": "reasoning",
                "display_name": "Reasoning",
                "type": "boolean",
                "description": "Internal reasoning mode",
                "default": null
            },
            {
                "name": "response_format",
                "display_name": "Response Format",
                "type": "string or object",
                "description": "Output format specification",
                "default": null
            },
            {
                "name": "seed",
                "display_name": "Seed",
                "type": "number",
                "description": "Deterministic outputs",
                "default": null
            },
            {
                "name": "structured_outputs",
                "display_name": "Structured Outputs",
                "type": "string or object",
                "description": "JSON schema enforcement",
                "default": null
            },
            {
                "name": "tool_choice",
                "display_name": "Tool Choice",
                "type": "string",
                "description": "Tool selection control",
                "default": null
            }
        ],
        "outputs": [
            {
                "name": "content",
                "display_name": "Content",
                "can_stream": true,
                "type": "string",
                "description": "The content portion of the generated response message."
            },
            {
                "name": "message",
                "display_name": "Message",
                "type": "message",
                "can_stream": true,
                "description": "The full generated response message."
            },
            {
                "name": "role",
                "display_name": "Role",
                "can_stream": true,
                "type": "string",
                "description": "Role of the response (usually 'assistant')"
            },
            {
                "name": "tool_calls",
                "display_name": "Tool Calls",
                "type": "array of tools",
                "description": "Tool calls made by the model"
            },
            {
                "name": "finish_reason",
                "display_name": "Finish Reason",
                "type": "string",
                "description": "Why the completion finished"
            },
            {
                "name": "usage",
                "display_name": "Token Usage",
                "type": "object",
                "description": "Token usage statistics"
            },
            {
                "name": "cost_total",
                "display_name": "Total Cost",
                "type": "number",
                "description": "Total cost for processing this request (USD)"
            },
            {
                "name": "cost_itemized",
                "display_name": "Itemized Cost",
                "type": "array",
                "description": "Detailed breakdown of costs"
            },
            {
                "name": "reasoning",
                "display_name": "Reasoning",
                "type": "string",
                "description": "The detailed reasoning chain from the model"
            },
            {
                "name": "refusal",
                "display_name": "Refusal",
                "type": "string",
                "description": "Model refusal response (if any)"
            }
        ],
        "pricing": {
            "reference": "https://openrouter.ai/models",
            "items": [
                {
                    "key": "input_cost_per_million",
                    "label": "Input Tokens (per 1M)",
                    "cost": 0.049999999999999996,
                    "currency": "USD"
                },
                {
                    "key": "output_cost_per_million",
                    "label": "Output Tokens (per 1M)",
                    "cost": 0.39999999999999997,
                    "currency": "USD"
                }
            ]
        },
        "id": "openai-gpt-5-nano"
    },
    {
        "display_name": "OpenAI: gpt-oss-120b",
        "description": "gpt-oss-120b is an open-weight, 117B-parameter Mixture-of-Experts (MoE) language model from OpenAI designed for high-reasoning, agentic, and general-purpose production use cases. It activates 5.1B parameters per forward pass and is optimized to run on a single H100 GPU with native MXFP4 quantization. The model supports configurable reasoning depth, full chain-of-thought access, and native tool use, including function calling, browsing, and structured output generation.",
        "category": "llm",
        "provider": "openai",
        "accepts_plugins": true,
        "model_id": "openai/gpt-oss-120b",
        "context_length": 131000,
        "supported_parameters": [
            "frequency_penalty",
            "include_reasoning",
            "logit_bias",
            "logprobs",
            "max_tokens",
            "min_p",
            "presence_penalty",
            "reasoning",
            "repetition_penalty",
            "response_format",
            "seed",
            "stop",
            "structured_outputs",
            "temperature",
            "tool_choice",
            "tools",
            "top_k",
            "top_logprobs",
            "top_p"
        ],
        "inputs": [
            {
                "name": "system_prompt",
                "display_name": "System Prompt",
                "type": "string or message",
                "description": "System prompt for the model",
                "default": null
            },
            {
                "name": "messages",
                "display_name": "Messages",
                "type": "array of messages or message or string",
                "description": "Array of chat messages",
                "required": true
            },
            {
                "name": "tools",
                "display_name": "Tools",
                "type": "tool",
                "description": "Array of tools to use",
                "default": null,
                "allow_multiple": true
            },
            {
                "name": "temperature",
                "display_name": "Temperature",
                "type": "number",
                "description": "Controls randomness (0-2)",
                "default": null
            },
            {
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "type": "number",
                "description": "Maximum tokens to generate",
                "default": null
            },
            {
                "name": "top_p",
                "display_name": "Top P",
                "type": "number",
                "description": "Controls diversity via nucleus sampling",
                "default": null
            },
            {
                "name": "frequency_penalty",
                "display_name": "Frequency Penalty",
                "type": "number",
                "description": "Reduces repetition (-2 to 2)",
                "default": null
            },
            {
                "name": "include_reasoning",
                "display_name": "Include Reasoning",
                "type": "boolean",
                "description": "Include reasoning in response",
                "default": null
            },
            {
                "name": "presence_penalty",
                "display_name": "Presence Penalty",
                "type": "number",
                "description": "Encourages new topics (-2 to 2)",
                "default": null
            },
            {
                "name": "reasoning",
                "display_name": "Reasoning",
                "type": "boolean",
                "description": "Internal reasoning mode",
                "default": null
            },
            {
                "name": "response_format",
                "display_name": "Response Format",
                "type": "string or object",
                "description": "Output format specification",
                "default": null
            },
            {
                "name": "seed",
                "display_name": "Seed",
                "type": "number",
                "description": "Deterministic outputs",
                "default": null
            },
            {
                "name": "stop",
                "display_name": "Stop",
                "type": "string or array",
                "description": "Custom stop sequences",
                "default": null
            },
            {
                "name": "structured_outputs",
                "display_name": "Structured Outputs",
                "type": "string or object",
                "description": "JSON schema enforcement",
                "default": null
            },
            {
                "name": "tool_choice",
                "display_name": "Tool Choice",
                "type": "string",
                "description": "Tool selection control",
                "default": null
            }
        ],
        "outputs": [
            {
                "name": "content",
                "display_name": "Content",
                "can_stream": true,
                "type": "string",
                "description": "The content portion of the generated response message."
            },
            {
                "name": "message",
                "display_name": "Message",
                "type": "message",
                "can_stream": true,
                "description": "The full generated response message."
            },
            {
                "name": "role",
                "display_name": "Role",
                "can_stream": true,
                "type": "string",
                "description": "Role of the response (usually 'assistant')"
            },
            {
                "name": "tool_calls",
                "display_name": "Tool Calls",
                "type": "array of tools",
                "description": "Tool calls made by the model"
            },
            {
                "name": "finish_reason",
                "display_name": "Finish Reason",
                "type": "string",
                "description": "Why the completion finished"
            },
            {
                "name": "usage",
                "display_name": "Token Usage",
                "type": "object",
                "description": "Token usage statistics"
            },
            {
                "name": "cost_total",
                "display_name": "Total Cost",
                "type": "number",
                "description": "Total cost for processing this request (USD)"
            },
            {
                "name": "cost_itemized",
                "display_name": "Itemized Cost",
                "type": "array",
                "description": "Detailed breakdown of costs"
            },
            {
                "name": "logprobs",
                "display_name": "Log Probabilities",
                "type": "object",
                "description": "Token probabilities and logprobs from the model"
            },
            {
                "name": "reasoning",
                "display_name": "Reasoning",
                "type": "string",
                "description": "The detailed reasoning chain from the model"
            },
            {
                "name": "refusal",
                "display_name": "Refusal",
                "type": "string",
                "description": "Model refusal response (if any)"
            }
        ],
        "pricing": {
            "reference": "https://openrouter.ai/models",
            "items": [
                {
                    "key": "input_cost_per_million",
                    "label": "Input Tokens (per 1M)",
                    "cost": 0.072,
                    "currency": "USD"
                },
                {
                    "key": "output_cost_per_million",
                    "label": "Output Tokens (per 1M)",
                    "cost": 0.28,
                    "currency": "USD"
                }
            ]
        },
        "id": "openai-gpt-oss-120b"
    },
    {
        "display_name": "OpenAI: gpt-oss-20b",
        "description": "gpt-oss-20b is an open-weight 21B parameter model released by OpenAI under the Apache 2.0 license. It uses a Mixture-of-Experts (MoE) architecture with 3.6B active parameters per forward pass, optimized for lower-latency inference and deployability on consumer or single-GPU hardware. The model is trained in OpenAI’s Harmony response format and supports reasoning level configuration, fine-tuning, and agentic capabilities including function calling, tool use, and structured outputs.",
        "category": "llm",
        "provider": "openai",
        "accepts_plugins": true,
        "model_id": "openai/gpt-oss-20b",
        "context_length": 131000,
        "supported_parameters": [
            "frequency_penalty",
            "include_reasoning",
            "logit_bias",
            "logprobs",
            "max_tokens",
            "min_p",
            "presence_penalty",
            "reasoning",
            "repetition_penalty",
            "response_format",
            "seed",
            "stop",
            "structured_outputs",
            "temperature",
            "tool_choice",
            "tools",
            "top_k",
            "top_logprobs",
            "top_p"
        ],
        "inputs": [
            {
                "name": "system_prompt",
                "display_name": "System Prompt",
                "type": "string or message",
                "description": "System prompt for the model",
                "default": null
            },
            {
                "name": "messages",
                "display_name": "Messages",
                "type": "array of messages or message or string",
                "description": "Array of chat messages",
                "required": true
            },
            {
                "name": "tools",
                "display_name": "Tools",
                "type": "tool",
                "description": "Array of tools to use",
                "default": null,
                "allow_multiple": true
            },
            {
                "name": "temperature",
                "display_name": "Temperature",
                "type": "number",
                "description": "Controls randomness (0-2)",
                "default": null
            },
            {
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "type": "number",
                "description": "Maximum tokens to generate",
                "default": null
            },
            {
                "name": "top_p",
                "display_name": "Top P",
                "type": "number",
                "description": "Controls diversity via nucleus sampling",
                "default": null
            },
            {
                "name": "frequency_penalty",
                "display_name": "Frequency Penalty",
                "type": "number",
                "description": "Reduces repetition (-2 to 2)",
                "default": null
            },
            {
                "name": "include_reasoning",
                "display_name": "Include Reasoning",
                "type": "boolean",
                "description": "Include reasoning in response",
                "default": null
            },
            {
                "name": "presence_penalty",
                "display_name": "Presence Penalty",
                "type": "number",
                "description": "Encourages new topics (-2 to 2)",
                "default": null
            },
            {
                "name": "reasoning",
                "display_name": "Reasoning",
                "type": "boolean",
                "description": "Internal reasoning mode",
                "default": null
            },
            {
                "name": "response_format",
                "display_name": "Response Format",
                "type": "string or object",
                "description": "Output format specification",
                "default": null
            },
            {
                "name": "seed",
                "display_name": "Seed",
                "type": "number",
                "description": "Deterministic outputs",
                "default": null
            },
            {
                "name": "stop",
                "display_name": "Stop",
                "type": "string or array",
                "description": "Custom stop sequences",
                "default": null
            },
            {
                "name": "structured_outputs",
                "display_name": "Structured Outputs",
                "type": "string or object",
                "description": "JSON schema enforcement",
                "default": null
            },
            {
                "name": "tool_choice",
                "display_name": "Tool Choice",
                "type": "string",
                "description": "Tool selection control",
                "default": null
            }
        ],
        "outputs": [
            {
                "name": "content",
                "display_name": "Content",
                "can_stream": true,
                "type": "string",
                "description": "The content portion of the generated response message."
            },
            {
                "name": "message",
                "display_name": "Message",
                "type": "message",
                "can_stream": true,
                "description": "The full generated response message."
            },
            {
                "name": "role",
                "display_name": "Role",
                "can_stream": true,
                "type": "string",
                "description": "Role of the response (usually 'assistant')"
            },
            {
                "name": "tool_calls",
                "display_name": "Tool Calls",
                "type": "array of tools",
                "description": "Tool calls made by the model"
            },
            {
                "name": "finish_reason",
                "display_name": "Finish Reason",
                "type": "string",
                "description": "Why the completion finished"
            },
            {
                "name": "usage",
                "display_name": "Token Usage",
                "type": "object",
                "description": "Token usage statistics"
            },
            {
                "name": "cost_total",
                "display_name": "Total Cost",
                "type": "number",
                "description": "Total cost for processing this request (USD)"
            },
            {
                "name": "cost_itemized",
                "display_name": "Itemized Cost",
                "type": "array",
                "description": "Detailed breakdown of costs"
            },
            {
                "name": "logprobs",
                "display_name": "Log Probabilities",
                "type": "object",
                "description": "Token probabilities and logprobs from the model"
            },
            {
                "name": "reasoning",
                "display_name": "Reasoning",
                "type": "string",
                "description": "The detailed reasoning chain from the model"
            },
            {
                "name": "refusal",
                "display_name": "Refusal",
                "type": "string",
                "description": "Model refusal response (if any)"
            }
        ],
        "pricing": {
            "reference": "https://openrouter.ai/models",
            "items": [
                {
                    "key": "input_cost_per_million",
                    "label": "Input Tokens (per 1M)",
                    "cost": 0.04,
                    "currency": "USD"
                },
                {
                    "key": "output_cost_per_million",
                    "label": "Output Tokens (per 1M)",
                    "cost": 0.15,
                    "currency": "USD"
                }
            ]
        },
        "id": "openai-gpt-oss-20b"
    },
    {
        "display_name": "OpenAI: gpt-oss-20b (free)",
        "description": "gpt-oss-20b is an open-weight 21B parameter model released by OpenAI under the Apache 2.0 license. It uses a Mixture-of-Experts (MoE) architecture with 3.6B active parameters per forward pass, optimized for lower-latency inference and deployability on consumer or single-GPU hardware. The model is trained in OpenAI’s Harmony response format and supports reasoning level configuration, fine-tuning, and agentic capabilities including function calling, tool use, and structured outputs.",
        "category": "llm",
        "provider": "openai",
        "accepts_plugins": false,
        "model_id": "openai/gpt-oss-20b:free",
        "context_length": 131072,
        "supported_parameters": [
            "include_reasoning",
            "max_tokens",
            "reasoning",
            "response_format",
            "structured_outputs",
            "temperature",
            "top_p"
        ],
        "inputs": [
            {
                "name": "prompt",
                "display_name": "Prompt",
                "type": "string",
                "description": "Text prompt for completion",
                "required": true
            },
            {
                "name": "temperature",
                "display_name": "Temperature",
                "type": "number",
                "description": "Controls randomness (0-2)",
                "default": null
            },
            {
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "type": "number",
                "description": "Maximum tokens to generate",
                "default": null
            },
            {
                "name": "top_p",
                "display_name": "Top P",
                "type": "number",
                "description": "Controls diversity via nucleus sampling",
                "default": null
            },
            {
                "name": "include_reasoning",
                "display_name": "Include Reasoning",
                "type": "boolean",
                "description": "Include reasoning in response",
                "default": null
            },
            {
                "name": "reasoning",
                "display_name": "Reasoning",
                "type": "boolean",
                "description": "Internal reasoning mode",
                "default": null
            },
            {
                "name": "response_format",
                "display_name": "Response Format",
                "type": "string or object",
                "description": "Output format specification",
                "default": null
            },
            {
                "name": "structured_outputs",
                "display_name": "Structured Outputs",
                "type": "string or object",
                "description": "JSON schema enforcement",
                "default": null
            }
        ],
        "outputs": [
            {
                "name": "content",
                "display_name": "Content",
                "can_stream": true,
                "type": "string",
                "description": "The generated completion text"
            },
            {
                "name": "finish_reason",
                "display_name": "Finish Reason",
                "type": "string",
                "description": "Why the completion finished"
            },
            {
                "name": "usage",
                "display_name": "Token Usage",
                "type": "object",
                "description": "Token usage statistics"
            },
            {
                "name": "cost_total",
                "display_name": "Total Cost",
                "type": "number",
                "description": "Total cost for processing this request (USD)"
            },
            {
                "name": "cost_itemized",
                "display_name": "Itemized Cost",
                "type": "array",
                "description": "Detailed breakdown of costs"
            },
            {
                "name": "reasoning",
                "display_name": "Reasoning",
                "type": "string",
                "description": "The detailed reasoning chain from the model"
            },
            {
                "name": "refusal",
                "display_name": "Refusal",
                "type": "string",
                "description": "Model refusal response (if any)"
            }
        ],
        "pricing": {
            "reference": "https://openrouter.ai/models",
            "items": [
                {
                    "key": "input_cost_per_million",
                    "label": "Input Tokens (per 1M)",
                    "cost": 0,
                    "currency": "USD"
                },
                {
                    "key": "output_cost_per_million",
                    "label": "Output Tokens (per 1M)",
                    "cost": 0,
                    "currency": "USD"
                }
            ]
        },
        "id": "openai-gpt-oss-20b-free"
    },
    {
        "display_name": "OpenAI: o1",
        "description": "The latest and strongest model family from OpenAI, o1 is designed to spend more time thinking before responding. The o1 model series is trained with large-scale reinforcement learning to reason using chain of thought. \n\nThe o1 models are optimized for math, science, programming, and other STEM-related tasks. They consistently exhibit PhD-level accuracy on benchmarks in physics, chemistry, and biology. Learn more in the [launch announcement](https://openai.com/o1).\n",
        "category": "llm",
        "provider": "openai",
        "accepts_plugins": true,
        "model_id": "openai/o1",
        "context_length": 200000,
        "supported_parameters": [
            "max_tokens",
            "response_format",
            "seed",
            "structured_outputs",
            "tool_choice",
            "tools"
        ],
        "inputs": [
            {
                "name": "system_prompt",
                "display_name": "System Prompt",
                "type": "string or message",
                "description": "System prompt for the model",
                "default": null
            },
            {
                "name": "messages",
                "display_name": "Messages",
                "type": "array of messages or message or string",
                "description": "Array of chat messages",
                "required": true
            },
            {
                "name": "tools",
                "display_name": "Tools",
                "type": "tool",
                "description": "Array of tools to use",
                "default": null,
                "allow_multiple": true
            },
            {
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "type": "number",
                "description": "Maximum tokens to generate",
                "default": null
            },
            {
                "name": "response_format",
                "display_name": "Response Format",
                "type": "string or object",
                "description": "Output format specification",
                "default": null
            },
            {
                "name": "seed",
                "display_name": "Seed",
                "type": "number",
                "description": "Deterministic outputs",
                "default": null
            },
            {
                "name": "structured_outputs",
                "display_name": "Structured Outputs",
                "type": "string or object",
                "description": "JSON schema enforcement",
                "default": null
            },
            {
                "name": "tool_choice",
                "display_name": "Tool Choice",
                "type": "string",
                "description": "Tool selection control",
                "default": null
            }
        ],
        "outputs": [
            {
                "name": "content",
                "display_name": "Content",
                "can_stream": true,
                "type": "string",
                "description": "The content portion of the generated response message."
            },
            {
                "name": "message",
                "display_name": "Message",
                "type": "message",
                "can_stream": true,
                "description": "The full generated response message."
            },
            {
                "name": "role",
                "display_name": "Role",
                "can_stream": true,
                "type": "string",
                "description": "Role of the response (usually 'assistant')"
            },
            {
                "name": "tool_calls",
                "display_name": "Tool Calls",
                "type": "array of tools",
                "description": "Tool calls made by the model"
            },
            {
                "name": "finish_reason",
                "display_name": "Finish Reason",
                "type": "string",
                "description": "Why the completion finished"
            },
            {
                "name": "usage",
                "display_name": "Token Usage",
                "type": "object",
                "description": "Token usage statistics"
            },
            {
                "name": "cost_total",
                "display_name": "Total Cost",
                "type": "number",
                "description": "Total cost for processing this request (USD)"
            },
            {
                "name": "cost_itemized",
                "display_name": "Itemized Cost",
                "type": "array",
                "description": "Detailed breakdown of costs"
            }
        ],
        "pricing": {
            "reference": "https://openrouter.ai/models",
            "items": [
                {
                    "key": "input_cost_per_million",
                    "label": "Input Tokens (per 1M)",
                    "cost": 15,
                    "currency": "USD"
                },
                {
                    "key": "output_cost_per_million",
                    "label": "Output Tokens (per 1M)",
                    "cost": 60,
                    "currency": "USD"
                }
            ]
        },
        "id": "openai-o1"
    },
    {
        "display_name": "OpenAI: o1-mini",
        "description": "The latest and strongest model family from OpenAI, o1 is designed to spend more time thinking before responding.\n\nThe o1 models are optimized for math, science, programming, and other STEM-related tasks. They consistently exhibit PhD-level accuracy on benchmarks in physics, chemistry, and biology. Learn more in the [launch announcement](https://openai.com/o1).\n\nNote: This model is currently experimental and not suitable for production use-cases, and may be heavily rate-limited.",
        "category": "llm",
        "provider": "openai",
        "accepts_plugins": false,
        "model_id": "openai/o1-mini",
        "context_length": 128000,
        "supported_parameters": [
            "max_tokens",
            "seed"
        ],
        "inputs": [
            {
                "name": "prompt",
                "display_name": "Prompt",
                "type": "string",
                "description": "Text prompt for completion",
                "required": true
            },
            {
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "type": "number",
                "description": "Maximum tokens to generate",
                "default": null
            },
            {
                "name": "seed",
                "display_name": "Seed",
                "type": "number",
                "description": "Deterministic outputs",
                "default": null
            }
        ],
        "outputs": [
            {
                "name": "content",
                "display_name": "Content",
                "can_stream": true,
                "type": "string",
                "description": "The generated completion text"
            },
            {
                "name": "finish_reason",
                "display_name": "Finish Reason",
                "type": "string",
                "description": "Why the completion finished"
            },
            {
                "name": "usage",
                "display_name": "Token Usage",
                "type": "object",
                "description": "Token usage statistics"
            },
            {
                "name": "cost_total",
                "display_name": "Total Cost",
                "type": "number",
                "description": "Total cost for processing this request (USD)"
            },
            {
                "name": "cost_itemized",
                "display_name": "Itemized Cost",
                "type": "array",
                "description": "Detailed breakdown of costs"
            }
        ],
        "pricing": {
            "reference": "https://openrouter.ai/models",
            "items": [
                {
                    "key": "input_cost_per_million",
                    "label": "Input Tokens (per 1M)",
                    "cost": 1.1,
                    "currency": "USD"
                },
                {
                    "key": "output_cost_per_million",
                    "label": "Output Tokens (per 1M)",
                    "cost": 4.4,
                    "currency": "USD"
                }
            ]
        },
        "id": "openai-o1-mini"
    },
    {
        "display_name": "OpenAI: o1-mini (2024-09-12)",
        "description": "The latest and strongest model family from OpenAI, o1 is designed to spend more time thinking before responding.\n\nThe o1 models are optimized for math, science, programming, and other STEM-related tasks. They consistently exhibit PhD-level accuracy on benchmarks in physics, chemistry, and biology. Learn more in the [launch announcement](https://openai.com/o1).\n\nNote: This model is currently experimental and not suitable for production use-cases, and may be heavily rate-limited.",
        "category": "llm",
        "provider": "openai",
        "accepts_plugins": false,
        "model_id": "openai/o1-mini-2024-09-12",
        "context_length": 128000,
        "supported_parameters": [
            "max_tokens",
            "seed"
        ],
        "inputs": [
            {
                "name": "prompt",
                "display_name": "Prompt",
                "type": "string",
                "description": "Text prompt for completion",
                "required": true
            },
            {
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "type": "number",
                "description": "Maximum tokens to generate",
                "default": null
            },
            {
                "name": "seed",
                "display_name": "Seed",
                "type": "number",
                "description": "Deterministic outputs",
                "default": null
            }
        ],
        "outputs": [
            {
                "name": "content",
                "display_name": "Content",
                "can_stream": true,
                "type": "string",
                "description": "The generated completion text"
            },
            {
                "name": "finish_reason",
                "display_name": "Finish Reason",
                "type": "string",
                "description": "Why the completion finished"
            },
            {
                "name": "usage",
                "display_name": "Token Usage",
                "type": "object",
                "description": "Token usage statistics"
            },
            {
                "name": "cost_total",
                "display_name": "Total Cost",
                "type": "number",
                "description": "Total cost for processing this request (USD)"
            },
            {
                "name": "cost_itemized",
                "display_name": "Itemized Cost",
                "type": "array",
                "description": "Detailed breakdown of costs"
            }
        ],
        "pricing": {
            "reference": "https://openrouter.ai/models",
            "items": [
                {
                    "key": "input_cost_per_million",
                    "label": "Input Tokens (per 1M)",
                    "cost": 1.1,
                    "currency": "USD"
                },
                {
                    "key": "output_cost_per_million",
                    "label": "Output Tokens (per 1M)",
                    "cost": 4.4,
                    "currency": "USD"
                }
            ]
        },
        "id": "openai-o1-mini-2024-09-12"
    },
    {
        "display_name": "OpenAI: o1-pro",
        "description": "The o1 series of models are trained with reinforcement learning to think before they answer and perform complex reasoning. The o1-pro model uses more compute to think harder and provide consistently better answers.",
        "category": "llm",
        "provider": "openai",
        "accepts_plugins": false,
        "model_id": "openai/o1-pro",
        "context_length": 200000,
        "supported_parameters": [
            "include_reasoning",
            "max_tokens",
            "reasoning",
            "response_format",
            "seed",
            "structured_outputs"
        ],
        "inputs": [
            {
                "name": "prompt",
                "display_name": "Prompt",
                "type": "string",
                "description": "Text prompt for completion",
                "required": true
            },
            {
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "type": "number",
                "description": "Maximum tokens to generate",
                "default": null
            },
            {
                "name": "include_reasoning",
                "display_name": "Include Reasoning",
                "type": "boolean",
                "description": "Include reasoning in response",
                "default": null
            },
            {
                "name": "reasoning",
                "display_name": "Reasoning",
                "type": "boolean",
                "description": "Internal reasoning mode",
                "default": null
            },
            {
                "name": "response_format",
                "display_name": "Response Format",
                "type": "string or object",
                "description": "Output format specification",
                "default": null
            },
            {
                "name": "seed",
                "display_name": "Seed",
                "type": "number",
                "description": "Deterministic outputs",
                "default": null
            },
            {
                "name": "structured_outputs",
                "display_name": "Structured Outputs",
                "type": "string or object",
                "description": "JSON schema enforcement",
                "default": null
            }
        ],
        "outputs": [
            {
                "name": "content",
                "display_name": "Content",
                "can_stream": true,
                "type": "string",
                "description": "The generated completion text"
            },
            {
                "name": "finish_reason",
                "display_name": "Finish Reason",
                "type": "string",
                "description": "Why the completion finished"
            },
            {
                "name": "usage",
                "display_name": "Token Usage",
                "type": "object",
                "description": "Token usage statistics"
            },
            {
                "name": "cost_total",
                "display_name": "Total Cost",
                "type": "number",
                "description": "Total cost for processing this request (USD)"
            },
            {
                "name": "cost_itemized",
                "display_name": "Itemized Cost",
                "type": "array",
                "description": "Detailed breakdown of costs"
            },
            {
                "name": "reasoning",
                "display_name": "Reasoning",
                "type": "string",
                "description": "The detailed reasoning chain from the model"
            },
            {
                "name": "refusal",
                "display_name": "Refusal",
                "type": "string",
                "description": "Model refusal response (if any)"
            }
        ],
        "pricing": {
            "reference": "https://openrouter.ai/models",
            "items": [
                {
                    "key": "input_cost_per_million",
                    "label": "Input Tokens (per 1M)",
                    "cost": 150,
                    "currency": "USD"
                },
                {
                    "key": "output_cost_per_million",
                    "label": "Output Tokens (per 1M)",
                    "cost": 600,
                    "currency": "USD"
                }
            ]
        },
        "id": "openai-o1-pro"
    },
    {
        "display_name": "OpenAI: o3",
        "description": "o3 is a well-rounded and powerful model across domains. It sets a new standard for math, science, coding, and visual reasoning tasks. It also excels at technical writing and instruction-following. Use it to think through multi-step problems that involve analysis across text, code, and images. Note that BYOK is required for this model. Set up here: https://openrouter.ai/settings/integrations",
        "category": "llm",
        "provider": "openai",
        "accepts_plugins": true,
        "model_id": "openai/o3",
        "context_length": 200000,
        "supported_parameters": [
            "include_reasoning",
            "max_tokens",
            "reasoning",
            "response_format",
            "seed",
            "structured_outputs",
            "tool_choice",
            "tools"
        ],
        "inputs": [
            {
                "name": "system_prompt",
                "display_name": "System Prompt",
                "type": "string or message",
                "description": "System prompt for the model",
                "default": null
            },
            {
                "name": "messages",
                "display_name": "Messages",
                "type": "array of messages or message or string",
                "description": "Array of chat messages",
                "required": true
            },
            {
                "name": "tools",
                "display_name": "Tools",
                "type": "tool",
                "description": "Array of tools to use",
                "default": null,
                "allow_multiple": true
            },
            {
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "type": "number",
                "description": "Maximum tokens to generate",
                "default": null
            },
            {
                "name": "include_reasoning",
                "display_name": "Include Reasoning",
                "type": "boolean",
                "description": "Include reasoning in response",
                "default": null
            },
            {
                "name": "reasoning",
                "display_name": "Reasoning",
                "type": "boolean",
                "description": "Internal reasoning mode",
                "default": null
            },
            {
                "name": "response_format",
                "display_name": "Response Format",
                "type": "string or object",
                "description": "Output format specification",
                "default": null
            },
            {
                "name": "seed",
                "display_name": "Seed",
                "type": "number",
                "description": "Deterministic outputs",
                "default": null
            },
            {
                "name": "structured_outputs",
                "display_name": "Structured Outputs",
                "type": "string or object",
                "description": "JSON schema enforcement",
                "default": null
            },
            {
                "name": "tool_choice",
                "display_name": "Tool Choice",
                "type": "string",
                "description": "Tool selection control",
                "default": null
            }
        ],
        "outputs": [
            {
                "name": "content",
                "display_name": "Content",
                "can_stream": true,
                "type": "string",
                "description": "The content portion of the generated response message."
            },
            {
                "name": "message",
                "display_name": "Message",
                "type": "message",
                "can_stream": true,
                "description": "The full generated response message."
            },
            {
                "name": "role",
                "display_name": "Role",
                "can_stream": true,
                "type": "string",
                "description": "Role of the response (usually 'assistant')"
            },
            {
                "name": "tool_calls",
                "display_name": "Tool Calls",
                "type": "array of tools",
                "description": "Tool calls made by the model"
            },
            {
                "name": "finish_reason",
                "display_name": "Finish Reason",
                "type": "string",
                "description": "Why the completion finished"
            },
            {
                "name": "usage",
                "display_name": "Token Usage",
                "type": "object",
                "description": "Token usage statistics"
            },
            {
                "name": "cost_total",
                "display_name": "Total Cost",
                "type": "number",
                "description": "Total cost for processing this request (USD)"
            },
            {
                "name": "cost_itemized",
                "display_name": "Itemized Cost",
                "type": "array",
                "description": "Detailed breakdown of costs"
            },
            {
                "name": "reasoning",
                "display_name": "Reasoning",
                "type": "string",
                "description": "The detailed reasoning chain from the model"
            },
            {
                "name": "refusal",
                "display_name": "Refusal",
                "type": "string",
                "description": "Model refusal response (if any)"
            }
        ],
        "pricing": {
            "reference": "https://openrouter.ai/models",
            "items": [
                {
                    "key": "input_cost_per_million",
                    "label": "Input Tokens (per 1M)",
                    "cost": 2,
                    "currency": "USD"
                },
                {
                    "key": "output_cost_per_million",
                    "label": "Output Tokens (per 1M)",
                    "cost": 8,
                    "currency": "USD"
                }
            ]
        },
        "id": "openai-o3"
    },
    {
        "display_name": "OpenAI: o3 Mini",
        "description": "OpenAI o3-mini is a cost-efficient language model optimized for STEM reasoning tasks, particularly excelling in science, mathematics, and coding.\n\nThis model supports the `reasoning_effort` parameter, which can be set to \"high\", \"medium\", or \"low\" to control the thinking time of the model. The default is \"medium\". OpenRouter also offers the model slug `openai/o3-mini-high` to default the parameter to \"high\".\n\nThe model features three adjustable reasoning effort levels and supports key developer capabilities including function calling, structured outputs, and streaming, though it does not include vision processing capabilities.\n\nThe model demonstrates significant improvements over its predecessor, with expert testers preferring its responses 56% of the time and noting a 39% reduction in major errors on complex questions. With medium reasoning effort settings, o3-mini matches the performance of the larger o1 model on challenging reasoning evaluations like AIME and GPQA, while maintaining lower latency and cost.",
        "category": "llm",
        "provider": "openai",
        "accepts_plugins": true,
        "model_id": "openai/o3-mini",
        "context_length": 200000,
        "supported_parameters": [
            "max_tokens",
            "response_format",
            "seed",
            "structured_outputs",
            "tool_choice",
            "tools"
        ],
        "inputs": [
            {
                "name": "system_prompt",
                "display_name": "System Prompt",
                "type": "string or message",
                "description": "System prompt for the model",
                "default": null
            },
            {
                "name": "messages",
                "display_name": "Messages",
                "type": "array of messages or message or string",
                "description": "Array of chat messages",
                "required": true
            },
            {
                "name": "tools",
                "display_name": "Tools",
                "type": "tool",
                "description": "Array of tools to use",
                "default": null,
                "allow_multiple": true
            },
            {
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "type": "number",
                "description": "Maximum tokens to generate",
                "default": null
            },
            {
                "name": "response_format",
                "display_name": "Response Format",
                "type": "string or object",
                "description": "Output format specification",
                "default": null
            },
            {
                "name": "seed",
                "display_name": "Seed",
                "type": "number",
                "description": "Deterministic outputs",
                "default": null
            },
            {
                "name": "structured_outputs",
                "display_name": "Structured Outputs",
                "type": "string or object",
                "description": "JSON schema enforcement",
                "default": null
            },
            {
                "name": "tool_choice",
                "display_name": "Tool Choice",
                "type": "string",
                "description": "Tool selection control",
                "default": null
            }
        ],
        "outputs": [
            {
                "name": "content",
                "display_name": "Content",
                "can_stream": true,
                "type": "string",
                "description": "The content portion of the generated response message."
            },
            {
                "name": "message",
                "display_name": "Message",
                "type": "message",
                "can_stream": true,
                "description": "The full generated response message."
            },
            {
                "name": "role",
                "display_name": "Role",
                "can_stream": true,
                "type": "string",
                "description": "Role of the response (usually 'assistant')"
            },
            {
                "name": "tool_calls",
                "display_name": "Tool Calls",
                "type": "array of tools",
                "description": "Tool calls made by the model"
            },
            {
                "name": "finish_reason",
                "display_name": "Finish Reason",
                "type": "string",
                "description": "Why the completion finished"
            },
            {
                "name": "usage",
                "display_name": "Token Usage",
                "type": "object",
                "description": "Token usage statistics"
            },
            {
                "name": "cost_total",
                "display_name": "Total Cost",
                "type": "number",
                "description": "Total cost for processing this request (USD)"
            },
            {
                "name": "cost_itemized",
                "display_name": "Itemized Cost",
                "type": "array",
                "description": "Detailed breakdown of costs"
            }
        ],
        "pricing": {
            "reference": "https://openrouter.ai/models",
            "items": [
                {
                    "key": "input_cost_per_million",
                    "label": "Input Tokens (per 1M)",
                    "cost": 1.1,
                    "currency": "USD"
                },
                {
                    "key": "output_cost_per_million",
                    "label": "Output Tokens (per 1M)",
                    "cost": 4.4,
                    "currency": "USD"
                }
            ]
        },
        "id": "openai-o3-mini"
    },
    {
        "display_name": "OpenAI: o3 Mini High",
        "description": "OpenAI o3-mini-high is the same model as [o3-mini](/openai/o3-mini) with reasoning_effort set to high. \n\no3-mini is a cost-efficient language model optimized for STEM reasoning tasks, particularly excelling in science, mathematics, and coding. The model features three adjustable reasoning effort levels and supports key developer capabilities including function calling, structured outputs, and streaming, though it does not include vision processing capabilities.\n\nThe model demonstrates significant improvements over its predecessor, with expert testers preferring its responses 56% of the time and noting a 39% reduction in major errors on complex questions. With medium reasoning effort settings, o3-mini matches the performance of the larger o1 model on challenging reasoning evaluations like AIME and GPQA, while maintaining lower latency and cost.",
        "category": "llm",
        "provider": "openai",
        "accepts_plugins": true,
        "model_id": "openai/o3-mini-high",
        "context_length": 200000,
        "supported_parameters": [
            "max_tokens",
            "response_format",
            "seed",
            "structured_outputs",
            "tool_choice",
            "tools"
        ],
        "inputs": [
            {
                "name": "system_prompt",
                "display_name": "System Prompt",
                "type": "string or message",
                "description": "System prompt for the model",
                "default": null
            },
            {
                "name": "messages",
                "display_name": "Messages",
                "type": "array of messages or message or string",
                "description": "Array of chat messages",
                "required": true
            },
            {
                "name": "tools",
                "display_name": "Tools",
                "type": "tool",
                "description": "Array of tools to use",
                "default": null,
                "allow_multiple": true
            },
            {
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "type": "number",
                "description": "Maximum tokens to generate",
                "default": null
            },
            {
                "name": "response_format",
                "display_name": "Response Format",
                "type": "string or object",
                "description": "Output format specification",
                "default": null
            },
            {
                "name": "seed",
                "display_name": "Seed",
                "type": "number",
                "description": "Deterministic outputs",
                "default": null
            },
            {
                "name": "structured_outputs",
                "display_name": "Structured Outputs",
                "type": "string or object",
                "description": "JSON schema enforcement",
                "default": null
            },
            {
                "name": "tool_choice",
                "display_name": "Tool Choice",
                "type": "string",
                "description": "Tool selection control",
                "default": null
            }
        ],
        "outputs": [
            {
                "name": "content",
                "display_name": "Content",
                "can_stream": true,
                "type": "string",
                "description": "The content portion of the generated response message."
            },
            {
                "name": "message",
                "display_name": "Message",
                "type": "message",
                "can_stream": true,
                "description": "The full generated response message."
            },
            {
                "name": "role",
                "display_name": "Role",
                "can_stream": true,
                "type": "string",
                "description": "Role of the response (usually 'assistant')"
            },
            {
                "name": "tool_calls",
                "display_name": "Tool Calls",
                "type": "array of tools",
                "description": "Tool calls made by the model"
            },
            {
                "name": "finish_reason",
                "display_name": "Finish Reason",
                "type": "string",
                "description": "Why the completion finished"
            },
            {
                "name": "usage",
                "display_name": "Token Usage",
                "type": "object",
                "description": "Token usage statistics"
            },
            {
                "name": "cost_total",
                "display_name": "Total Cost",
                "type": "number",
                "description": "Total cost for processing this request (USD)"
            },
            {
                "name": "cost_itemized",
                "display_name": "Itemized Cost",
                "type": "array",
                "description": "Detailed breakdown of costs"
            }
        ],
        "pricing": {
            "reference": "https://openrouter.ai/models",
            "items": [
                {
                    "key": "input_cost_per_million",
                    "label": "Input Tokens (per 1M)",
                    "cost": 1.1,
                    "currency": "USD"
                },
                {
                    "key": "output_cost_per_million",
                    "label": "Output Tokens (per 1M)",
                    "cost": 4.4,
                    "currency": "USD"
                }
            ]
        },
        "id": "openai-o3-mini-high"
    },
    {
        "display_name": "OpenAI: o3 Pro",
        "description": "The o-series of models are trained with reinforcement learning to think before they answer and perform complex reasoning. The o3-pro model uses more compute to think harder and provide consistently better answers.\n\nNote that BYOK is required for this model. Set up here: https://openrouter.ai/settings/integrations",
        "category": "llm",
        "provider": "openai",
        "accepts_plugins": true,
        "model_id": "openai/o3-pro",
        "context_length": 200000,
        "supported_parameters": [
            "include_reasoning",
            "max_tokens",
            "reasoning",
            "response_format",
            "seed",
            "structured_outputs",
            "tool_choice",
            "tools"
        ],
        "inputs": [
            {
                "name": "system_prompt",
                "display_name": "System Prompt",
                "type": "string or message",
                "description": "System prompt for the model",
                "default": null
            },
            {
                "name": "messages",
                "display_name": "Messages",
                "type": "array of messages or message or string",
                "description": "Array of chat messages",
                "required": true
            },
            {
                "name": "tools",
                "display_name": "Tools",
                "type": "tool",
                "description": "Array of tools to use",
                "default": null,
                "allow_multiple": true
            },
            {
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "type": "number",
                "description": "Maximum tokens to generate",
                "default": null
            },
            {
                "name": "include_reasoning",
                "display_name": "Include Reasoning",
                "type": "boolean",
                "description": "Include reasoning in response",
                "default": null
            },
            {
                "name": "reasoning",
                "display_name": "Reasoning",
                "type": "boolean",
                "description": "Internal reasoning mode",
                "default": null
            },
            {
                "name": "response_format",
                "display_name": "Response Format",
                "type": "string or object",
                "description": "Output format specification",
                "default": null
            },
            {
                "name": "seed",
                "display_name": "Seed",
                "type": "number",
                "description": "Deterministic outputs",
                "default": null
            },
            {
                "name": "structured_outputs",
                "display_name": "Structured Outputs",
                "type": "string or object",
                "description": "JSON schema enforcement",
                "default": null
            },
            {
                "name": "tool_choice",
                "display_name": "Tool Choice",
                "type": "string",
                "description": "Tool selection control",
                "default": null
            }
        ],
        "outputs": [
            {
                "name": "content",
                "display_name": "Content",
                "can_stream": true,
                "type": "string",
                "description": "The content portion of the generated response message."
            },
            {
                "name": "message",
                "display_name": "Message",
                "type": "message",
                "can_stream": true,
                "description": "The full generated response message."
            },
            {
                "name": "role",
                "display_name": "Role",
                "can_stream": true,
                "type": "string",
                "description": "Role of the response (usually 'assistant')"
            },
            {
                "name": "tool_calls",
                "display_name": "Tool Calls",
                "type": "array of tools",
                "description": "Tool calls made by the model"
            },
            {
                "name": "finish_reason",
                "display_name": "Finish Reason",
                "type": "string",
                "description": "Why the completion finished"
            },
            {
                "name": "usage",
                "display_name": "Token Usage",
                "type": "object",
                "description": "Token usage statistics"
            },
            {
                "name": "cost_total",
                "display_name": "Total Cost",
                "type": "number",
                "description": "Total cost for processing this request (USD)"
            },
            {
                "name": "cost_itemized",
                "display_name": "Itemized Cost",
                "type": "array",
                "description": "Detailed breakdown of costs"
            },
            {
                "name": "reasoning",
                "display_name": "Reasoning",
                "type": "string",
                "description": "The detailed reasoning chain from the model"
            },
            {
                "name": "refusal",
                "display_name": "Refusal",
                "type": "string",
                "description": "Model refusal response (if any)"
            }
        ],
        "pricing": {
            "reference": "https://openrouter.ai/models",
            "items": [
                {
                    "key": "input_cost_per_million",
                    "label": "Input Tokens (per 1M)",
                    "cost": 20,
                    "currency": "USD"
                },
                {
                    "key": "output_cost_per_million",
                    "label": "Output Tokens (per 1M)",
                    "cost": 80,
                    "currency": "USD"
                }
            ]
        },
        "id": "openai-o3-pro"
    },
    {
        "display_name": "OpenAI: o4 Mini",
        "description": "OpenAI o4-mini is a compact reasoning model in the o-series, optimized for fast, cost-efficient performance while retaining strong multimodal and agentic capabilities. It supports tool use and demonstrates competitive reasoning and coding performance across benchmarks like AIME (99.5% with Python) and SWE-bench, outperforming its predecessor o3-mini and even approaching o3 in some domains.\n\nDespite its smaller size, o4-mini exhibits high accuracy in STEM tasks, visual problem solving (e.g., MathVista, MMMU), and code editing. It is especially well-suited for high-throughput scenarios where latency or cost is critical. Thanks to its efficient architecture and refined reinforcement learning training, o4-mini can chain tools, generate structured outputs, and solve multi-step tasks with minimal delay—often in under a minute.",
        "category": "llm",
        "provider": "openai",
        "accepts_plugins": true,
        "model_id": "openai/o4-mini",
        "context_length": 200000,
        "supported_parameters": [
            "include_reasoning",
            "max_tokens",
            "reasoning",
            "response_format",
            "seed",
            "structured_outputs",
            "tool_choice",
            "tools"
        ],
        "inputs": [
            {
                "name": "system_prompt",
                "display_name": "System Prompt",
                "type": "string or message",
                "description": "System prompt for the model",
                "default": null
            },
            {
                "name": "messages",
                "display_name": "Messages",
                "type": "array of messages or message or string",
                "description": "Array of chat messages",
                "required": true
            },
            {
                "name": "tools",
                "display_name": "Tools",
                "type": "tool",
                "description": "Array of tools to use",
                "default": null,
                "allow_multiple": true
            },
            {
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "type": "number",
                "description": "Maximum tokens to generate",
                "default": null
            },
            {
                "name": "include_reasoning",
                "display_name": "Include Reasoning",
                "type": "boolean",
                "description": "Include reasoning in response",
                "default": null
            },
            {
                "name": "reasoning",
                "display_name": "Reasoning",
                "type": "boolean",
                "description": "Internal reasoning mode",
                "default": null
            },
            {
                "name": "response_format",
                "display_name": "Response Format",
                "type": "string or object",
                "description": "Output format specification",
                "default": null
            },
            {
                "name": "seed",
                "display_name": "Seed",
                "type": "number",
                "description": "Deterministic outputs",
                "default": null
            },
            {
                "name": "structured_outputs",
                "display_name": "Structured Outputs",
                "type": "string or object",
                "description": "JSON schema enforcement",
                "default": null
            },
            {
                "name": "tool_choice",
                "display_name": "Tool Choice",
                "type": "string",
                "description": "Tool selection control",
                "default": null
            }
        ],
        "outputs": [
            {
                "name": "content",
                "display_name": "Content",
                "can_stream": true,
                "type": "string",
                "description": "The content portion of the generated response message."
            },
            {
                "name": "message",
                "display_name": "Message",
                "type": "message",
                "can_stream": true,
                "description": "The full generated response message."
            },
            {
                "name": "role",
                "display_name": "Role",
                "can_stream": true,
                "type": "string",
                "description": "Role of the response (usually 'assistant')"
            },
            {
                "name": "tool_calls",
                "display_name": "Tool Calls",
                "type": "array of tools",
                "description": "Tool calls made by the model"
            },
            {
                "name": "finish_reason",
                "display_name": "Finish Reason",
                "type": "string",
                "description": "Why the completion finished"
            },
            {
                "name": "usage",
                "display_name": "Token Usage",
                "type": "object",
                "description": "Token usage statistics"
            },
            {
                "name": "cost_total",
                "display_name": "Total Cost",
                "type": "number",
                "description": "Total cost for processing this request (USD)"
            },
            {
                "name": "cost_itemized",
                "display_name": "Itemized Cost",
                "type": "array",
                "description": "Detailed breakdown of costs"
            },
            {
                "name": "reasoning",
                "display_name": "Reasoning",
                "type": "string",
                "description": "The detailed reasoning chain from the model"
            },
            {
                "name": "refusal",
                "display_name": "Refusal",
                "type": "string",
                "description": "Model refusal response (if any)"
            }
        ],
        "pricing": {
            "reference": "https://openrouter.ai/models",
            "items": [
                {
                    "key": "input_cost_per_million",
                    "label": "Input Tokens (per 1M)",
                    "cost": 1.1,
                    "currency": "USD"
                },
                {
                    "key": "output_cost_per_million",
                    "label": "Output Tokens (per 1M)",
                    "cost": 4.4,
                    "currency": "USD"
                }
            ]
        },
        "id": "openai-o4-mini"
    },
    {
        "display_name": "OpenAI: o4 Mini High",
        "description": "OpenAI o4-mini-high is the same model as [o4-mini](/openai/o4-mini) with reasoning_effort set to high. \n\nOpenAI o4-mini is a compact reasoning model in the o-series, optimized for fast, cost-efficient performance while retaining strong multimodal and agentic capabilities. It supports tool use and demonstrates competitive reasoning and coding performance across benchmarks like AIME (99.5% with Python) and SWE-bench, outperforming its predecessor o3-mini and even approaching o3 in some domains.\n\nDespite its smaller size, o4-mini exhibits high accuracy in STEM tasks, visual problem solving (e.g., MathVista, MMMU), and code editing. It is especially well-suited for high-throughput scenarios where latency or cost is critical. Thanks to its efficient architecture and refined reinforcement learning training, o4-mini can chain tools, generate structured outputs, and solve multi-step tasks with minimal delay—often in under a minute.",
        "category": "llm",
        "provider": "openai",
        "accepts_plugins": true,
        "model_id": "openai/o4-mini-high",
        "context_length": 200000,
        "supported_parameters": [
            "include_reasoning",
            "max_tokens",
            "reasoning",
            "response_format",
            "seed",
            "structured_outputs",
            "tool_choice",
            "tools"
        ],
        "inputs": [
            {
                "name": "system_prompt",
                "display_name": "System Prompt",
                "type": "string or message",
                "description": "System prompt for the model",
                "default": null
            },
            {
                "name": "messages",
                "display_name": "Messages",
                "type": "array of messages or message or string",
                "description": "Array of chat messages",
                "required": true
            },
            {
                "name": "tools",
                "display_name": "Tools",
                "type": "tool",
                "description": "Array of tools to use",
                "default": null,
                "allow_multiple": true
            },
            {
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "type": "number",
                "description": "Maximum tokens to generate",
                "default": null
            },
            {
                "name": "include_reasoning",
                "display_name": "Include Reasoning",
                "type": "boolean",
                "description": "Include reasoning in response",
                "default": null
            },
            {
                "name": "reasoning",
                "display_name": "Reasoning",
                "type": "boolean",
                "description": "Internal reasoning mode",
                "default": null
            },
            {
                "name": "response_format",
                "display_name": "Response Format",
                "type": "string or object",
                "description": "Output format specification",
                "default": null
            },
            {
                "name": "seed",
                "display_name": "Seed",
                "type": "number",
                "description": "Deterministic outputs",
                "default": null
            },
            {
                "name": "structured_outputs",
                "display_name": "Structured Outputs",
                "type": "string or object",
                "description": "JSON schema enforcement",
                "default": null
            },
            {
                "name": "tool_choice",
                "display_name": "Tool Choice",
                "type": "string",
                "description": "Tool selection control",
                "default": null
            }
        ],
        "outputs": [
            {
                "name": "content",
                "display_name": "Content",
                "can_stream": true,
                "type": "string",
                "description": "The content portion of the generated response message."
            },
            {
                "name": "message",
                "display_name": "Message",
                "type": "message",
                "can_stream": true,
                "description": "The full generated response message."
            },
            {
                "name": "role",
                "display_name": "Role",
                "can_stream": true,
                "type": "string",
                "description": "Role of the response (usually 'assistant')"
            },
            {
                "name": "tool_calls",
                "display_name": "Tool Calls",
                "type": "array of tools",
                "description": "Tool calls made by the model"
            },
            {
                "name": "finish_reason",
                "display_name": "Finish Reason",
                "type": "string",
                "description": "Why the completion finished"
            },
            {
                "name": "usage",
                "display_name": "Token Usage",
                "type": "object",
                "description": "Token usage statistics"
            },
            {
                "name": "cost_total",
                "display_name": "Total Cost",
                "type": "number",
                "description": "Total cost for processing this request (USD)"
            },
            {
                "name": "cost_itemized",
                "display_name": "Itemized Cost",
                "type": "array",
                "description": "Detailed breakdown of costs"
            },
            {
                "name": "reasoning",
                "display_name": "Reasoning",
                "type": "string",
                "description": "The detailed reasoning chain from the model"
            },
            {
                "name": "refusal",
                "display_name": "Refusal",
                "type": "string",
                "description": "Model refusal response (if any)"
            }
        ],
        "pricing": {
            "reference": "https://openrouter.ai/models",
            "items": [
                {
                    "key": "input_cost_per_million",
                    "label": "Input Tokens (per 1M)",
                    "cost": 1.1,
                    "currency": "USD"
                },
                {
                    "key": "output_cost_per_million",
                    "label": "Output Tokens (per 1M)",
                    "cost": 4.4,
                    "currency": "USD"
                }
            ]
        },
        "id": "openai-o4-mini-high"
    },
    {
        "display_name": "OpenAI: Omni Moderation Latest",
        "description": "Identify potentially harmful content in text and images using OpenAI's omni-moderation-latest model. This model supports more categorization options and multi-modal inputs compared to the legacy text-moderation-latest model.",
        "icon": "shield-check",
        "category": "moderation",
        "provider": "openai",
        "model_id": "openai/omni-moderation-latest",
        "needs_key_from": "openai",
        "inputs": [
            {
                "name": "input",
                "display_name": "Input",
                "type": "string or array or message",
                "description": "Text, Message object, or array of multi-modal inputs to moderate. Can be a string, Message object with {role, content}, array of strings, or array of objects with 'type' and 'text'/'image_url' properties.",
                "required": true
            }
        ],
        "outputs": [
            {
                "name": "flagged",
                "display_name": "Flagged",
                "type": "boolean",
                "description": "Whether any of the categories are flagged as potentially harmful"
            },
            {
                "name": "sexual",
                "display_name": "Sexual",
                "type": "boolean",
                "description": "Whether content is flagged as sexual"
            },
            {
                "name": "sexual_score",
                "display_name": "Sexual Score",
                "type": "number",
                "description": "Confidence score for sexual content (0-1)"
            },
            {
                "name": "sexual_minors",
                "display_name": "Sexual/Minors",
                "type": "boolean",
                "description": "Whether content is flagged as sexual involving minors"
            },
            {
                "name": "sexual_minors_score",
                "display_name": "Sexual/Minors Score",
                "type": "number",
                "description": "Confidence score for sexual content involving minors (0-1)"
            },
            {
                "name": "harassment",
                "display_name": "Harassment",
                "type": "boolean",
                "description": "Whether content is flagged as harassment"
            },
            {
                "name": "harassment_score",
                "display_name": "Harassment Score",
                "type": "number",
                "description": "Confidence score for harassment content (0-1)"
            },
            {
                "name": "harassment_threatening",
                "display_name": "Harassment/Threatening",
                "type": "boolean",
                "description": "Whether content is flagged as threatening harassment"
            },
            {
                "name": "harassment_threatening_score",
                "display_name": "Harassment/Threatening Score",
                "type": "number",
                "description": "Confidence score for threatening harassment content (0-1)"
            },
            {
                "name": "hate",
                "display_name": "Hate",
                "type": "boolean",
                "description": "Whether content is flagged as hate speech"
            },
            {
                "name": "hate_score",
                "display_name": "Hate Score",
                "type": "number",
                "description": "Confidence score for hate speech content (0-1)"
            },
            {
                "name": "hate_threatening",
                "display_name": "Hate/Threatening",
                "type": "boolean",
                "description": "Whether content is flagged as threatening hate speech"
            },
            {
                "name": "hate_threatening_score",
                "display_name": "Hate/Threatening Score",
                "type": "number",
                "description": "Confidence score for threatening hate speech content (0-1)"
            },
            {
                "name": "illicit",
                "display_name": "Illicit",
                "type": "boolean",
                "description": "Whether content is flagged as illicit advice"
            },
            {
                "name": "illicit_score",
                "display_name": "Illicit Score",
                "type": "number",
                "description": "Confidence score for illicit content (0-1)"
            },
            {
                "name": "illicit_violent",
                "display_name": "Illicit/Violent",
                "type": "boolean",
                "description": "Whether content is flagged as violent illicit advice"
            },
            {
                "name": "illicit_violent_score",
                "display_name": "Illicit/Violent Score",
                "type": "number",
                "description": "Confidence score for violent illicit content (0-1)"
            },
            {
                "name": "self_harm",
                "display_name": "Self-Harm",
                "type": "boolean",
                "description": "Whether content is flagged as self-harm"
            },
            {
                "name": "self_harm_score",
                "display_name": "Self-Harm Score",
                "type": "number",
                "description": "Confidence score for self-harm content (0-1)"
            },
            {
                "name": "self_harm_intent",
                "display_name": "Self-Harm/Intent",
                "type": "boolean",
                "description": "Whether content is flagged as self-harm intent"
            },
            {
                "name": "self_harm_intent_score",
                "display_name": "Self-Harm/Intent Score",
                "type": "number",
                "description": "Confidence score for self-harm intent content (0-1)"
            },
            {
                "name": "self_harm_instructions",
                "display_name": "Self-Harm/Instructions",
                "type": "boolean",
                "description": "Whether content is flagged as self-harm instructions"
            },
            {
                "name": "self_harm_instructions_score",
                "display_name": "Self-Harm/Instructions Score",
                "type": "number",
                "description": "Confidence score for self-harm instructions content (0-1)"
            },
            {
                "name": "violence",
                "display_name": "Violence",
                "type": "boolean",
                "description": "Whether content is flagged as violence"
            },
            {
                "name": "violence_score",
                "display_name": "Violence Score",
                "type": "number",
                "description": "Confidence score for violence content (0-1)"
            },
            {
                "name": "violence_graphic",
                "display_name": "Violence/Graphic",
                "type": "boolean",
                "description": "Whether content is flagged as graphic violence"
            },
            {
                "name": "violence_graphic_score",
                "display_name": "Violence/Graphic Score",
                "type": "number",
                "description": "Confidence score for graphic violence content (0-1)"
            }
        ],
        "id": "openai-omni-moderation-latest"
    },
    {
        "display_name": "OR Gate",
        "description": "A logic gate that outputs true if either input is true",
        "category": "logic",
        "inputs": [
            {
                "name": "input1",
                "display_name": "Input 1",
                "description": "The first input for the OR gate",
                "type": "boolean",
                "required": true
            },
            {
                "name": "input2",
                "display_name": "Input 2",
                "description": "The second input for the OR gate",
                "type": "boolean",
                "required": true
            }
        ],
        "outputs": [
            {
                "name": "value",
                "display_name": "Value",
                "description": "The output value of the OR gate",
                "type": "boolean"
            }
        ],
        "id": "or-gate"
    },
    {
        "display_name": "Chat Output",
        "description": "Outputs a chat message to the user",
        "icon": "comment",
        "category": "i/o",
        "is_output": true,
        "is_resizable": true,
        "custom_render_height": 120,
        "inputs": [
            {
                "name": "message",
                "display_name": "Message",
                "type": "message",
                "description": "The full generated response message."
            },
            {
                "name": "content",
                "display_name": "Content",
                "type": "string",
                "description": "Optionally, just set the content portion of the generated response message."
            },
            {
                "name": "role",
                "display_name": "Role",
                "type": "string",
                "description": "Optionally, just set the role of the generated response message.",
                "required": false,
                "default": "assistant"
            }
        ],
        "outputs": [
            {
                "name": "chat",
                "display_name": "Chat",
                "type": "array of messages",
                "description": "The resulting output messages"
            }
        ],
        "settings": [
            {
                "name": "key",
                "display_name": "Key",
                "type": "string",
                "description": "A unique identifier for this chat output",
                "required": false
            }
        ],
        "id": "output-chat"
    },
    {
        "display_name": "Data Output",
        "description": "Outputs labeled data from the flow",
        "icon": "database",
        "category": "i/o",
        "is_output": true,
        "is_resizable": true,
        "custom_render_height": 60,
        "has_expanded_view": true,
        "inputs": [
            {
                "name": "value",
                "display_name": "Value",
                "type": "any",
                "description": "The data value to output",
                "required": true
            }
        ],
        "outputs": [
            {
                "name": "value",
                "display_name": "Value",
                "type": "any",
                "description": "The output value (same as input)",
                "hidden": true
            },
            {
                "name": "output_key",
                "display_name": "Output Key",
                "type": "string",
                "description": "The key/name for this output in the final result",
                "hidden": true
            },
            {
                "name": "output_description",
                "display_name": "Output Description",
                "type": "string",
                "description": "The description for this output",
                "hidden": true
            }
        ],
        "settings": [
            {
                "name": "key",
                "display_name": "Key",
                "type": "string",
                "description": "An optional key/name for this output in the final result",
                "required": false
            },
            {
                "name": "description",
                "display_name": "Description",
                "type": "string",
                "description": "Optional description of what this output represents",
                "required": false
            }
        ],
        "id": "output-data"
    },
    {
        "display_name": "Perplexity: R1 1776",
        "description": "R1 1776 is a version of DeepSeek-R1 that has been post-trained to remove censorship constraints related to topics restricted by the Chinese government. The model retains its original reasoning capabilities while providing direct responses to a wider range of queries. R1 1776 is an offline chat model that does not use the perplexity search subsystem.\n\nThe model was tested on a multilingual dataset of over 1,000 examples covering sensitive topics to measure its likelihood of refusal or overly filtered responses. [Evaluation Results](https://cdn-uploads.huggingface.co/production/uploads/675c8332d01f593dc90817f5/GiN2VqC5hawUgAGJ6oHla.png) Its performance on math and reasoning benchmarks remains similar to the base R1 model. [Reasoning Performance](https://cdn-uploads.huggingface.co/production/uploads/675c8332d01f593dc90817f5/n4Z9Byqp2S7sKUvCvI40R.png)\n\nRead more on the [Blog Post](https://perplexity.ai/hub/blog/open-sourcing-r1-1776)",
        "category": "llm",
        "provider": "perplexity",
        "accepts_plugins": false,
        "model_id": "perplexity/r1-1776",
        "context_length": 128000,
        "supported_parameters": [
            "frequency_penalty",
            "include_reasoning",
            "logit_bias",
            "max_tokens",
            "min_p",
            "presence_penalty",
            "reasoning",
            "repetition_penalty",
            "stop",
            "temperature",
            "top_k",
            "top_p"
        ],
        "inputs": [
            {
                "name": "system_prompt",
                "display_name": "System Prompt",
                "type": "string or message",
                "description": "System prompt for the model",
                "default": null
            },
            {
                "name": "messages",
                "display_name": "Messages",
                "type": "array of messages or message or string",
                "description": "Array of chat messages",
                "required": true
            },
            {
                "name": "temperature",
                "display_name": "Temperature",
                "type": "number",
                "description": "Controls randomness (0-2)",
                "default": null
            },
            {
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "type": "number",
                "description": "Maximum tokens to generate",
                "default": null
            },
            {
                "name": "top_p",
                "display_name": "Top P",
                "type": "number",
                "description": "Controls diversity via nucleus sampling",
                "default": null
            },
            {
                "name": "frequency_penalty",
                "display_name": "Frequency Penalty",
                "type": "number",
                "description": "Reduces repetition (-2 to 2)",
                "default": null
            },
            {
                "name": "include_reasoning",
                "display_name": "Include Reasoning",
                "type": "boolean",
                "description": "Include reasoning in response",
                "default": null
            },
            {
                "name": "presence_penalty",
                "display_name": "Presence Penalty",
                "type": "number",
                "description": "Encourages new topics (-2 to 2)",
                "default": null
            },
            {
                "name": "reasoning",
                "display_name": "Reasoning",
                "type": "boolean",
                "description": "Internal reasoning mode",
                "default": null
            },
            {
                "name": "stop",
                "display_name": "Stop",
                "type": "string or array",
                "description": "Custom stop sequences",
                "default": null
            }
        ],
        "outputs": [
            {
                "name": "content",
                "display_name": "Content",
                "can_stream": true,
                "type": "string",
                "description": "The content portion of the generated response message."
            },
            {
                "name": "message",
                "display_name": "Message",
                "type": "message",
                "can_stream": true,
                "description": "The full generated response message."
            },
            {
                "name": "role",
                "display_name": "Role",
                "can_stream": true,
                "type": "string",
                "description": "Role of the response (usually 'assistant')"
            },
            {
                "name": "finish_reason",
                "display_name": "Finish Reason",
                "type": "string",
                "description": "Why the completion finished"
            },
            {
                "name": "usage",
                "display_name": "Token Usage",
                "type": "object",
                "description": "Token usage statistics"
            },
            {
                "name": "cost_total",
                "display_name": "Total Cost",
                "type": "number",
                "description": "Total cost for processing this request (USD)"
            },
            {
                "name": "cost_itemized",
                "display_name": "Itemized Cost",
                "type": "array",
                "description": "Detailed breakdown of costs"
            },
            {
                "name": "reasoning",
                "display_name": "Reasoning",
                "type": "string",
                "description": "The detailed reasoning chain from the model"
            },
            {
                "name": "refusal",
                "display_name": "Refusal",
                "type": "string",
                "description": "Model refusal response (if any)"
            }
        ],
        "pricing": {
            "reference": "https://openrouter.ai/models",
            "items": [
                {
                    "key": "input_cost_per_million",
                    "label": "Input Tokens (per 1M)",
                    "cost": 2,
                    "currency": "USD"
                },
                {
                    "key": "output_cost_per_million",
                    "label": "Output Tokens (per 1M)",
                    "cost": 8,
                    "currency": "USD"
                }
            ]
        },
        "id": "perplexity-r1-1776"
    },
    {
        "display_name": "Perplexity: Sonar",
        "description": "Sonar is lightweight, affordable, fast, and simple to use — now featuring citations and the ability to customize sources. It is designed for companies seeking to integrate lightweight question-and-answer features optimized for speed.",
        "category": "llm",
        "provider": "perplexity",
        "accepts_plugins": false,
        "model_id": "perplexity/sonar",
        "context_length": 127072,
        "supported_parameters": [
            "frequency_penalty",
            "max_tokens",
            "presence_penalty",
            "temperature",
            "top_k",
            "top_p",
            "web_search_options"
        ],
        "inputs": [
            {
                "name": "prompt",
                "display_name": "Prompt",
                "type": "string",
                "description": "Text prompt for completion",
                "required": true
            },
            {
                "name": "temperature",
                "display_name": "Temperature",
                "type": "number",
                "description": "Controls randomness (0-2)",
                "default": null
            },
            {
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "type": "number",
                "description": "Maximum tokens to generate",
                "default": null
            },
            {
                "name": "top_p",
                "display_name": "Top P",
                "type": "number",
                "description": "Controls diversity via nucleus sampling",
                "default": null
            },
            {
                "name": "frequency_penalty",
                "display_name": "Frequency Penalty",
                "type": "number",
                "description": "Reduces repetition (-2 to 2)",
                "default": null
            },
            {
                "name": "presence_penalty",
                "display_name": "Presence Penalty",
                "type": "number",
                "description": "Encourages new topics (-2 to 2)",
                "default": null
            }
        ],
        "outputs": [
            {
                "name": "content",
                "display_name": "Content",
                "can_stream": true,
                "type": "string",
                "description": "The generated completion text"
            },
            {
                "name": "finish_reason",
                "display_name": "Finish Reason",
                "type": "string",
                "description": "Why the completion finished"
            },
            {
                "name": "usage",
                "display_name": "Token Usage",
                "type": "object",
                "description": "Token usage statistics"
            },
            {
                "name": "cost_total",
                "display_name": "Total Cost",
                "type": "number",
                "description": "Total cost for processing this request (USD)"
            },
            {
                "name": "cost_itemized",
                "display_name": "Itemized Cost",
                "type": "array",
                "description": "Detailed breakdown of costs"
            },
            {
                "name": "annotations",
                "display_name": "Annotations",
                "type": "array",
                "description": "Array of annotations and citations from the response"
            },
            {
                "name": "citations",
                "display_name": "Citations",
                "type": "array",
                "description": "Array of citation URLs used by the model"
            }
        ],
        "pricing": {
            "reference": "https://openrouter.ai/models",
            "items": [
                {
                    "key": "input_cost_per_million",
                    "label": "Input Tokens (per 1M)",
                    "cost": 1,
                    "currency": "USD"
                },
                {
                    "key": "output_cost_per_million",
                    "label": "Output Tokens (per 1M)",
                    "cost": 1,
                    "currency": "USD"
                }
            ]
        },
        "id": "perplexity-sonar"
    },
    {
        "display_name": "Perplexity: Sonar Deep Research",
        "description": "Sonar Deep Research is a research-focused model designed for multi-step retrieval, synthesis, and reasoning across complex topics. It autonomously searches, reads, and evaluates sources, refining its approach as it gathers information. This enables comprehensive report generation across domains like finance, technology, health, and current events.\n\nNotes on Pricing ([Source](https://docs.perplexity.ai/guides/pricing#detailed-pricing-breakdown-for-sonar-deep-research)) \n- Input tokens comprise of Prompt tokens (user prompt) + Citation tokens (these are processed tokens from running searches)\n- Deep Research runs multiple searches to conduct exhaustive research. Searches are priced at $5/1000 searches. A request that does 30 searches will cost $0.15 in this step.\n- Reasoning is a distinct step in Deep Research since it does extensive automated reasoning through all the material it gathers during its research phase. Reasoning tokens here are a bit different than the CoTs in the answer - these are tokens that we use to reason through the research material prior to generating the outputs via the CoTs. Reasoning tokens are priced at $3/1M tokens",
        "category": "llm",
        "provider": "perplexity",
        "accepts_plugins": false,
        "model_id": "perplexity/sonar-deep-research",
        "context_length": 128000,
        "supported_parameters": [
            "frequency_penalty",
            "include_reasoning",
            "max_tokens",
            "presence_penalty",
            "reasoning",
            "temperature",
            "top_k",
            "top_p",
            "web_search_options"
        ],
        "inputs": [
            {
                "name": "system_prompt",
                "display_name": "System Prompt",
                "type": "string or message",
                "description": "System prompt for the model",
                "default": null
            },
            {
                "name": "messages",
                "display_name": "Messages",
                "type": "array of messages or message or string",
                "description": "Array of chat messages",
                "required": true
            },
            {
                "name": "temperature",
                "display_name": "Temperature",
                "type": "number",
                "description": "Controls randomness (0-2)",
                "default": null
            },
            {
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "type": "number",
                "description": "Maximum tokens to generate",
                "default": null
            },
            {
                "name": "top_p",
                "display_name": "Top P",
                "type": "number",
                "description": "Controls diversity via nucleus sampling",
                "default": null
            },
            {
                "name": "frequency_penalty",
                "display_name": "Frequency Penalty",
                "type": "number",
                "description": "Reduces repetition (-2 to 2)",
                "default": null
            },
            {
                "name": "include_reasoning",
                "display_name": "Include Reasoning",
                "type": "boolean",
                "description": "Include reasoning in response",
                "default": null
            },
            {
                "name": "presence_penalty",
                "display_name": "Presence Penalty",
                "type": "number",
                "description": "Encourages new topics (-2 to 2)",
                "default": null
            },
            {
                "name": "reasoning",
                "display_name": "Reasoning",
                "type": "boolean",
                "description": "Internal reasoning mode",
                "default": null
            }
        ],
        "outputs": [
            {
                "name": "content",
                "display_name": "Content",
                "can_stream": true,
                "type": "string",
                "description": "The content portion of the generated response message."
            },
            {
                "name": "message",
                "display_name": "Message",
                "type": "message",
                "can_stream": true,
                "description": "The full generated response message."
            },
            {
                "name": "role",
                "display_name": "Role",
                "can_stream": true,
                "type": "string",
                "description": "Role of the response (usually 'assistant')"
            },
            {
                "name": "finish_reason",
                "display_name": "Finish Reason",
                "type": "string",
                "description": "Why the completion finished"
            },
            {
                "name": "usage",
                "display_name": "Token Usage",
                "type": "object",
                "description": "Token usage statistics"
            },
            {
                "name": "cost_total",
                "display_name": "Total Cost",
                "type": "number",
                "description": "Total cost for processing this request (USD)"
            },
            {
                "name": "cost_itemized",
                "display_name": "Itemized Cost",
                "type": "array",
                "description": "Detailed breakdown of costs"
            },
            {
                "name": "annotations",
                "display_name": "Annotations",
                "type": "array",
                "description": "Array of annotations and citations from the response"
            },
            {
                "name": "citations",
                "display_name": "Citations",
                "type": "array",
                "description": "Array of citation URLs used by the model"
            },
            {
                "name": "reasoning",
                "display_name": "Reasoning",
                "type": "string",
                "description": "The detailed reasoning chain from the model"
            },
            {
                "name": "refusal",
                "display_name": "Refusal",
                "type": "string",
                "description": "Model refusal response (if any)"
            }
        ],
        "pricing": {
            "reference": "https://openrouter.ai/models",
            "items": [
                {
                    "key": "input_cost_per_million",
                    "label": "Input Tokens (per 1M)",
                    "cost": 2,
                    "currency": "USD"
                },
                {
                    "key": "output_cost_per_million",
                    "label": "Output Tokens (per 1M)",
                    "cost": 8,
                    "currency": "USD"
                }
            ]
        },
        "id": "perplexity-sonar-deep-research"
    },
    {
        "display_name": "Perplexity: Sonar Pro",
        "description": "Note: Sonar Pro pricing includes Perplexity search pricing. See [details here](https://docs.perplexity.ai/guides/pricing#detailed-pricing-breakdown-for-sonar-reasoning-pro-and-sonar-pro)\n\nFor enterprises seeking more advanced capabilities, the Sonar Pro API can handle in-depth, multi-step queries with added extensibility, like double the number of citations per search as Sonar on average. Plus, with a larger context window, it can handle longer and more nuanced searches and follow-up questions. ",
        "category": "llm",
        "provider": "perplexity",
        "accepts_plugins": false,
        "model_id": "perplexity/sonar-pro",
        "context_length": 200000,
        "supported_parameters": [
            "frequency_penalty",
            "max_tokens",
            "presence_penalty",
            "temperature",
            "top_k",
            "top_p",
            "web_search_options"
        ],
        "inputs": [
            {
                "name": "prompt",
                "display_name": "Prompt",
                "type": "string",
                "description": "Text prompt for completion",
                "required": true
            },
            {
                "name": "temperature",
                "display_name": "Temperature",
                "type": "number",
                "description": "Controls randomness (0-2)",
                "default": null
            },
            {
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "type": "number",
                "description": "Maximum tokens to generate",
                "default": null
            },
            {
                "name": "top_p",
                "display_name": "Top P",
                "type": "number",
                "description": "Controls diversity via nucleus sampling",
                "default": null
            },
            {
                "name": "frequency_penalty",
                "display_name": "Frequency Penalty",
                "type": "number",
                "description": "Reduces repetition (-2 to 2)",
                "default": null
            },
            {
                "name": "presence_penalty",
                "display_name": "Presence Penalty",
                "type": "number",
                "description": "Encourages new topics (-2 to 2)",
                "default": null
            }
        ],
        "outputs": [
            {
                "name": "content",
                "display_name": "Content",
                "can_stream": true,
                "type": "string",
                "description": "The generated completion text"
            },
            {
                "name": "finish_reason",
                "display_name": "Finish Reason",
                "type": "string",
                "description": "Why the completion finished"
            },
            {
                "name": "usage",
                "display_name": "Token Usage",
                "type": "object",
                "description": "Token usage statistics"
            },
            {
                "name": "cost_total",
                "display_name": "Total Cost",
                "type": "number",
                "description": "Total cost for processing this request (USD)"
            },
            {
                "name": "cost_itemized",
                "display_name": "Itemized Cost",
                "type": "array",
                "description": "Detailed breakdown of costs"
            },
            {
                "name": "annotations",
                "display_name": "Annotations",
                "type": "array",
                "description": "Array of annotations and citations from the response"
            },
            {
                "name": "citations",
                "display_name": "Citations",
                "type": "array",
                "description": "Array of citation URLs used by the model"
            }
        ],
        "pricing": {
            "reference": "https://openrouter.ai/models",
            "items": [
                {
                    "key": "input_cost_per_million",
                    "label": "Input Tokens (per 1M)",
                    "cost": 3,
                    "currency": "USD"
                },
                {
                    "key": "output_cost_per_million",
                    "label": "Output Tokens (per 1M)",
                    "cost": 15,
                    "currency": "USD"
                }
            ]
        },
        "id": "perplexity-sonar-pro"
    },
    {
        "display_name": "Perplexity: Sonar Reasoning",
        "description": "Sonar Reasoning is a reasoning model provided by Perplexity based on [DeepSeek R1](/deepseek/deepseek-r1).\n\nIt allows developers to utilize long chain of thought with built-in web search. Sonar Reasoning is uncensored and hosted in US datacenters. ",
        "category": "llm",
        "provider": "perplexity",
        "accepts_plugins": false,
        "model_id": "perplexity/sonar-reasoning",
        "context_length": 127000,
        "supported_parameters": [
            "frequency_penalty",
            "include_reasoning",
            "max_tokens",
            "presence_penalty",
            "reasoning",
            "temperature",
            "top_k",
            "top_p",
            "web_search_options"
        ],
        "inputs": [
            {
                "name": "system_prompt",
                "display_name": "System Prompt",
                "type": "string or message",
                "description": "System prompt for the model",
                "default": null
            },
            {
                "name": "messages",
                "display_name": "Messages",
                "type": "array of messages or message or string",
                "description": "Array of chat messages",
                "required": true
            },
            {
                "name": "temperature",
                "display_name": "Temperature",
                "type": "number",
                "description": "Controls randomness (0-2)",
                "default": null
            },
            {
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "type": "number",
                "description": "Maximum tokens to generate",
                "default": null
            },
            {
                "name": "top_p",
                "display_name": "Top P",
                "type": "number",
                "description": "Controls diversity via nucleus sampling",
                "default": null
            },
            {
                "name": "frequency_penalty",
                "display_name": "Frequency Penalty",
                "type": "number",
                "description": "Reduces repetition (-2 to 2)",
                "default": null
            },
            {
                "name": "include_reasoning",
                "display_name": "Include Reasoning",
                "type": "boolean",
                "description": "Include reasoning in response",
                "default": null
            },
            {
                "name": "presence_penalty",
                "display_name": "Presence Penalty",
                "type": "number",
                "description": "Encourages new topics (-2 to 2)",
                "default": null
            },
            {
                "name": "reasoning",
                "display_name": "Reasoning",
                "type": "boolean",
                "description": "Internal reasoning mode",
                "default": null
            }
        ],
        "outputs": [
            {
                "name": "content",
                "display_name": "Content",
                "can_stream": true,
                "type": "string",
                "description": "The content portion of the generated response message."
            },
            {
                "name": "message",
                "display_name": "Message",
                "type": "message",
                "can_stream": true,
                "description": "The full generated response message."
            },
            {
                "name": "role",
                "display_name": "Role",
                "can_stream": true,
                "type": "string",
                "description": "Role of the response (usually 'assistant')"
            },
            {
                "name": "finish_reason",
                "display_name": "Finish Reason",
                "type": "string",
                "description": "Why the completion finished"
            },
            {
                "name": "usage",
                "display_name": "Token Usage",
                "type": "object",
                "description": "Token usage statistics"
            },
            {
                "name": "cost_total",
                "display_name": "Total Cost",
                "type": "number",
                "description": "Total cost for processing this request (USD)"
            },
            {
                "name": "cost_itemized",
                "display_name": "Itemized Cost",
                "type": "array",
                "description": "Detailed breakdown of costs"
            },
            {
                "name": "annotations",
                "display_name": "Annotations",
                "type": "array",
                "description": "Array of annotations and citations from the response"
            },
            {
                "name": "citations",
                "display_name": "Citations",
                "type": "array",
                "description": "Array of citation URLs used by the model"
            },
            {
                "name": "reasoning",
                "display_name": "Reasoning",
                "type": "string",
                "description": "The detailed reasoning chain from the model"
            },
            {
                "name": "refusal",
                "display_name": "Refusal",
                "type": "string",
                "description": "Model refusal response (if any)"
            }
        ],
        "pricing": {
            "reference": "https://openrouter.ai/models",
            "items": [
                {
                    "key": "input_cost_per_million",
                    "label": "Input Tokens (per 1M)",
                    "cost": 1,
                    "currency": "USD"
                },
                {
                    "key": "output_cost_per_million",
                    "label": "Output Tokens (per 1M)",
                    "cost": 5,
                    "currency": "USD"
                }
            ]
        },
        "id": "perplexity-sonar-reasoning"
    },
    {
        "display_name": "Perplexity: Sonar Reasoning Pro",
        "description": "Note: Sonar Pro pricing includes Perplexity search pricing. See [details here](https://docs.perplexity.ai/guides/pricing#detailed-pricing-breakdown-for-sonar-reasoning-pro-and-sonar-pro)\n\nSonar Reasoning Pro is a premier reasoning model powered by DeepSeek R1 with Chain of Thought (CoT). Designed for advanced use cases, it supports in-depth, multi-step queries with a larger context window and can surface more citations per search, enabling more comprehensive and extensible responses.",
        "category": "llm",
        "provider": "perplexity",
        "accepts_plugins": false,
        "model_id": "perplexity/sonar-reasoning-pro",
        "context_length": 128000,
        "supported_parameters": [
            "frequency_penalty",
            "include_reasoning",
            "max_tokens",
            "presence_penalty",
            "reasoning",
            "temperature",
            "top_k",
            "top_p",
            "web_search_options"
        ],
        "inputs": [
            {
                "name": "system_prompt",
                "display_name": "System Prompt",
                "type": "string or message",
                "description": "System prompt for the model",
                "default": null
            },
            {
                "name": "messages",
                "display_name": "Messages",
                "type": "array of messages or message or string",
                "description": "Array of chat messages",
                "required": true
            },
            {
                "name": "temperature",
                "display_name": "Temperature",
                "type": "number",
                "description": "Controls randomness (0-2)",
                "default": null
            },
            {
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "type": "number",
                "description": "Maximum tokens to generate",
                "default": null
            },
            {
                "name": "top_p",
                "display_name": "Top P",
                "type": "number",
                "description": "Controls diversity via nucleus sampling",
                "default": null
            },
            {
                "name": "frequency_penalty",
                "display_name": "Frequency Penalty",
                "type": "number",
                "description": "Reduces repetition (-2 to 2)",
                "default": null
            },
            {
                "name": "include_reasoning",
                "display_name": "Include Reasoning",
                "type": "boolean",
                "description": "Include reasoning in response",
                "default": null
            },
            {
                "name": "presence_penalty",
                "display_name": "Presence Penalty",
                "type": "number",
                "description": "Encourages new topics (-2 to 2)",
                "default": null
            },
            {
                "name": "reasoning",
                "display_name": "Reasoning",
                "type": "boolean",
                "description": "Internal reasoning mode",
                "default": null
            }
        ],
        "outputs": [
            {
                "name": "content",
                "display_name": "Content",
                "can_stream": true,
                "type": "string",
                "description": "The content portion of the generated response message."
            },
            {
                "name": "message",
                "display_name": "Message",
                "type": "message",
                "can_stream": true,
                "description": "The full generated response message."
            },
            {
                "name": "role",
                "display_name": "Role",
                "can_stream": true,
                "type": "string",
                "description": "Role of the response (usually 'assistant')"
            },
            {
                "name": "finish_reason",
                "display_name": "Finish Reason",
                "type": "string",
                "description": "Why the completion finished"
            },
            {
                "name": "usage",
                "display_name": "Token Usage",
                "type": "object",
                "description": "Token usage statistics"
            },
            {
                "name": "cost_total",
                "display_name": "Total Cost",
                "type": "number",
                "description": "Total cost for processing this request (USD)"
            },
            {
                "name": "cost_itemized",
                "display_name": "Itemized Cost",
                "type": "array",
                "description": "Detailed breakdown of costs"
            },
            {
                "name": "annotations",
                "display_name": "Annotations",
                "type": "array",
                "description": "Array of annotations and citations from the response"
            },
            {
                "name": "citations",
                "display_name": "Citations",
                "type": "array",
                "description": "Array of citation URLs used by the model"
            },
            {
                "name": "reasoning",
                "display_name": "Reasoning",
                "type": "string",
                "description": "The detailed reasoning chain from the model"
            },
            {
                "name": "refusal",
                "display_name": "Refusal",
                "type": "string",
                "description": "Model refusal response (if any)"
            }
        ],
        "pricing": {
            "reference": "https://openrouter.ai/models",
            "items": [
                {
                    "key": "input_cost_per_million",
                    "label": "Input Tokens (per 1M)",
                    "cost": 2,
                    "currency": "USD"
                },
                {
                    "key": "output_cost_per_million",
                    "label": "Output Tokens (per 1M)",
                    "cost": 8,
                    "currency": "USD"
                }
            ]
        },
        "id": "perplexity-sonar-reasoning-pro"
    },
    {
        "display_name": "Power",
        "description": "Raises first number to power of second",
        "category": "math",
        "inputs": [
            {
                "name": "base",
                "display_name": "Base",
                "description": "Base number",
                "type": "number",
                "required": true
            },
            {
                "name": "exponent",
                "display_name": "Exponent",
                "description": "Power to raise to",
                "type": "number",
                "required": true
            }
        ],
        "outputs": [
            {
                "name": "result",
                "display_name": "Result",
                "description": "Base raised to exponent",
                "type": "number"
            }
        ],
        "id": "power"
    },
    {
        "display_name": "Quartiles",
        "description": "Calculates quartile values of a dataset",
        "category": "math",
        "inputs": [
            {
                "name": "numbers",
                "display_name": "Numbers",
                "description": "Array of numbers to analyze",
                "type": "array of numbers",
                "required": true
            }
        ],
        "outputs": [
            {
                "name": "q1",
                "display_name": "Q1",
                "description": "First quartile (25th percentile)",
                "type": "number"
            },
            {
                "name": "q2",
                "display_name": "Q2",
                "description": "Second quartile (median, 50th percentile)",
                "type": "number"
            },
            {
                "name": "q3",
                "display_name": "Q3",
                "description": "Third quartile (75th percentile)",
                "type": "number"
            },
            {
                "name": "iqr",
                "display_name": "IQR",
                "description": "Interquartile range (Q3 - Q1)",
                "type": "number"
            }
        ],
        "id": "quartiles"
    },
    {
        "display_name": "Query Knowledge Base",
        "description": "Execute SQL queries against the orchestration's knowledge database",
        "category": "knowledge",
        "is_plugin": true,
        "is_constant": false,
        "is_output": false,
        "inputs": [
            {
                "name": "query",
                "display_name": "SQL Query",
                "type": "string",
                "description": "SQL query to execute against the knowledge database",
                "required": true
            },
            {
                "name": "params",
                "display_name": "Parameters",
                "type": "array",
                "description": "Parameters for parameterized queries (prevents SQL injection)",
                "default": []
            },
            {
                "name": "operation",
                "display_name": "Operation Type",
                "type": "string",
                "description": "Type of SQL operation (SELECT, INSERT, UPDATE, DELETE)",
                "default": "SELECT",
                "options": [
                    "SELECT",
                    "INSERT",
                    "UPDATE",
                    "DELETE"
                ]
            }
        ],
        "outputs": [
            {
                "name": "data",
                "display_name": "Query Results",
                "type": "array or object",
                "description": "Results from the SQL query"
            },
            {
                "name": "success",
                "display_name": "Success",
                "type": "boolean",
                "description": "Whether the query executed successfully"
            },
            {
                "name": "rowCount",
                "display_name": "Row Count",
                "type": "number",
                "description": "Number of rows affected or returned"
            },
            {
                "name": "operation",
                "display_name": "Operation",
                "type": "string",
                "description": "The SQL operation that was executed"
            },
            {
                "name": "error",
                "display_name": "Error",
                "type": "string",
                "description": "Error message if query failed"
            }
        ],
        "settings": [
            {
                "name": "database_path",
                "display_name": "Database Path",
                "type": "string",
                "description": "Path to the knowledge database file (relative to orchestration)",
                "default": "knowledge.db"
            },
            {
                "name": "timeout",
                "display_name": "Query Timeout",
                "type": "number",
                "description": "Query timeout in milliseconds",
                "default": 5000
            }
        ],
        "id": "query-knowledge-base"
    },
    {
        "display_name": "Qwen2.5 72B Instruct",
        "description": "Qwen2.5 72B is the latest series of Qwen large language models. Qwen2.5 brings the following improvements upon Qwen2:\n\n- Significantly more knowledge and has greatly improved capabilities in coding and mathematics, thanks to our specialized expert models in these domains.\n\n- Significant improvements in instruction following, generating long texts (over 8K tokens), understanding structured data (e.g, tables), and generating structured outputs especially JSON. More resilient to the diversity of system prompts, enhancing role-play implementation and condition-setting for chatbots.\n\n- Long-context Support up to 128K tokens and can generate up to 8K tokens.\n\n- Multilingual support for over 29 languages, including Chinese, English, French, Spanish, Portuguese, German, Italian, Russian, Japanese, Korean, Vietnamese, Thai, Arabic, and more.\n\nUsage of this model is subject to [Tongyi Qianwen LICENSE AGREEMENT](https://huggingface.co/Qwen/Qwen1.5-110B-Chat/blob/main/LICENSE).",
        "category": "llm",
        "provider": "qwen",
        "accepts_plugins": true,
        "model_id": "qwen/qwen-2.5-72b-instruct",
        "context_length": 32768,
        "supported_parameters": [
            "frequency_penalty",
            "logit_bias",
            "logprobs",
            "max_tokens",
            "min_p",
            "presence_penalty",
            "repetition_penalty",
            "response_format",
            "seed",
            "stop",
            "temperature",
            "tool_choice",
            "tools",
            "top_k",
            "top_logprobs",
            "top_p"
        ],
        "inputs": [
            {
                "name": "system_prompt",
                "display_name": "System Prompt",
                "type": "string or message",
                "description": "System prompt for the model",
                "default": null
            },
            {
                "name": "messages",
                "display_name": "Messages",
                "type": "array of messages or message or string",
                "description": "Array of chat messages",
                "required": true
            },
            {
                "name": "tools",
                "display_name": "Tools",
                "type": "tool",
                "description": "Array of tools to use",
                "default": null,
                "allow_multiple": true
            },
            {
                "name": "temperature",
                "display_name": "Temperature",
                "type": "number",
                "description": "Controls randomness (0-2)",
                "default": null
            },
            {
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "type": "number",
                "description": "Maximum tokens to generate",
                "default": null
            },
            {
                "name": "top_p",
                "display_name": "Top P",
                "type": "number",
                "description": "Controls diversity via nucleus sampling",
                "default": null
            },
            {
                "name": "frequency_penalty",
                "display_name": "Frequency Penalty",
                "type": "number",
                "description": "Reduces repetition (-2 to 2)",
                "default": null
            },
            {
                "name": "presence_penalty",
                "display_name": "Presence Penalty",
                "type": "number",
                "description": "Encourages new topics (-2 to 2)",
                "default": null
            },
            {
                "name": "response_format",
                "display_name": "Response Format",
                "type": "string or object",
                "description": "Output format specification",
                "default": null
            },
            {
                "name": "seed",
                "display_name": "Seed",
                "type": "number",
                "description": "Deterministic outputs",
                "default": null
            },
            {
                "name": "stop",
                "display_name": "Stop",
                "type": "string or array",
                "description": "Custom stop sequences",
                "default": null
            },
            {
                "name": "tool_choice",
                "display_name": "Tool Choice",
                "type": "string",
                "description": "Tool selection control",
                "default": null
            }
        ],
        "outputs": [
            {
                "name": "content",
                "display_name": "Content",
                "can_stream": true,
                "type": "string",
                "description": "The content portion of the generated response message."
            },
            {
                "name": "message",
                "display_name": "Message",
                "type": "message",
                "can_stream": true,
                "description": "The full generated response message."
            },
            {
                "name": "role",
                "display_name": "Role",
                "can_stream": true,
                "type": "string",
                "description": "Role of the response (usually 'assistant')"
            },
            {
                "name": "tool_calls",
                "display_name": "Tool Calls",
                "type": "array of tools",
                "description": "Tool calls made by the model"
            },
            {
                "name": "finish_reason",
                "display_name": "Finish Reason",
                "type": "string",
                "description": "Why the completion finished"
            },
            {
                "name": "usage",
                "display_name": "Token Usage",
                "type": "object",
                "description": "Token usage statistics"
            },
            {
                "name": "cost_total",
                "display_name": "Total Cost",
                "type": "number",
                "description": "Total cost for processing this request (USD)"
            },
            {
                "name": "cost_itemized",
                "display_name": "Itemized Cost",
                "type": "array",
                "description": "Detailed breakdown of costs"
            },
            {
                "name": "logprobs",
                "display_name": "Log Probabilities",
                "type": "object",
                "description": "Token probabilities and logprobs from the model"
            }
        ],
        "pricing": {
            "reference": "https://openrouter.ai/models",
            "items": [
                {
                    "key": "input_cost_per_million",
                    "label": "Input Tokens (per 1M)",
                    "cost": 0.0666396,
                    "currency": "USD"
                },
                {
                    "key": "output_cost_per_million",
                    "label": "Output Tokens (per 1M)",
                    "cost": 0.26668800000000004,
                    "currency": "USD"
                }
            ]
        },
        "id": "qwen-qwen-2-5-72b-instruct"
    },
    {
        "display_name": "Qwen2.5 72B Instruct (free)",
        "description": "Qwen2.5 72B is the latest series of Qwen large language models. Qwen2.5 brings the following improvements upon Qwen2:\n\n- Significantly more knowledge and has greatly improved capabilities in coding and mathematics, thanks to our specialized expert models in these domains.\n\n- Significant improvements in instruction following, generating long texts (over 8K tokens), understanding structured data (e.g, tables), and generating structured outputs especially JSON. More resilient to the diversity of system prompts, enhancing role-play implementation and condition-setting for chatbots.\n\n- Long-context Support up to 128K tokens and can generate up to 8K tokens.\n\n- Multilingual support for over 29 languages, including Chinese, English, French, Spanish, Portuguese, German, Italian, Russian, Japanese, Korean, Vietnamese, Thai, Arabic, and more.\n\nUsage of this model is subject to [Tongyi Qianwen LICENSE AGREEMENT](https://huggingface.co/Qwen/Qwen1.5-110B-Chat/blob/main/LICENSE).",
        "category": "llm",
        "provider": "qwen",
        "accepts_plugins": false,
        "model_id": "qwen/qwen-2.5-72b-instruct:free",
        "context_length": 32768,
        "supported_parameters": [
            "frequency_penalty",
            "logit_bias",
            "logprobs",
            "max_tokens",
            "min_p",
            "presence_penalty",
            "repetition_penalty",
            "seed",
            "stop",
            "temperature",
            "top_k",
            "top_logprobs",
            "top_p"
        ],
        "inputs": [
            {
                "name": "system_prompt",
                "display_name": "System Prompt",
                "type": "string or message",
                "description": "System prompt for the model",
                "default": null
            },
            {
                "name": "messages",
                "display_name": "Messages",
                "type": "array of messages or message or string",
                "description": "Array of chat messages",
                "required": true
            },
            {
                "name": "temperature",
                "display_name": "Temperature",
                "type": "number",
                "description": "Controls randomness (0-2)",
                "default": null
            },
            {
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "type": "number",
                "description": "Maximum tokens to generate",
                "default": null
            },
            {
                "name": "top_p",
                "display_name": "Top P",
                "type": "number",
                "description": "Controls diversity via nucleus sampling",
                "default": null
            },
            {
                "name": "frequency_penalty",
                "display_name": "Frequency Penalty",
                "type": "number",
                "description": "Reduces repetition (-2 to 2)",
                "default": null
            },
            {
                "name": "presence_penalty",
                "display_name": "Presence Penalty",
                "type": "number",
                "description": "Encourages new topics (-2 to 2)",
                "default": null
            },
            {
                "name": "seed",
                "display_name": "Seed",
                "type": "number",
                "description": "Deterministic outputs",
                "default": null
            },
            {
                "name": "stop",
                "display_name": "Stop",
                "type": "string or array",
                "description": "Custom stop sequences",
                "default": null
            }
        ],
        "outputs": [
            {
                "name": "content",
                "display_name": "Content",
                "can_stream": true,
                "type": "string",
                "description": "The content portion of the generated response message."
            },
            {
                "name": "message",
                "display_name": "Message",
                "type": "message",
                "can_stream": true,
                "description": "The full generated response message."
            },
            {
                "name": "role",
                "display_name": "Role",
                "can_stream": true,
                "type": "string",
                "description": "Role of the response (usually 'assistant')"
            },
            {
                "name": "finish_reason",
                "display_name": "Finish Reason",
                "type": "string",
                "description": "Why the completion finished"
            },
            {
                "name": "usage",
                "display_name": "Token Usage",
                "type": "object",
                "description": "Token usage statistics"
            },
            {
                "name": "cost_total",
                "display_name": "Total Cost",
                "type": "number",
                "description": "Total cost for processing this request (USD)"
            },
            {
                "name": "cost_itemized",
                "display_name": "Itemized Cost",
                "type": "array",
                "description": "Detailed breakdown of costs"
            },
            {
                "name": "logprobs",
                "display_name": "Log Probabilities",
                "type": "object",
                "description": "Token probabilities and logprobs from the model"
            }
        ],
        "pricing": {
            "reference": "https://openrouter.ai/models",
            "items": [
                {
                    "key": "input_cost_per_million",
                    "label": "Input Tokens (per 1M)",
                    "cost": 0,
                    "currency": "USD"
                },
                {
                    "key": "output_cost_per_million",
                    "label": "Output Tokens (per 1M)",
                    "cost": 0,
                    "currency": "USD"
                }
            ]
        },
        "id": "qwen-qwen-2-5-72b-instruct-free"
    },
    {
        "display_name": "Qwen2.5 7B Instruct",
        "description": "Qwen2.5 7B is the latest series of Qwen large language models. Qwen2.5 brings the following improvements upon Qwen2:\n\n- Significantly more knowledge and has greatly improved capabilities in coding and mathematics, thanks to our specialized expert models in these domains.\n\n- Significant improvements in instruction following, generating long texts (over 8K tokens), understanding structured data (e.g, tables), and generating structured outputs especially JSON. More resilient to the diversity of system prompts, enhancing role-play implementation and condition-setting for chatbots.\n\n- Long-context Support up to 128K tokens and can generate up to 8K tokens.\n\n- Multilingual support for over 29 languages, including Chinese, English, French, Spanish, Portuguese, German, Italian, Russian, Japanese, Korean, Vietnamese, Thai, Arabic, and more.\n\nUsage of this model is subject to [Tongyi Qianwen LICENSE AGREEMENT](https://huggingface.co/Qwen/Qwen1.5-110B-Chat/blob/main/LICENSE).",
        "category": "llm",
        "provider": "qwen",
        "accepts_plugins": false,
        "model_id": "qwen/qwen-2.5-7b-instruct",
        "context_length": 65536,
        "supported_parameters": [
            "frequency_penalty",
            "logit_bias",
            "max_tokens",
            "min_p",
            "presence_penalty",
            "repetition_penalty",
            "response_format",
            "seed",
            "stop",
            "structured_outputs",
            "temperature",
            "top_k",
            "top_p"
        ],
        "inputs": [
            {
                "name": "system_prompt",
                "display_name": "System Prompt",
                "type": "string or message",
                "description": "System prompt for the model",
                "default": null
            },
            {
                "name": "messages",
                "display_name": "Messages",
                "type": "array of messages or message or string",
                "description": "Array of chat messages",
                "required": true
            },
            {
                "name": "temperature",
                "display_name": "Temperature",
                "type": "number",
                "description": "Controls randomness (0-2)",
                "default": null
            },
            {
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "type": "number",
                "description": "Maximum tokens to generate",
                "default": null
            },
            {
                "name": "top_p",
                "display_name": "Top P",
                "type": "number",
                "description": "Controls diversity via nucleus sampling",
                "default": null
            },
            {
                "name": "frequency_penalty",
                "display_name": "Frequency Penalty",
                "type": "number",
                "description": "Reduces repetition (-2 to 2)",
                "default": null
            },
            {
                "name": "presence_penalty",
                "display_name": "Presence Penalty",
                "type": "number",
                "description": "Encourages new topics (-2 to 2)",
                "default": null
            },
            {
                "name": "response_format",
                "display_name": "Response Format",
                "type": "string or object",
                "description": "Output format specification",
                "default": null
            },
            {
                "name": "seed",
                "display_name": "Seed",
                "type": "number",
                "description": "Deterministic outputs",
                "default": null
            },
            {
                "name": "stop",
                "display_name": "Stop",
                "type": "string or array",
                "description": "Custom stop sequences",
                "default": null
            },
            {
                "name": "structured_outputs",
                "display_name": "Structured Outputs",
                "type": "string or object",
                "description": "JSON schema enforcement",
                "default": null
            }
        ],
        "outputs": [
            {
                "name": "content",
                "display_name": "Content",
                "can_stream": true,
                "type": "string",
                "description": "The content portion of the generated response message."
            },
            {
                "name": "message",
                "display_name": "Message",
                "type": "message",
                "can_stream": true,
                "description": "The full generated response message."
            },
            {
                "name": "role",
                "display_name": "Role",
                "can_stream": true,
                "type": "string",
                "description": "Role of the response (usually 'assistant')"
            },
            {
                "name": "finish_reason",
                "display_name": "Finish Reason",
                "type": "string",
                "description": "Why the completion finished"
            },
            {
                "name": "usage",
                "display_name": "Token Usage",
                "type": "object",
                "description": "Token usage statistics"
            },
            {
                "name": "cost_total",
                "display_name": "Total Cost",
                "type": "number",
                "description": "Total cost for processing this request (USD)"
            },
            {
                "name": "cost_itemized",
                "display_name": "Itemized Cost",
                "type": "array",
                "description": "Detailed breakdown of costs"
            }
        ],
        "pricing": {
            "reference": "https://openrouter.ai/models",
            "items": [
                {
                    "key": "input_cost_per_million",
                    "label": "Input Tokens (per 1M)",
                    "cost": 0.04,
                    "currency": "USD"
                },
                {
                    "key": "output_cost_per_million",
                    "label": "Output Tokens (per 1M)",
                    "cost": 0.09999999999999999,
                    "currency": "USD"
                }
            ]
        },
        "id": "qwen-qwen-2-5-7b-instruct"
    },
    {
        "display_name": "Qwen2.5 Coder 32B Instruct",
        "description": "Qwen2.5-Coder is the latest series of Code-Specific Qwen large language models (formerly known as CodeQwen). Qwen2.5-Coder brings the following improvements upon CodeQwen1.5:\n\n- Significantly improvements in **code generation**, **code reasoning** and **code fixing**. \n- A more comprehensive foundation for real-world applications such as **Code Agents**. Not only enhancing coding capabilities but also maintaining its strengths in mathematics and general competencies.\n\nTo read more about its evaluation results, check out [Qwen 2.5 Coder's blog](https://qwenlm.github.io/blog/qwen2.5-coder-family/).",
        "category": "llm",
        "provider": "qwen",
        "accepts_plugins": false,
        "model_id": "qwen/qwen-2.5-coder-32b-instruct",
        "context_length": 32768,
        "supported_parameters": [
            "frequency_penalty",
            "logit_bias",
            "logprobs",
            "max_tokens",
            "min_p",
            "presence_penalty",
            "repetition_penalty",
            "response_format",
            "seed",
            "stop",
            "temperature",
            "top_k",
            "top_logprobs",
            "top_p"
        ],
        "inputs": [
            {
                "name": "system_prompt",
                "display_name": "System Prompt",
                "type": "string or message",
                "description": "System prompt for the model",
                "default": null
            },
            {
                "name": "messages",
                "display_name": "Messages",
                "type": "array of messages or message or string",
                "description": "Array of chat messages",
                "required": true
            },
            {
                "name": "temperature",
                "display_name": "Temperature",
                "type": "number",
                "description": "Controls randomness (0-2)",
                "default": null
            },
            {
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "type": "number",
                "description": "Maximum tokens to generate",
                "default": null
            },
            {
                "name": "top_p",
                "display_name": "Top P",
                "type": "number",
                "description": "Controls diversity via nucleus sampling",
                "default": null
            },
            {
                "name": "frequency_penalty",
                "display_name": "Frequency Penalty",
                "type": "number",
                "description": "Reduces repetition (-2 to 2)",
                "default": null
            },
            {
                "name": "presence_penalty",
                "display_name": "Presence Penalty",
                "type": "number",
                "description": "Encourages new topics (-2 to 2)",
                "default": null
            },
            {
                "name": "response_format",
                "display_name": "Response Format",
                "type": "string or object",
                "description": "Output format specification",
                "default": null
            },
            {
                "name": "seed",
                "display_name": "Seed",
                "type": "number",
                "description": "Deterministic outputs",
                "default": null
            },
            {
                "name": "stop",
                "display_name": "Stop",
                "type": "string or array",
                "description": "Custom stop sequences",
                "default": null
            }
        ],
        "outputs": [
            {
                "name": "content",
                "display_name": "Content",
                "can_stream": true,
                "type": "string",
                "description": "The content portion of the generated response message."
            },
            {
                "name": "message",
                "display_name": "Message",
                "type": "message",
                "can_stream": true,
                "description": "The full generated response message."
            },
            {
                "name": "role",
                "display_name": "Role",
                "can_stream": true,
                "type": "string",
                "description": "Role of the response (usually 'assistant')"
            },
            {
                "name": "finish_reason",
                "display_name": "Finish Reason",
                "type": "string",
                "description": "Why the completion finished"
            },
            {
                "name": "usage",
                "display_name": "Token Usage",
                "type": "object",
                "description": "Token usage statistics"
            },
            {
                "name": "cost_total",
                "display_name": "Total Cost",
                "type": "number",
                "description": "Total cost for processing this request (USD)"
            },
            {
                "name": "cost_itemized",
                "display_name": "Itemized Cost",
                "type": "array",
                "description": "Detailed breakdown of costs"
            },
            {
                "name": "logprobs",
                "display_name": "Log Probabilities",
                "type": "object",
                "description": "Token probabilities and logprobs from the model"
            }
        ],
        "pricing": {
            "reference": "https://openrouter.ai/models",
            "items": [
                {
                    "key": "input_cost_per_million",
                    "label": "Input Tokens (per 1M)",
                    "cost": 0.0499797,
                    "currency": "USD"
                },
                {
                    "key": "output_cost_per_million",
                    "label": "Output Tokens (per 1M)",
                    "cost": 0.200016,
                    "currency": "USD"
                }
            ]
        },
        "id": "qwen-qwen-2-5-coder-32b-instruct"
    },
    {
        "display_name": "Qwen2.5 Coder 32B Instruct (free)",
        "description": "Qwen2.5-Coder is the latest series of Code-Specific Qwen large language models (formerly known as CodeQwen). Qwen2.5-Coder brings the following improvements upon CodeQwen1.5:\n\n- Significantly improvements in **code generation**, **code reasoning** and **code fixing**. \n- A more comprehensive foundation for real-world applications such as **Code Agents**. Not only enhancing coding capabilities but also maintaining its strengths in mathematics and general competencies.\n\nTo read more about its evaluation results, check out [Qwen 2.5 Coder's blog](https://qwenlm.github.io/blog/qwen2.5-coder-family/).",
        "category": "llm",
        "provider": "qwen",
        "accepts_plugins": false,
        "model_id": "qwen/qwen-2.5-coder-32b-instruct:free",
        "context_length": 32768,
        "supported_parameters": [
            "frequency_penalty",
            "logit_bias",
            "logprobs",
            "max_tokens",
            "min_p",
            "presence_penalty",
            "repetition_penalty",
            "seed",
            "stop",
            "temperature",
            "top_k",
            "top_logprobs",
            "top_p"
        ],
        "inputs": [
            {
                "name": "system_prompt",
                "display_name": "System Prompt",
                "type": "string or message",
                "description": "System prompt for the model",
                "default": null
            },
            {
                "name": "messages",
                "display_name": "Messages",
                "type": "array of messages or message or string",
                "description": "Array of chat messages",
                "required": true
            },
            {
                "name": "temperature",
                "display_name": "Temperature",
                "type": "number",
                "description": "Controls randomness (0-2)",
                "default": null
            },
            {
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "type": "number",
                "description": "Maximum tokens to generate",
                "default": null
            },
            {
                "name": "top_p",
                "display_name": "Top P",
                "type": "number",
                "description": "Controls diversity via nucleus sampling",
                "default": null
            },
            {
                "name": "frequency_penalty",
                "display_name": "Frequency Penalty",
                "type": "number",
                "description": "Reduces repetition (-2 to 2)",
                "default": null
            },
            {
                "name": "presence_penalty",
                "display_name": "Presence Penalty",
                "type": "number",
                "description": "Encourages new topics (-2 to 2)",
                "default": null
            },
            {
                "name": "seed",
                "display_name": "Seed",
                "type": "number",
                "description": "Deterministic outputs",
                "default": null
            },
            {
                "name": "stop",
                "display_name": "Stop",
                "type": "string or array",
                "description": "Custom stop sequences",
                "default": null
            }
        ],
        "outputs": [
            {
                "name": "content",
                "display_name": "Content",
                "can_stream": true,
                "type": "string",
                "description": "The content portion of the generated response message."
            },
            {
                "name": "message",
                "display_name": "Message",
                "type": "message",
                "can_stream": true,
                "description": "The full generated response message."
            },
            {
                "name": "role",
                "display_name": "Role",
                "can_stream": true,
                "type": "string",
                "description": "Role of the response (usually 'assistant')"
            },
            {
                "name": "finish_reason",
                "display_name": "Finish Reason",
                "type": "string",
                "description": "Why the completion finished"
            },
            {
                "name": "usage",
                "display_name": "Token Usage",
                "type": "object",
                "description": "Token usage statistics"
            },
            {
                "name": "cost_total",
                "display_name": "Total Cost",
                "type": "number",
                "description": "Total cost for processing this request (USD)"
            },
            {
                "name": "cost_itemized",
                "display_name": "Itemized Cost",
                "type": "array",
                "description": "Detailed breakdown of costs"
            },
            {
                "name": "logprobs",
                "display_name": "Log Probabilities",
                "type": "object",
                "description": "Token probabilities and logprobs from the model"
            }
        ],
        "pricing": {
            "reference": "https://openrouter.ai/models",
            "items": [
                {
                    "key": "input_cost_per_million",
                    "label": "Input Tokens (per 1M)",
                    "cost": 0,
                    "currency": "USD"
                },
                {
                    "key": "output_cost_per_million",
                    "label": "Output Tokens (per 1M)",
                    "cost": 0,
                    "currency": "USD"
                }
            ]
        },
        "id": "qwen-qwen-2-5-coder-32b-instruct-free"
    },
    {
        "display_name": "Qwen: Qwen2.5-VL 7B Instruct",
        "description": "Qwen2.5 VL 7B is a multimodal LLM from the Qwen Team with the following key enhancements:\n\n- SoTA understanding of images of various resolution & ratio: Qwen2.5-VL achieves state-of-the-art performance on visual understanding benchmarks, including MathVista, DocVQA, RealWorldQA, MTVQA, etc.\n\n- Understanding videos of 20min+: Qwen2.5-VL can understand videos over 20 minutes for high-quality video-based question answering, dialog, content creation, etc.\n\n- Agent that can operate your mobiles, robots, etc.: with the abilities of complex reasoning and decision making, Qwen2.5-VL can be integrated with devices like mobile phones, robots, etc., for automatic operation based on visual environment and text instructions.\n\n- Multilingual Support: to serve global users, besides English and Chinese, Qwen2.5-VL now supports the understanding of texts in different languages inside images, including most European languages, Japanese, Korean, Arabic, Vietnamese, etc.\n\nFor more details, see this [blog post](https://qwenlm.github.io/blog/qwen2-vl/) and [GitHub repo](https://github.com/QwenLM/Qwen2-VL).\n\nUsage of this model is subject to [Tongyi Qianwen LICENSE AGREEMENT](https://huggingface.co/Qwen/Qwen1.5-110B-Chat/blob/main/LICENSE).",
        "category": "llm",
        "provider": "qwen",
        "accepts_plugins": false,
        "model_id": "qwen/qwen-2.5-vl-7b-instruct",
        "context_length": 32768,
        "supported_parameters": [
            "frequency_penalty",
            "logit_bias",
            "logprobs",
            "max_tokens",
            "min_p",
            "presence_penalty",
            "repetition_penalty",
            "response_format",
            "seed",
            "stop",
            "structured_outputs",
            "temperature",
            "top_k",
            "top_logprobs",
            "top_p"
        ],
        "inputs": [
            {
                "name": "prompt",
                "display_name": "Prompt",
                "type": "string",
                "description": "Text prompt for completion",
                "required": true
            },
            {
                "name": "temperature",
                "display_name": "Temperature",
                "type": "number",
                "description": "Controls randomness (0-2)",
                "default": null
            },
            {
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "type": "number",
                "description": "Maximum tokens to generate",
                "default": null
            },
            {
                "name": "top_p",
                "display_name": "Top P",
                "type": "number",
                "description": "Controls diversity via nucleus sampling",
                "default": null
            },
            {
                "name": "frequency_penalty",
                "display_name": "Frequency Penalty",
                "type": "number",
                "description": "Reduces repetition (-2 to 2)",
                "default": null
            },
            {
                "name": "presence_penalty",
                "display_name": "Presence Penalty",
                "type": "number",
                "description": "Encourages new topics (-2 to 2)",
                "default": null
            },
            {
                "name": "response_format",
                "display_name": "Response Format",
                "type": "string or object",
                "description": "Output format specification",
                "default": null
            },
            {
                "name": "seed",
                "display_name": "Seed",
                "type": "number",
                "description": "Deterministic outputs",
                "default": null
            },
            {
                "name": "stop",
                "display_name": "Stop",
                "type": "string or array",
                "description": "Custom stop sequences",
                "default": null
            },
            {
                "name": "structured_outputs",
                "display_name": "Structured Outputs",
                "type": "string or object",
                "description": "JSON schema enforcement",
                "default": null
            }
        ],
        "outputs": [
            {
                "name": "content",
                "display_name": "Content",
                "can_stream": true,
                "type": "string",
                "description": "The generated completion text"
            },
            {
                "name": "finish_reason",
                "display_name": "Finish Reason",
                "type": "string",
                "description": "Why the completion finished"
            },
            {
                "name": "usage",
                "display_name": "Token Usage",
                "type": "object",
                "description": "Token usage statistics"
            },
            {
                "name": "cost_total",
                "display_name": "Total Cost",
                "type": "number",
                "description": "Total cost for processing this request (USD)"
            },
            {
                "name": "cost_itemized",
                "display_name": "Itemized Cost",
                "type": "array",
                "description": "Detailed breakdown of costs"
            },
            {
                "name": "logprobs",
                "display_name": "Log Probabilities",
                "type": "object",
                "description": "Token probabilities and logprobs from the model"
            }
        ],
        "pricing": {
            "reference": "https://openrouter.ai/models",
            "items": [
                {
                    "key": "input_cost_per_million",
                    "label": "Input Tokens (per 1M)",
                    "cost": 0.19999999999999998,
                    "currency": "USD"
                },
                {
                    "key": "output_cost_per_million",
                    "label": "Output Tokens (per 1M)",
                    "cost": 0.19999999999999998,
                    "currency": "USD"
                }
            ]
        },
        "id": "qwen-qwen-2-5-vl-7b-instruct"
    },
    {
        "display_name": "Qwen 2 72B Instruct",
        "description": "Qwen2 72B is a transformer-based model that excels in language understanding, multilingual capabilities, coding, mathematics, and reasoning.\n\nIt features SwiGLU activation, attention QKV bias, and group query attention. It is pretrained on extensive data with supervised finetuning and direct preference optimization.\n\nFor more details, see this [blog post](https://qwenlm.github.io/blog/qwen2/) and [GitHub repo](https://github.com/QwenLM/Qwen2).\n\nUsage of this model is subject to [Tongyi Qianwen LICENSE AGREEMENT](https://huggingface.co/Qwen/Qwen1.5-110B-Chat/blob/main/LICENSE).",
        "category": "llm",
        "provider": "qwen",
        "accepts_plugins": false,
        "model_id": "qwen/qwen-2-72b-instruct",
        "context_length": 32768,
        "supported_parameters": [
            "frequency_penalty",
            "logit_bias",
            "max_tokens",
            "min_p",
            "presence_penalty",
            "repetition_penalty",
            "stop",
            "temperature",
            "top_k",
            "top_p"
        ],
        "inputs": [
            {
                "name": "system_prompt",
                "display_name": "System Prompt",
                "type": "string or message",
                "description": "System prompt for the model",
                "default": null
            },
            {
                "name": "messages",
                "display_name": "Messages",
                "type": "array of messages or message or string",
                "description": "Array of chat messages",
                "required": true
            },
            {
                "name": "temperature",
                "display_name": "Temperature",
                "type": "number",
                "description": "Controls randomness (0-2)",
                "default": null
            },
            {
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "type": "number",
                "description": "Maximum tokens to generate",
                "default": null
            },
            {
                "name": "top_p",
                "display_name": "Top P",
                "type": "number",
                "description": "Controls diversity via nucleus sampling",
                "default": null
            },
            {
                "name": "frequency_penalty",
                "display_name": "Frequency Penalty",
                "type": "number",
                "description": "Reduces repetition (-2 to 2)",
                "default": null
            },
            {
                "name": "presence_penalty",
                "display_name": "Presence Penalty",
                "type": "number",
                "description": "Encourages new topics (-2 to 2)",
                "default": null
            },
            {
                "name": "stop",
                "display_name": "Stop",
                "type": "string or array",
                "description": "Custom stop sequences",
                "default": null
            }
        ],
        "outputs": [
            {
                "name": "content",
                "display_name": "Content",
                "can_stream": true,
                "type": "string",
                "description": "The content portion of the generated response message."
            },
            {
                "name": "message",
                "display_name": "Message",
                "type": "message",
                "can_stream": true,
                "description": "The full generated response message."
            },
            {
                "name": "role",
                "display_name": "Role",
                "can_stream": true,
                "type": "string",
                "description": "Role of the response (usually 'assistant')"
            },
            {
                "name": "finish_reason",
                "display_name": "Finish Reason",
                "type": "string",
                "description": "Why the completion finished"
            },
            {
                "name": "usage",
                "display_name": "Token Usage",
                "type": "object",
                "description": "Token usage statistics"
            },
            {
                "name": "cost_total",
                "display_name": "Total Cost",
                "type": "number",
                "description": "Total cost for processing this request (USD)"
            },
            {
                "name": "cost_itemized",
                "display_name": "Itemized Cost",
                "type": "array",
                "description": "Detailed breakdown of costs"
            }
        ],
        "pricing": {
            "reference": "https://openrouter.ai/models",
            "items": [
                {
                    "key": "input_cost_per_million",
                    "label": "Input Tokens (per 1M)",
                    "cost": 0.8999999999999999,
                    "currency": "USD"
                },
                {
                    "key": "output_cost_per_million",
                    "label": "Output Tokens (per 1M)",
                    "cost": 0.8999999999999999,
                    "currency": "USD"
                }
            ]
        },
        "id": "qwen-qwen-2-72b-instruct"
    },
    {
        "display_name": "Qwen: Qwen-Max ",
        "description": "Qwen-Max, based on Qwen2.5, provides the best inference performance among [Qwen models](/qwen), especially for complex multi-step tasks. It's a large-scale MoE model that has been pretrained on over 20 trillion tokens and further post-trained with curated Supervised Fine-Tuning (SFT) and Reinforcement Learning from Human Feedback (RLHF) methodologies. The parameter count is unknown.",
        "category": "llm",
        "provider": "qwen",
        "accepts_plugins": true,
        "model_id": "qwen/qwen-max",
        "context_length": 32768,
        "supported_parameters": [
            "max_tokens",
            "presence_penalty",
            "response_format",
            "seed",
            "temperature",
            "tool_choice",
            "tools",
            "top_p"
        ],
        "inputs": [
            {
                "name": "system_prompt",
                "display_name": "System Prompt",
                "type": "string or message",
                "description": "System prompt for the model",
                "default": null
            },
            {
                "name": "messages",
                "display_name": "Messages",
                "type": "array of messages or message or string",
                "description": "Array of chat messages",
                "required": true
            },
            {
                "name": "tools",
                "display_name": "Tools",
                "type": "tool",
                "description": "Array of tools to use",
                "default": null,
                "allow_multiple": true
            },
            {
                "name": "temperature",
                "display_name": "Temperature",
                "type": "number",
                "description": "Controls randomness (0-2)",
                "default": null
            },
            {
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "type": "number",
                "description": "Maximum tokens to generate",
                "default": null
            },
            {
                "name": "top_p",
                "display_name": "Top P",
                "type": "number",
                "description": "Controls diversity via nucleus sampling",
                "default": null
            },
            {
                "name": "presence_penalty",
                "display_name": "Presence Penalty",
                "type": "number",
                "description": "Encourages new topics (-2 to 2)",
                "default": null
            },
            {
                "name": "response_format",
                "display_name": "Response Format",
                "type": "string or object",
                "description": "Output format specification",
                "default": null
            },
            {
                "name": "seed",
                "display_name": "Seed",
                "type": "number",
                "description": "Deterministic outputs",
                "default": null
            },
            {
                "name": "tool_choice",
                "display_name": "Tool Choice",
                "type": "string",
                "description": "Tool selection control",
                "default": null
            }
        ],
        "outputs": [
            {
                "name": "content",
                "display_name": "Content",
                "can_stream": true,
                "type": "string",
                "description": "The content portion of the generated response message."
            },
            {
                "name": "message",
                "display_name": "Message",
                "type": "message",
                "can_stream": true,
                "description": "The full generated response message."
            },
            {
                "name": "role",
                "display_name": "Role",
                "can_stream": true,
                "type": "string",
                "description": "Role of the response (usually 'assistant')"
            },
            {
                "name": "tool_calls",
                "display_name": "Tool Calls",
                "type": "array of tools",
                "description": "Tool calls made by the model"
            },
            {
                "name": "finish_reason",
                "display_name": "Finish Reason",
                "type": "string",
                "description": "Why the completion finished"
            },
            {
                "name": "usage",
                "display_name": "Token Usage",
                "type": "object",
                "description": "Token usage statistics"
            },
            {
                "name": "cost_total",
                "display_name": "Total Cost",
                "type": "number",
                "description": "Total cost for processing this request (USD)"
            },
            {
                "name": "cost_itemized",
                "display_name": "Itemized Cost",
                "type": "array",
                "description": "Detailed breakdown of costs"
            }
        ],
        "pricing": {
            "reference": "https://openrouter.ai/models",
            "items": [
                {
                    "key": "input_cost_per_million",
                    "label": "Input Tokens (per 1M)",
                    "cost": 1.5999999999999999,
                    "currency": "USD"
                },
                {
                    "key": "output_cost_per_million",
                    "label": "Output Tokens (per 1M)",
                    "cost": 6.3999999999999995,
                    "currency": "USD"
                }
            ]
        },
        "id": "qwen-qwen-max"
    },
    {
        "display_name": "Qwen: Qwen-Plus",
        "description": "Qwen-Plus, based on the Qwen2.5 foundation model, is a 131K context model with a balanced performance, speed, and cost combination.",
        "category": "llm",
        "provider": "qwen",
        "accepts_plugins": true,
        "model_id": "qwen/qwen-plus",
        "context_length": 131072,
        "supported_parameters": [
            "max_tokens",
            "presence_penalty",
            "response_format",
            "seed",
            "temperature",
            "tool_choice",
            "tools",
            "top_p"
        ],
        "inputs": [
            {
                "name": "system_prompt",
                "display_name": "System Prompt",
                "type": "string or message",
                "description": "System prompt for the model",
                "default": null
            },
            {
                "name": "messages",
                "display_name": "Messages",
                "type": "array of messages or message or string",
                "description": "Array of chat messages",
                "required": true
            },
            {
                "name": "tools",
                "display_name": "Tools",
                "type": "tool",
                "description": "Array of tools to use",
                "default": null,
                "allow_multiple": true
            },
            {
                "name": "temperature",
                "display_name": "Temperature",
                "type": "number",
                "description": "Controls randomness (0-2)",
                "default": null
            },
            {
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "type": "number",
                "description": "Maximum tokens to generate",
                "default": null
            },
            {
                "name": "top_p",
                "display_name": "Top P",
                "type": "number",
                "description": "Controls diversity via nucleus sampling",
                "default": null
            },
            {
                "name": "presence_penalty",
                "display_name": "Presence Penalty",
                "type": "number",
                "description": "Encourages new topics (-2 to 2)",
                "default": null
            },
            {
                "name": "response_format",
                "display_name": "Response Format",
                "type": "string or object",
                "description": "Output format specification",
                "default": null
            },
            {
                "name": "seed",
                "display_name": "Seed",
                "type": "number",
                "description": "Deterministic outputs",
                "default": null
            },
            {
                "name": "tool_choice",
                "display_name": "Tool Choice",
                "type": "string",
                "description": "Tool selection control",
                "default": null
            }
        ],
        "outputs": [
            {
                "name": "content",
                "display_name": "Content",
                "can_stream": true,
                "type": "string",
                "description": "The content portion of the generated response message."
            },
            {
                "name": "message",
                "display_name": "Message",
                "type": "message",
                "can_stream": true,
                "description": "The full generated response message."
            },
            {
                "name": "role",
                "display_name": "Role",
                "can_stream": true,
                "type": "string",
                "description": "Role of the response (usually 'assistant')"
            },
            {
                "name": "tool_calls",
                "display_name": "Tool Calls",
                "type": "array of tools",
                "description": "Tool calls made by the model"
            },
            {
                "name": "finish_reason",
                "display_name": "Finish Reason",
                "type": "string",
                "description": "Why the completion finished"
            },
            {
                "name": "usage",
                "display_name": "Token Usage",
                "type": "object",
                "description": "Token usage statistics"
            },
            {
                "name": "cost_total",
                "display_name": "Total Cost",
                "type": "number",
                "description": "Total cost for processing this request (USD)"
            },
            {
                "name": "cost_itemized",
                "display_name": "Itemized Cost",
                "type": "array",
                "description": "Detailed breakdown of costs"
            }
        ],
        "pricing": {
            "reference": "https://openrouter.ai/models",
            "items": [
                {
                    "key": "input_cost_per_million",
                    "label": "Input Tokens (per 1M)",
                    "cost": 0.39999999999999997,
                    "currency": "USD"
                },
                {
                    "key": "output_cost_per_million",
                    "label": "Output Tokens (per 1M)",
                    "cost": 1.2,
                    "currency": "USD"
                }
            ]
        },
        "id": "qwen-qwen-plus"
    },
    {
        "display_name": "Qwen: Qwen-Turbo",
        "description": "Qwen-Turbo, based on Qwen2.5, is a 1M context model that provides fast speed and low cost, suitable for simple tasks.",
        "category": "llm",
        "provider": "qwen",
        "accepts_plugins": true,
        "model_id": "qwen/qwen-turbo",
        "context_length": 1000000,
        "supported_parameters": [
            "max_tokens",
            "presence_penalty",
            "response_format",
            "seed",
            "temperature",
            "tool_choice",
            "tools",
            "top_p"
        ],
        "inputs": [
            {
                "name": "system_prompt",
                "display_name": "System Prompt",
                "type": "string or message",
                "description": "System prompt for the model",
                "default": null
            },
            {
                "name": "messages",
                "display_name": "Messages",
                "type": "array of messages or message or string",
                "description": "Array of chat messages",
                "required": true
            },
            {
                "name": "tools",
                "display_name": "Tools",
                "type": "tool",
                "description": "Array of tools to use",
                "default": null,
                "allow_multiple": true
            },
            {
                "name": "temperature",
                "display_name": "Temperature",
                "type": "number",
                "description": "Controls randomness (0-2)",
                "default": null
            },
            {
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "type": "number",
                "description": "Maximum tokens to generate",
                "default": null
            },
            {
                "name": "top_p",
                "display_name": "Top P",
                "type": "number",
                "description": "Controls diversity via nucleus sampling",
                "default": null
            },
            {
                "name": "presence_penalty",
                "display_name": "Presence Penalty",
                "type": "number",
                "description": "Encourages new topics (-2 to 2)",
                "default": null
            },
            {
                "name": "response_format",
                "display_name": "Response Format",
                "type": "string or object",
                "description": "Output format specification",
                "default": null
            },
            {
                "name": "seed",
                "display_name": "Seed",
                "type": "number",
                "description": "Deterministic outputs",
                "default": null
            },
            {
                "name": "tool_choice",
                "display_name": "Tool Choice",
                "type": "string",
                "description": "Tool selection control",
                "default": null
            }
        ],
        "outputs": [
            {
                "name": "content",
                "display_name": "Content",
                "can_stream": true,
                "type": "string",
                "description": "The content portion of the generated response message."
            },
            {
                "name": "message",
                "display_name": "Message",
                "type": "message",
                "can_stream": true,
                "description": "The full generated response message."
            },
            {
                "name": "role",
                "display_name": "Role",
                "can_stream": true,
                "type": "string",
                "description": "Role of the response (usually 'assistant')"
            },
            {
                "name": "tool_calls",
                "display_name": "Tool Calls",
                "type": "array of tools",
                "description": "Tool calls made by the model"
            },
            {
                "name": "finish_reason",
                "display_name": "Finish Reason",
                "type": "string",
                "description": "Why the completion finished"
            },
            {
                "name": "usage",
                "display_name": "Token Usage",
                "type": "object",
                "description": "Token usage statistics"
            },
            {
                "name": "cost_total",
                "display_name": "Total Cost",
                "type": "number",
                "description": "Total cost for processing this request (USD)"
            },
            {
                "name": "cost_itemized",
                "display_name": "Itemized Cost",
                "type": "array",
                "description": "Detailed breakdown of costs"
            }
        ],
        "pricing": {
            "reference": "https://openrouter.ai/models",
            "items": [
                {
                    "key": "input_cost_per_million",
                    "label": "Input Tokens (per 1M)",
                    "cost": 0.049999999999999996,
                    "currency": "USD"
                },
                {
                    "key": "output_cost_per_million",
                    "label": "Output Tokens (per 1M)",
                    "cost": 0.19999999999999998,
                    "currency": "USD"
                }
            ]
        },
        "id": "qwen-qwen-turbo"
    },
    {
        "display_name": "Qwen: Qwen VL Max",
        "description": "Qwen VL Max is a visual understanding model with 7500 tokens context length. It excels in delivering optimal performance for a broader spectrum of complex tasks.\n",
        "category": "llm",
        "provider": "qwen",
        "accepts_plugins": false,
        "model_id": "qwen/qwen-vl-max",
        "context_length": 7500,
        "supported_parameters": [
            "max_tokens",
            "presence_penalty",
            "response_format",
            "seed",
            "temperature",
            "top_p"
        ],
        "inputs": [
            {
                "name": "prompt",
                "display_name": "Prompt",
                "type": "string",
                "description": "Text prompt for completion",
                "required": true
            },
            {
                "name": "temperature",
                "display_name": "Temperature",
                "type": "number",
                "description": "Controls randomness (0-2)",
                "default": null
            },
            {
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "type": "number",
                "description": "Maximum tokens to generate",
                "default": null
            },
            {
                "name": "top_p",
                "display_name": "Top P",
                "type": "number",
                "description": "Controls diversity via nucleus sampling",
                "default": null
            },
            {
                "name": "presence_penalty",
                "display_name": "Presence Penalty",
                "type": "number",
                "description": "Encourages new topics (-2 to 2)",
                "default": null
            },
            {
                "name": "response_format",
                "display_name": "Response Format",
                "type": "string or object",
                "description": "Output format specification",
                "default": null
            },
            {
                "name": "seed",
                "display_name": "Seed",
                "type": "number",
                "description": "Deterministic outputs",
                "default": null
            }
        ],
        "outputs": [
            {
                "name": "content",
                "display_name": "Content",
                "can_stream": true,
                "type": "string",
                "description": "The generated completion text"
            },
            {
                "name": "finish_reason",
                "display_name": "Finish Reason",
                "type": "string",
                "description": "Why the completion finished"
            },
            {
                "name": "usage",
                "display_name": "Token Usage",
                "type": "object",
                "description": "Token usage statistics"
            },
            {
                "name": "cost_total",
                "display_name": "Total Cost",
                "type": "number",
                "description": "Total cost for processing this request (USD)"
            },
            {
                "name": "cost_itemized",
                "display_name": "Itemized Cost",
                "type": "array",
                "description": "Detailed breakdown of costs"
            }
        ],
        "pricing": {
            "reference": "https://openrouter.ai/models",
            "items": [
                {
                    "key": "input_cost_per_million",
                    "label": "Input Tokens (per 1M)",
                    "cost": 0.7999999999999999,
                    "currency": "USD"
                },
                {
                    "key": "output_cost_per_million",
                    "label": "Output Tokens (per 1M)",
                    "cost": 3.1999999999999997,
                    "currency": "USD"
                }
            ]
        },
        "id": "qwen-qwen-vl-max"
    },
    {
        "display_name": "Qwen: Qwen VL Plus",
        "description": "Qwen's Enhanced Large Visual Language Model. Significantly upgraded for detailed recognition capabilities and text recognition abilities, supporting ultra-high pixel resolutions up to millions of pixels and extreme aspect ratios for image input. It delivers significant performance across a broad range of visual tasks.\n",
        "category": "llm",
        "provider": "qwen",
        "accepts_plugins": false,
        "model_id": "qwen/qwen-vl-plus",
        "context_length": 7500,
        "supported_parameters": [
            "max_tokens",
            "presence_penalty",
            "response_format",
            "seed",
            "temperature",
            "top_p"
        ],
        "inputs": [
            {
                "name": "prompt",
                "display_name": "Prompt",
                "type": "string",
                "description": "Text prompt for completion",
                "required": true
            },
            {
                "name": "temperature",
                "display_name": "Temperature",
                "type": "number",
                "description": "Controls randomness (0-2)",
                "default": null
            },
            {
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "type": "number",
                "description": "Maximum tokens to generate",
                "default": null
            },
            {
                "name": "top_p",
                "display_name": "Top P",
                "type": "number",
                "description": "Controls diversity via nucleus sampling",
                "default": null
            },
            {
                "name": "presence_penalty",
                "display_name": "Presence Penalty",
                "type": "number",
                "description": "Encourages new topics (-2 to 2)",
                "default": null
            },
            {
                "name": "response_format",
                "display_name": "Response Format",
                "type": "string or object",
                "description": "Output format specification",
                "default": null
            },
            {
                "name": "seed",
                "display_name": "Seed",
                "type": "number",
                "description": "Deterministic outputs",
                "default": null
            }
        ],
        "outputs": [
            {
                "name": "content",
                "display_name": "Content",
                "can_stream": true,
                "type": "string",
                "description": "The generated completion text"
            },
            {
                "name": "finish_reason",
                "display_name": "Finish Reason",
                "type": "string",
                "description": "Why the completion finished"
            },
            {
                "name": "usage",
                "display_name": "Token Usage",
                "type": "object",
                "description": "Token usage statistics"
            },
            {
                "name": "cost_total",
                "display_name": "Total Cost",
                "type": "number",
                "description": "Total cost for processing this request (USD)"
            },
            {
                "name": "cost_itemized",
                "display_name": "Itemized Cost",
                "type": "array",
                "description": "Detailed breakdown of costs"
            }
        ],
        "pricing": {
            "reference": "https://openrouter.ai/models",
            "items": [
                {
                    "key": "input_cost_per_million",
                    "label": "Input Tokens (per 1M)",
                    "cost": 0.21,
                    "currency": "USD"
                },
                {
                    "key": "output_cost_per_million",
                    "label": "Output Tokens (per 1M)",
                    "cost": 0.63,
                    "currency": "USD"
                }
            ]
        },
        "id": "qwen-qwen-vl-plus"
    },
    {
        "display_name": "Qwen: Qwen2.5 VL 32B Instruct",
        "description": "Qwen2.5-VL-32B is a multimodal vision-language model fine-tuned through reinforcement learning for enhanced mathematical reasoning, structured outputs, and visual problem-solving capabilities. It excels at visual analysis tasks, including object recognition, textual interpretation within images, and precise event localization in extended videos. Qwen2.5-VL-32B demonstrates state-of-the-art performance across multimodal benchmarks such as MMMU, MathVista, and VideoMME, while maintaining strong reasoning and clarity in text-based tasks like MMLU, mathematical problem-solving, and code generation.",
        "category": "llm",
        "provider": "qwen",
        "accepts_plugins": false,
        "model_id": "qwen/qwen2.5-vl-32b-instruct",
        "context_length": 16384,
        "supported_parameters": [
            "frequency_penalty",
            "logit_bias",
            "logprobs",
            "max_tokens",
            "min_p",
            "presence_penalty",
            "repetition_penalty",
            "response_format",
            "seed",
            "stop",
            "structured_outputs",
            "temperature",
            "top_k",
            "top_logprobs",
            "top_p"
        ],
        "inputs": [
            {
                "name": "prompt",
                "display_name": "Prompt",
                "type": "string",
                "description": "Text prompt for completion",
                "required": true
            },
            {
                "name": "temperature",
                "display_name": "Temperature",
                "type": "number",
                "description": "Controls randomness (0-2)",
                "default": null
            },
            {
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "type": "number",
                "description": "Maximum tokens to generate",
                "default": null
            },
            {
                "name": "top_p",
                "display_name": "Top P",
                "type": "number",
                "description": "Controls diversity via nucleus sampling",
                "default": null
            },
            {
                "name": "frequency_penalty",
                "display_name": "Frequency Penalty",
                "type": "number",
                "description": "Reduces repetition (-2 to 2)",
                "default": null
            },
            {
                "name": "presence_penalty",
                "display_name": "Presence Penalty",
                "type": "number",
                "description": "Encourages new topics (-2 to 2)",
                "default": null
            },
            {
                "name": "response_format",
                "display_name": "Response Format",
                "type": "string or object",
                "description": "Output format specification",
                "default": null
            },
            {
                "name": "seed",
                "display_name": "Seed",
                "type": "number",
                "description": "Deterministic outputs",
                "default": null
            },
            {
                "name": "stop",
                "display_name": "Stop",
                "type": "string or array",
                "description": "Custom stop sequences",
                "default": null
            },
            {
                "name": "structured_outputs",
                "display_name": "Structured Outputs",
                "type": "string or object",
                "description": "JSON schema enforcement",
                "default": null
            }
        ],
        "outputs": [
            {
                "name": "content",
                "display_name": "Content",
                "can_stream": true,
                "type": "string",
                "description": "The generated completion text"
            },
            {
                "name": "finish_reason",
                "display_name": "Finish Reason",
                "type": "string",
                "description": "Why the completion finished"
            },
            {
                "name": "usage",
                "display_name": "Token Usage",
                "type": "object",
                "description": "Token usage statistics"
            },
            {
                "name": "cost_total",
                "display_name": "Total Cost",
                "type": "number",
                "description": "Total cost for processing this request (USD)"
            },
            {
                "name": "cost_itemized",
                "display_name": "Itemized Cost",
                "type": "array",
                "description": "Detailed breakdown of costs"
            },
            {
                "name": "logprobs",
                "display_name": "Log Probabilities",
                "type": "object",
                "description": "Token probabilities and logprobs from the model"
            }
        ],
        "pricing": {
            "reference": "https://openrouter.ai/models",
            "items": [
                {
                    "key": "input_cost_per_million",
                    "label": "Input Tokens (per 1M)",
                    "cost": 0.01999188,
                    "currency": "USD"
                },
                {
                    "key": "output_cost_per_million",
                    "label": "Output Tokens (per 1M)",
                    "cost": 0.0800064,
                    "currency": "USD"
                }
            ]
        },
        "id": "qwen-qwen2-5-vl-32b-instruct"
    },
    {
        "display_name": "Qwen: Qwen2.5 VL 32B Instruct (free)",
        "description": "Qwen2.5-VL-32B is a multimodal vision-language model fine-tuned through reinforcement learning for enhanced mathematical reasoning, structured outputs, and visual problem-solving capabilities. It excels at visual analysis tasks, including object recognition, textual interpretation within images, and precise event localization in extended videos. Qwen2.5-VL-32B demonstrates state-of-the-art performance across multimodal benchmarks such as MMMU, MathVista, and VideoMME, while maintaining strong reasoning and clarity in text-based tasks like MMLU, mathematical problem-solving, and code generation.",
        "category": "llm",
        "provider": "qwen",
        "accepts_plugins": false,
        "model_id": "qwen/qwen2.5-vl-32b-instruct:free",
        "context_length": 8192,
        "supported_parameters": [
            "frequency_penalty",
            "logit_bias",
            "logprobs",
            "max_tokens",
            "min_p",
            "presence_penalty",
            "repetition_penalty",
            "response_format",
            "seed",
            "stop",
            "temperature",
            "top_k",
            "top_logprobs",
            "top_p"
        ],
        "inputs": [
            {
                "name": "prompt",
                "display_name": "Prompt",
                "type": "string",
                "description": "Text prompt for completion",
                "required": true
            },
            {
                "name": "temperature",
                "display_name": "Temperature",
                "type": "number",
                "description": "Controls randomness (0-2)",
                "default": null
            },
            {
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "type": "number",
                "description": "Maximum tokens to generate",
                "default": null
            },
            {
                "name": "top_p",
                "display_name": "Top P",
                "type": "number",
                "description": "Controls diversity via nucleus sampling",
                "default": null
            },
            {
                "name": "frequency_penalty",
                "display_name": "Frequency Penalty",
                "type": "number",
                "description": "Reduces repetition (-2 to 2)",
                "default": null
            },
            {
                "name": "presence_penalty",
                "display_name": "Presence Penalty",
                "type": "number",
                "description": "Encourages new topics (-2 to 2)",
                "default": null
            },
            {
                "name": "response_format",
                "display_name": "Response Format",
                "type": "string or object",
                "description": "Output format specification",
                "default": null
            },
            {
                "name": "seed",
                "display_name": "Seed",
                "type": "number",
                "description": "Deterministic outputs",
                "default": null
            },
            {
                "name": "stop",
                "display_name": "Stop",
                "type": "string or array",
                "description": "Custom stop sequences",
                "default": null
            }
        ],
        "outputs": [
            {
                "name": "content",
                "display_name": "Content",
                "can_stream": true,
                "type": "string",
                "description": "The generated completion text"
            },
            {
                "name": "finish_reason",
                "display_name": "Finish Reason",
                "type": "string",
                "description": "Why the completion finished"
            },
            {
                "name": "usage",
                "display_name": "Token Usage",
                "type": "object",
                "description": "Token usage statistics"
            },
            {
                "name": "cost_total",
                "display_name": "Total Cost",
                "type": "number",
                "description": "Total cost for processing this request (USD)"
            },
            {
                "name": "cost_itemized",
                "display_name": "Itemized Cost",
                "type": "array",
                "description": "Detailed breakdown of costs"
            },
            {
                "name": "logprobs",
                "display_name": "Log Probabilities",
                "type": "object",
                "description": "Token probabilities and logprobs from the model"
            }
        ],
        "pricing": {
            "reference": "https://openrouter.ai/models",
            "items": [
                {
                    "key": "input_cost_per_million",
                    "label": "Input Tokens (per 1M)",
                    "cost": 0,
                    "currency": "USD"
                },
                {
                    "key": "output_cost_per_million",
                    "label": "Output Tokens (per 1M)",
                    "cost": 0,
                    "currency": "USD"
                }
            ]
        },
        "id": "qwen-qwen2-5-vl-32b-instruct-free"
    },
    {
        "display_name": "Qwen: Qwen2.5 VL 72B Instruct",
        "description": "Qwen2.5-VL is proficient in recognizing common objects such as flowers, birds, fish, and insects. It is also highly capable of analyzing texts, charts, icons, graphics, and layouts within images.",
        "category": "llm",
        "provider": "qwen",
        "accepts_plugins": false,
        "model_id": "qwen/qwen2.5-vl-72b-instruct",
        "context_length": 32768,
        "supported_parameters": [
            "frequency_penalty",
            "logit_bias",
            "logprobs",
            "max_tokens",
            "min_p",
            "presence_penalty",
            "repetition_penalty",
            "seed",
            "stop",
            "temperature",
            "top_k",
            "top_logprobs",
            "top_p"
        ],
        "inputs": [
            {
                "name": "prompt",
                "display_name": "Prompt",
                "type": "string",
                "description": "Text prompt for completion",
                "required": true
            },
            {
                "name": "temperature",
                "display_name": "Temperature",
                "type": "number",
                "description": "Controls randomness (0-2)",
                "default": null
            },
            {
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "type": "number",
                "description": "Maximum tokens to generate",
                "default": null
            },
            {
                "name": "top_p",
                "display_name": "Top P",
                "type": "number",
                "description": "Controls diversity via nucleus sampling",
                "default": null
            },
            {
                "name": "frequency_penalty",
                "display_name": "Frequency Penalty",
                "type": "number",
                "description": "Reduces repetition (-2 to 2)",
                "default": null
            },
            {
                "name": "presence_penalty",
                "display_name": "Presence Penalty",
                "type": "number",
                "description": "Encourages new topics (-2 to 2)",
                "default": null
            },
            {
                "name": "seed",
                "display_name": "Seed",
                "type": "number",
                "description": "Deterministic outputs",
                "default": null
            },
            {
                "name": "stop",
                "display_name": "Stop",
                "type": "string or array",
                "description": "Custom stop sequences",
                "default": null
            }
        ],
        "outputs": [
            {
                "name": "content",
                "display_name": "Content",
                "can_stream": true,
                "type": "string",
                "description": "The generated completion text"
            },
            {
                "name": "finish_reason",
                "display_name": "Finish Reason",
                "type": "string",
                "description": "Why the completion finished"
            },
            {
                "name": "usage",
                "display_name": "Token Usage",
                "type": "object",
                "description": "Token usage statistics"
            },
            {
                "name": "cost_total",
                "display_name": "Total Cost",
                "type": "number",
                "description": "Total cost for processing this request (USD)"
            },
            {
                "name": "cost_itemized",
                "display_name": "Itemized Cost",
                "type": "array",
                "description": "Detailed breakdown of costs"
            },
            {
                "name": "logprobs",
                "display_name": "Log Probabilities",
                "type": "object",
                "description": "Token probabilities and logprobs from the model"
            }
        ],
        "pricing": {
            "reference": "https://openrouter.ai/models",
            "items": [
                {
                    "key": "input_cost_per_million",
                    "label": "Input Tokens (per 1M)",
                    "cost": 0.0999594,
                    "currency": "USD"
                },
                {
                    "key": "output_cost_per_million",
                    "label": "Output Tokens (per 1M)",
                    "cost": 0.400032,
                    "currency": "USD"
                }
            ]
        },
        "id": "qwen-qwen2-5-vl-72b-instruct"
    },
    {
        "display_name": "Qwen: Qwen2.5 VL 72B Instruct (free)",
        "description": "Qwen2.5-VL is proficient in recognizing common objects such as flowers, birds, fish, and insects. It is also highly capable of analyzing texts, charts, icons, graphics, and layouts within images.",
        "category": "llm",
        "provider": "qwen",
        "accepts_plugins": false,
        "model_id": "qwen/qwen2.5-vl-72b-instruct:free",
        "context_length": 32768,
        "supported_parameters": [
            "frequency_penalty",
            "max_tokens",
            "presence_penalty",
            "response_format",
            "seed",
            "stop",
            "structured_outputs",
            "temperature",
            "top_k",
            "top_p"
        ],
        "inputs": [
            {
                "name": "prompt",
                "display_name": "Prompt",
                "type": "string",
                "description": "Text prompt for completion",
                "required": true
            },
            {
                "name": "temperature",
                "display_name": "Temperature",
                "type": "number",
                "description": "Controls randomness (0-2)",
                "default": null
            },
            {
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "type": "number",
                "description": "Maximum tokens to generate",
                "default": null
            },
            {
                "name": "top_p",
                "display_name": "Top P",
                "type": "number",
                "description": "Controls diversity via nucleus sampling",
                "default": null
            },
            {
                "name": "frequency_penalty",
                "display_name": "Frequency Penalty",
                "type": "number",
                "description": "Reduces repetition (-2 to 2)",
                "default": null
            },
            {
                "name": "presence_penalty",
                "display_name": "Presence Penalty",
                "type": "number",
                "description": "Encourages new topics (-2 to 2)",
                "default": null
            },
            {
                "name": "response_format",
                "display_name": "Response Format",
                "type": "string or object",
                "description": "Output format specification",
                "default": null
            },
            {
                "name": "seed",
                "display_name": "Seed",
                "type": "number",
                "description": "Deterministic outputs",
                "default": null
            },
            {
                "name": "stop",
                "display_name": "Stop",
                "type": "string or array",
                "description": "Custom stop sequences",
                "default": null
            },
            {
                "name": "structured_outputs",
                "display_name": "Structured Outputs",
                "type": "string or object",
                "description": "JSON schema enforcement",
                "default": null
            }
        ],
        "outputs": [
            {
                "name": "content",
                "display_name": "Content",
                "can_stream": true,
                "type": "string",
                "description": "The generated completion text"
            },
            {
                "name": "finish_reason",
                "display_name": "Finish Reason",
                "type": "string",
                "description": "Why the completion finished"
            },
            {
                "name": "usage",
                "display_name": "Token Usage",
                "type": "object",
                "description": "Token usage statistics"
            },
            {
                "name": "cost_total",
                "display_name": "Total Cost",
                "type": "number",
                "description": "Total cost for processing this request (USD)"
            },
            {
                "name": "cost_itemized",
                "display_name": "Itemized Cost",
                "type": "array",
                "description": "Detailed breakdown of costs"
            }
        ],
        "pricing": {
            "reference": "https://openrouter.ai/models",
            "items": [
                {
                    "key": "input_cost_per_million",
                    "label": "Input Tokens (per 1M)",
                    "cost": 0,
                    "currency": "USD"
                },
                {
                    "key": "output_cost_per_million",
                    "label": "Output Tokens (per 1M)",
                    "cost": 0,
                    "currency": "USD"
                }
            ]
        },
        "id": "qwen-qwen2-5-vl-72b-instruct-free"
    },
    {
        "display_name": "Qwen: Qwen3 14B",
        "description": "Qwen3-14B is a dense 14.8B parameter causal language model from the Qwen3 series, designed for both complex reasoning and efficient dialogue. It supports seamless switching between a \"thinking\" mode for tasks like math, programming, and logical inference, and a \"non-thinking\" mode for general-purpose conversation. The model is fine-tuned for instruction-following, agent tool use, creative writing, and multilingual tasks across 100+ languages and dialects. It natively handles 32K token contexts and can extend to 131K tokens using YaRN-based scaling.",
        "category": "llm",
        "provider": "qwen",
        "accepts_plugins": true,
        "model_id": "qwen/qwen3-14b",
        "context_length": 40960,
        "supported_parameters": [
            "frequency_penalty",
            "include_reasoning",
            "logit_bias",
            "logprobs",
            "max_tokens",
            "min_p",
            "presence_penalty",
            "reasoning",
            "repetition_penalty",
            "response_format",
            "seed",
            "stop",
            "structured_outputs",
            "temperature",
            "tool_choice",
            "tools",
            "top_k",
            "top_logprobs",
            "top_p"
        ],
        "inputs": [
            {
                "name": "system_prompt",
                "display_name": "System Prompt",
                "type": "string or message",
                "description": "System prompt for the model",
                "default": null
            },
            {
                "name": "messages",
                "display_name": "Messages",
                "type": "array of messages or message or string",
                "description": "Array of chat messages",
                "required": true
            },
            {
                "name": "tools",
                "display_name": "Tools",
                "type": "tool",
                "description": "Array of tools to use",
                "default": null,
                "allow_multiple": true
            },
            {
                "name": "temperature",
                "display_name": "Temperature",
                "type": "number",
                "description": "Controls randomness (0-2)",
                "default": null
            },
            {
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "type": "number",
                "description": "Maximum tokens to generate",
                "default": null
            },
            {
                "name": "top_p",
                "display_name": "Top P",
                "type": "number",
                "description": "Controls diversity via nucleus sampling",
                "default": null
            },
            {
                "name": "frequency_penalty",
                "display_name": "Frequency Penalty",
                "type": "number",
                "description": "Reduces repetition (-2 to 2)",
                "default": null
            },
            {
                "name": "include_reasoning",
                "display_name": "Include Reasoning",
                "type": "boolean",
                "description": "Include reasoning in response",
                "default": null
            },
            {
                "name": "presence_penalty",
                "display_name": "Presence Penalty",
                "type": "number",
                "description": "Encourages new topics (-2 to 2)",
                "default": null
            },
            {
                "name": "reasoning",
                "display_name": "Reasoning",
                "type": "boolean",
                "description": "Internal reasoning mode",
                "default": null
            },
            {
                "name": "response_format",
                "display_name": "Response Format",
                "type": "string or object",
                "description": "Output format specification",
                "default": null
            },
            {
                "name": "seed",
                "display_name": "Seed",
                "type": "number",
                "description": "Deterministic outputs",
                "default": null
            },
            {
                "name": "stop",
                "display_name": "Stop",
                "type": "string or array",
                "description": "Custom stop sequences",
                "default": null
            },
            {
                "name": "structured_outputs",
                "display_name": "Structured Outputs",
                "type": "string or object",
                "description": "JSON schema enforcement",
                "default": null
            },
            {
                "name": "tool_choice",
                "display_name": "Tool Choice",
                "type": "string",
                "description": "Tool selection control",
                "default": null
            }
        ],
        "outputs": [
            {
                "name": "content",
                "display_name": "Content",
                "can_stream": true,
                "type": "string",
                "description": "The content portion of the generated response message."
            },
            {
                "name": "message",
                "display_name": "Message",
                "type": "message",
                "can_stream": true,
                "description": "The full generated response message."
            },
            {
                "name": "role",
                "display_name": "Role",
                "can_stream": true,
                "type": "string",
                "description": "Role of the response (usually 'assistant')"
            },
            {
                "name": "tool_calls",
                "display_name": "Tool Calls",
                "type": "array of tools",
                "description": "Tool calls made by the model"
            },
            {
                "name": "finish_reason",
                "display_name": "Finish Reason",
                "type": "string",
                "description": "Why the completion finished"
            },
            {
                "name": "usage",
                "display_name": "Token Usage",
                "type": "object",
                "description": "Token usage statistics"
            },
            {
                "name": "cost_total",
                "display_name": "Total Cost",
                "type": "number",
                "description": "Total cost for processing this request (USD)"
            },
            {
                "name": "cost_itemized",
                "display_name": "Itemized Cost",
                "type": "array",
                "description": "Detailed breakdown of costs"
            },
            {
                "name": "logprobs",
                "display_name": "Log Probabilities",
                "type": "object",
                "description": "Token probabilities and logprobs from the model"
            },
            {
                "name": "reasoning",
                "display_name": "Reasoning",
                "type": "string",
                "description": "The detailed reasoning chain from the model"
            },
            {
                "name": "refusal",
                "display_name": "Refusal",
                "type": "string",
                "description": "Model refusal response (if any)"
            }
        ],
        "pricing": {
            "reference": "https://openrouter.ai/models",
            "items": [
                {
                    "key": "input_cost_per_million",
                    "label": "Input Tokens (per 1M)",
                    "cost": 0.06,
                    "currency": "USD"
                },
                {
                    "key": "output_cost_per_million",
                    "label": "Output Tokens (per 1M)",
                    "cost": 0.24,
                    "currency": "USD"
                }
            ]
        },
        "id": "qwen-qwen3-14b"
    },
    {
        "display_name": "Qwen: Qwen3 14B (free)",
        "description": "Qwen3-14B is a dense 14.8B parameter causal language model from the Qwen3 series, designed for both complex reasoning and efficient dialogue. It supports seamless switching between a \"thinking\" mode for tasks like math, programming, and logical inference, and a \"non-thinking\" mode for general-purpose conversation. The model is fine-tuned for instruction-following, agent tool use, creative writing, and multilingual tasks across 100+ languages and dialects. It natively handles 32K token contexts and can extend to 131K tokens using YaRN-based scaling.",
        "category": "llm",
        "provider": "qwen",
        "accepts_plugins": false,
        "model_id": "qwen/qwen3-14b:free",
        "context_length": 40960,
        "supported_parameters": [
            "frequency_penalty",
            "include_reasoning",
            "logit_bias",
            "logprobs",
            "max_tokens",
            "min_p",
            "presence_penalty",
            "reasoning",
            "repetition_penalty",
            "seed",
            "stop",
            "temperature",
            "top_k",
            "top_logprobs",
            "top_p"
        ],
        "inputs": [
            {
                "name": "system_prompt",
                "display_name": "System Prompt",
                "type": "string or message",
                "description": "System prompt for the model",
                "default": null
            },
            {
                "name": "messages",
                "display_name": "Messages",
                "type": "array of messages or message or string",
                "description": "Array of chat messages",
                "required": true
            },
            {
                "name": "temperature",
                "display_name": "Temperature",
                "type": "number",
                "description": "Controls randomness (0-2)",
                "default": null
            },
            {
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "type": "number",
                "description": "Maximum tokens to generate",
                "default": null
            },
            {
                "name": "top_p",
                "display_name": "Top P",
                "type": "number",
                "description": "Controls diversity via nucleus sampling",
                "default": null
            },
            {
                "name": "frequency_penalty",
                "display_name": "Frequency Penalty",
                "type": "number",
                "description": "Reduces repetition (-2 to 2)",
                "default": null
            },
            {
                "name": "include_reasoning",
                "display_name": "Include Reasoning",
                "type": "boolean",
                "description": "Include reasoning in response",
                "default": null
            },
            {
                "name": "presence_penalty",
                "display_name": "Presence Penalty",
                "type": "number",
                "description": "Encourages new topics (-2 to 2)",
                "default": null
            },
            {
                "name": "reasoning",
                "display_name": "Reasoning",
                "type": "boolean",
                "description": "Internal reasoning mode",
                "default": null
            },
            {
                "name": "seed",
                "display_name": "Seed",
                "type": "number",
                "description": "Deterministic outputs",
                "default": null
            },
            {
                "name": "stop",
                "display_name": "Stop",
                "type": "string or array",
                "description": "Custom stop sequences",
                "default": null
            }
        ],
        "outputs": [
            {
                "name": "content",
                "display_name": "Content",
                "can_stream": true,
                "type": "string",
                "description": "The content portion of the generated response message."
            },
            {
                "name": "message",
                "display_name": "Message",
                "type": "message",
                "can_stream": true,
                "description": "The full generated response message."
            },
            {
                "name": "role",
                "display_name": "Role",
                "can_stream": true,
                "type": "string",
                "description": "Role of the response (usually 'assistant')"
            },
            {
                "name": "finish_reason",
                "display_name": "Finish Reason",
                "type": "string",
                "description": "Why the completion finished"
            },
            {
                "name": "usage",
                "display_name": "Token Usage",
                "type": "object",
                "description": "Token usage statistics"
            },
            {
                "name": "cost_total",
                "display_name": "Total Cost",
                "type": "number",
                "description": "Total cost for processing this request (USD)"
            },
            {
                "name": "cost_itemized",
                "display_name": "Itemized Cost",
                "type": "array",
                "description": "Detailed breakdown of costs"
            },
            {
                "name": "logprobs",
                "display_name": "Log Probabilities",
                "type": "object",
                "description": "Token probabilities and logprobs from the model"
            },
            {
                "name": "reasoning",
                "display_name": "Reasoning",
                "type": "string",
                "description": "The detailed reasoning chain from the model"
            },
            {
                "name": "refusal",
                "display_name": "Refusal",
                "type": "string",
                "description": "Model refusal response (if any)"
            }
        ],
        "pricing": {
            "reference": "https://openrouter.ai/models",
            "items": [
                {
                    "key": "input_cost_per_million",
                    "label": "Input Tokens (per 1M)",
                    "cost": 0,
                    "currency": "USD"
                },
                {
                    "key": "output_cost_per_million",
                    "label": "Output Tokens (per 1M)",
                    "cost": 0,
                    "currency": "USD"
                }
            ]
        },
        "id": "qwen-qwen3-14b-free"
    },
    {
        "display_name": "Qwen: Qwen3 235B A22B",
        "description": "Qwen3-235B-A22B is a 235B parameter mixture-of-experts (MoE) model developed by Qwen, activating 22B parameters per forward pass. It supports seamless switching between a \"thinking\" mode for complex reasoning, math, and code tasks, and a \"non-thinking\" mode for general conversational efficiency. The model demonstrates strong reasoning ability, multilingual support (100+ languages and dialects), advanced instruction-following, and agent tool-calling capabilities. It natively handles a 32K token context window and extends up to 131K tokens using YaRN-based scaling.",
        "category": "llm",
        "provider": "qwen",
        "accepts_plugins": true,
        "model_id": "qwen/qwen3-235b-a22b",
        "context_length": 40960,
        "supported_parameters": [
            "frequency_penalty",
            "include_reasoning",
            "logit_bias",
            "logprobs",
            "max_tokens",
            "min_p",
            "presence_penalty",
            "reasoning",
            "repetition_penalty",
            "response_format",
            "seed",
            "stop",
            "structured_outputs",
            "temperature",
            "tool_choice",
            "tools",
            "top_k",
            "top_logprobs",
            "top_p"
        ],
        "inputs": [
            {
                "name": "system_prompt",
                "display_name": "System Prompt",
                "type": "string or message",
                "description": "System prompt for the model",
                "default": null
            },
            {
                "name": "messages",
                "display_name": "Messages",
                "type": "array of messages or message or string",
                "description": "Array of chat messages",
                "required": true
            },
            {
                "name": "tools",
                "display_name": "Tools",
                "type": "tool",
                "description": "Array of tools to use",
                "default": null,
                "allow_multiple": true
            },
            {
                "name": "temperature",
                "display_name": "Temperature",
                "type": "number",
                "description": "Controls randomness (0-2)",
                "default": null
            },
            {
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "type": "number",
                "description": "Maximum tokens to generate",
                "default": null
            },
            {
                "name": "top_p",
                "display_name": "Top P",
                "type": "number",
                "description": "Controls diversity via nucleus sampling",
                "default": null
            },
            {
                "name": "frequency_penalty",
                "display_name": "Frequency Penalty",
                "type": "number",
                "description": "Reduces repetition (-2 to 2)",
                "default": null
            },
            {
                "name": "include_reasoning",
                "display_name": "Include Reasoning",
                "type": "boolean",
                "description": "Include reasoning in response",
                "default": null
            },
            {
                "name": "presence_penalty",
                "display_name": "Presence Penalty",
                "type": "number",
                "description": "Encourages new topics (-2 to 2)",
                "default": null
            },
            {
                "name": "reasoning",
                "display_name": "Reasoning",
                "type": "boolean",
                "description": "Internal reasoning mode",
                "default": null
            },
            {
                "name": "response_format",
                "display_name": "Response Format",
                "type": "string or object",
                "description": "Output format specification",
                "default": null
            },
            {
                "name": "seed",
                "display_name": "Seed",
                "type": "number",
                "description": "Deterministic outputs",
                "default": null
            },
            {
                "name": "stop",
                "display_name": "Stop",
                "type": "string or array",
                "description": "Custom stop sequences",
                "default": null
            },
            {
                "name": "structured_outputs",
                "display_name": "Structured Outputs",
                "type": "string or object",
                "description": "JSON schema enforcement",
                "default": null
            },
            {
                "name": "tool_choice",
                "display_name": "Tool Choice",
                "type": "string",
                "description": "Tool selection control",
                "default": null
            }
        ],
        "outputs": [
            {
                "name": "content",
                "display_name": "Content",
                "can_stream": true,
                "type": "string",
                "description": "The content portion of the generated response message."
            },
            {
                "name": "message",
                "display_name": "Message",
                "type": "message",
                "can_stream": true,
                "description": "The full generated response message."
            },
            {
                "name": "role",
                "display_name": "Role",
                "can_stream": true,
                "type": "string",
                "description": "Role of the response (usually 'assistant')"
            },
            {
                "name": "tool_calls",
                "display_name": "Tool Calls",
                "type": "array of tools",
                "description": "Tool calls made by the model"
            },
            {
                "name": "finish_reason",
                "display_name": "Finish Reason",
                "type": "string",
                "description": "Why the completion finished"
            },
            {
                "name": "usage",
                "display_name": "Token Usage",
                "type": "object",
                "description": "Token usage statistics"
            },
            {
                "name": "cost_total",
                "display_name": "Total Cost",
                "type": "number",
                "description": "Total cost for processing this request (USD)"
            },
            {
                "name": "cost_itemized",
                "display_name": "Itemized Cost",
                "type": "array",
                "description": "Detailed breakdown of costs"
            },
            {
                "name": "logprobs",
                "display_name": "Log Probabilities",
                "type": "object",
                "description": "Token probabilities and logprobs from the model"
            },
            {
                "name": "reasoning",
                "display_name": "Reasoning",
                "type": "string",
                "description": "The detailed reasoning chain from the model"
            },
            {
                "name": "refusal",
                "display_name": "Refusal",
                "type": "string",
                "description": "Model refusal response (if any)"
            }
        ],
        "pricing": {
            "reference": "https://openrouter.ai/models",
            "items": [
                {
                    "key": "input_cost_per_million",
                    "label": "Input Tokens (per 1M)",
                    "cost": 0.13,
                    "currency": "USD"
                },
                {
                    "key": "output_cost_per_million",
                    "label": "Output Tokens (per 1M)",
                    "cost": 0.6,
                    "currency": "USD"
                }
            ]
        },
        "id": "qwen-qwen3-235b-a22b"
    },
    {
        "display_name": "Qwen: Qwen3 235B A22B Instruct 2507",
        "description": "Qwen3-235B-A22B-Instruct-2507 is a multilingual, instruction-tuned mixture-of-experts language model based on the Qwen3-235B architecture, with 22B active parameters per forward pass. It is optimized for general-purpose text generation, including instruction following, logical reasoning, math, code, and tool usage. The model supports a native 262K context length and does not implement \"thinking mode\" (<think> blocks).\n\nCompared to its base variant, this version delivers significant gains in knowledge coverage, long-context reasoning, coding benchmarks, and alignment with open-ended tasks. It is particularly strong on multilingual understanding, math reasoning (e.g., AIME, HMMT), and alignment evaluations like Arena-Hard and WritingBench.",
        "category": "llm",
        "provider": "qwen",
        "accepts_plugins": true,
        "model_id": "qwen/qwen3-235b-a22b-2507",
        "context_length": 262144,
        "supported_parameters": [
            "frequency_penalty",
            "logit_bias",
            "logprobs",
            "max_tokens",
            "min_p",
            "presence_penalty",
            "repetition_penalty",
            "response_format",
            "seed",
            "stop",
            "structured_outputs",
            "temperature",
            "tool_choice",
            "tools",
            "top_k",
            "top_logprobs",
            "top_p"
        ],
        "inputs": [
            {
                "name": "system_prompt",
                "display_name": "System Prompt",
                "type": "string or message",
                "description": "System prompt for the model",
                "default": null
            },
            {
                "name": "messages",
                "display_name": "Messages",
                "type": "array of messages or message or string",
                "description": "Array of chat messages",
                "required": true
            },
            {
                "name": "tools",
                "display_name": "Tools",
                "type": "tool",
                "description": "Array of tools to use",
                "default": null,
                "allow_multiple": true
            },
            {
                "name": "temperature",
                "display_name": "Temperature",
                "type": "number",
                "description": "Controls randomness (0-2)",
                "default": null
            },
            {
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "type": "number",
                "description": "Maximum tokens to generate",
                "default": null
            },
            {
                "name": "top_p",
                "display_name": "Top P",
                "type": "number",
                "description": "Controls diversity via nucleus sampling",
                "default": null
            },
            {
                "name": "frequency_penalty",
                "display_name": "Frequency Penalty",
                "type": "number",
                "description": "Reduces repetition (-2 to 2)",
                "default": null
            },
            {
                "name": "presence_penalty",
                "display_name": "Presence Penalty",
                "type": "number",
                "description": "Encourages new topics (-2 to 2)",
                "default": null
            },
            {
                "name": "response_format",
                "display_name": "Response Format",
                "type": "string or object",
                "description": "Output format specification",
                "default": null
            },
            {
                "name": "seed",
                "display_name": "Seed",
                "type": "number",
                "description": "Deterministic outputs",
                "default": null
            },
            {
                "name": "stop",
                "display_name": "Stop",
                "type": "string or array",
                "description": "Custom stop sequences",
                "default": null
            },
            {
                "name": "structured_outputs",
                "display_name": "Structured Outputs",
                "type": "string or object",
                "description": "JSON schema enforcement",
                "default": null
            },
            {
                "name": "tool_choice",
                "display_name": "Tool Choice",
                "type": "string",
                "description": "Tool selection control",
                "default": null
            }
        ],
        "outputs": [
            {
                "name": "content",
                "display_name": "Content",
                "can_stream": true,
                "type": "string",
                "description": "The content portion of the generated response message."
            },
            {
                "name": "message",
                "display_name": "Message",
                "type": "message",
                "can_stream": true,
                "description": "The full generated response message."
            },
            {
                "name": "role",
                "display_name": "Role",
                "can_stream": true,
                "type": "string",
                "description": "Role of the response (usually 'assistant')"
            },
            {
                "name": "tool_calls",
                "display_name": "Tool Calls",
                "type": "array of tools",
                "description": "Tool calls made by the model"
            },
            {
                "name": "finish_reason",
                "display_name": "Finish Reason",
                "type": "string",
                "description": "Why the completion finished"
            },
            {
                "name": "usage",
                "display_name": "Token Usage",
                "type": "object",
                "description": "Token usage statistics"
            },
            {
                "name": "cost_total",
                "display_name": "Total Cost",
                "type": "number",
                "description": "Total cost for processing this request (USD)"
            },
            {
                "name": "cost_itemized",
                "display_name": "Itemized Cost",
                "type": "array",
                "description": "Detailed breakdown of costs"
            },
            {
                "name": "logprobs",
                "display_name": "Log Probabilities",
                "type": "object",
                "description": "Token probabilities and logprobs from the model"
            }
        ],
        "pricing": {
            "reference": "https://openrouter.ai/models",
            "items": [
                {
                    "key": "input_cost_per_million",
                    "label": "Input Tokens (per 1M)",
                    "cost": 0.077968332,
                    "currency": "USD"
                },
                {
                    "key": "output_cost_per_million",
                    "label": "Output Tokens (per 1M)",
                    "cost": 0.31202496,
                    "currency": "USD"
                }
            ]
        },
        "id": "qwen-qwen3-235b-a22b-2507"
    },
    {
        "display_name": "Qwen: Qwen3 235B A22B (free)",
        "description": "Qwen3-235B-A22B is a 235B parameter mixture-of-experts (MoE) model developed by Qwen, activating 22B parameters per forward pass. It supports seamless switching between a \"thinking\" mode for complex reasoning, math, and code tasks, and a \"non-thinking\" mode for general conversational efficiency. The model demonstrates strong reasoning ability, multilingual support (100+ languages and dialects), advanced instruction-following, and agent tool-calling capabilities. It natively handles a 32K token context window and extends up to 131K tokens using YaRN-based scaling.",
        "category": "llm",
        "provider": "qwen",
        "accepts_plugins": true,
        "model_id": "qwen/qwen3-235b-a22b:free",
        "context_length": 131072,
        "supported_parameters": [
            "frequency_penalty",
            "include_reasoning",
            "logit_bias",
            "logprobs",
            "max_tokens",
            "min_p",
            "presence_penalty",
            "reasoning",
            "repetition_penalty",
            "response_format",
            "seed",
            "stop",
            "structured_outputs",
            "temperature",
            "tool_choice",
            "tools",
            "top_k",
            "top_logprobs",
            "top_p"
        ],
        "inputs": [
            {
                "name": "system_prompt",
                "display_name": "System Prompt",
                "type": "string or message",
                "description": "System prompt for the model",
                "default": null
            },
            {
                "name": "messages",
                "display_name": "Messages",
                "type": "array of messages or message or string",
                "description": "Array of chat messages",
                "required": true
            },
            {
                "name": "tools",
                "display_name": "Tools",
                "type": "tool",
                "description": "Array of tools to use",
                "default": null,
                "allow_multiple": true
            },
            {
                "name": "temperature",
                "display_name": "Temperature",
                "type": "number",
                "description": "Controls randomness (0-2)",
                "default": null
            },
            {
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "type": "number",
                "description": "Maximum tokens to generate",
                "default": null
            },
            {
                "name": "top_p",
                "display_name": "Top P",
                "type": "number",
                "description": "Controls diversity via nucleus sampling",
                "default": null
            },
            {
                "name": "frequency_penalty",
                "display_name": "Frequency Penalty",
                "type": "number",
                "description": "Reduces repetition (-2 to 2)",
                "default": null
            },
            {
                "name": "include_reasoning",
                "display_name": "Include Reasoning",
                "type": "boolean",
                "description": "Include reasoning in response",
                "default": null
            },
            {
                "name": "presence_penalty",
                "display_name": "Presence Penalty",
                "type": "number",
                "description": "Encourages new topics (-2 to 2)",
                "default": null
            },
            {
                "name": "reasoning",
                "display_name": "Reasoning",
                "type": "boolean",
                "description": "Internal reasoning mode",
                "default": null
            },
            {
                "name": "response_format",
                "display_name": "Response Format",
                "type": "string or object",
                "description": "Output format specification",
                "default": null
            },
            {
                "name": "seed",
                "display_name": "Seed",
                "type": "number",
                "description": "Deterministic outputs",
                "default": null
            },
            {
                "name": "stop",
                "display_name": "Stop",
                "type": "string or array",
                "description": "Custom stop sequences",
                "default": null
            },
            {
                "name": "structured_outputs",
                "display_name": "Structured Outputs",
                "type": "string or object",
                "description": "JSON schema enforcement",
                "default": null
            },
            {
                "name": "tool_choice",
                "display_name": "Tool Choice",
                "type": "string",
                "description": "Tool selection control",
                "default": null
            }
        ],
        "outputs": [
            {
                "name": "content",
                "display_name": "Content",
                "can_stream": true,
                "type": "string",
                "description": "The content portion of the generated response message."
            },
            {
                "name": "message",
                "display_name": "Message",
                "type": "message",
                "can_stream": true,
                "description": "The full generated response message."
            },
            {
                "name": "role",
                "display_name": "Role",
                "can_stream": true,
                "type": "string",
                "description": "Role of the response (usually 'assistant')"
            },
            {
                "name": "tool_calls",
                "display_name": "Tool Calls",
                "type": "array of tools",
                "description": "Tool calls made by the model"
            },
            {
                "name": "finish_reason",
                "display_name": "Finish Reason",
                "type": "string",
                "description": "Why the completion finished"
            },
            {
                "name": "usage",
                "display_name": "Token Usage",
                "type": "object",
                "description": "Token usage statistics"
            },
            {
                "name": "cost_total",
                "display_name": "Total Cost",
                "type": "number",
                "description": "Total cost for processing this request (USD)"
            },
            {
                "name": "cost_itemized",
                "display_name": "Itemized Cost",
                "type": "array",
                "description": "Detailed breakdown of costs"
            },
            {
                "name": "logprobs",
                "display_name": "Log Probabilities",
                "type": "object",
                "description": "Token probabilities and logprobs from the model"
            },
            {
                "name": "reasoning",
                "display_name": "Reasoning",
                "type": "string",
                "description": "The detailed reasoning chain from the model"
            },
            {
                "name": "refusal",
                "display_name": "Refusal",
                "type": "string",
                "description": "Model refusal response (if any)"
            }
        ],
        "pricing": {
            "reference": "https://openrouter.ai/models",
            "items": [
                {
                    "key": "input_cost_per_million",
                    "label": "Input Tokens (per 1M)",
                    "cost": 0,
                    "currency": "USD"
                },
                {
                    "key": "output_cost_per_million",
                    "label": "Output Tokens (per 1M)",
                    "cost": 0,
                    "currency": "USD"
                }
            ]
        },
        "id": "qwen-qwen3-235b-a22b-free"
    },
    {
        "display_name": "Qwen: Qwen3 235B A22B Thinking 2507",
        "description": "Qwen3-235B-A22B-Thinking-2507 is a high-performance, open-weight Mixture-of-Experts (MoE) language model optimized for complex reasoning tasks. It activates 22B of its 235B parameters per forward pass and natively supports up to 262,144 tokens of context. This \"thinking-only\" variant enhances structured logical reasoning, mathematics, science, and long-form generation, showing strong benchmark performance across AIME, SuperGPQA, LiveCodeBench, and MMLU-Redux. It enforces a special reasoning mode (</think>) and is designed for high-token outputs (up to 81,920 tokens) in challenging domains.\n\nThe model is instruction-tuned and excels at step-by-step reasoning, tool use, agentic workflows, and multilingual tasks. This release represents the most capable open-source variant in the Qwen3-235B series, surpassing many closed models in structured reasoning use cases.",
        "category": "llm",
        "provider": "qwen",
        "accepts_plugins": true,
        "model_id": "qwen/qwen3-235b-a22b-thinking-2507",
        "context_length": 262144,
        "supported_parameters": [
            "frequency_penalty",
            "include_reasoning",
            "logit_bias",
            "logprobs",
            "max_tokens",
            "min_p",
            "presence_penalty",
            "reasoning",
            "repetition_penalty",
            "response_format",
            "seed",
            "stop",
            "temperature",
            "tool_choice",
            "tools",
            "top_k",
            "top_logprobs",
            "top_p"
        ],
        "inputs": [
            {
                "name": "system_prompt",
                "display_name": "System Prompt",
                "type": "string or message",
                "description": "System prompt for the model",
                "default": null
            },
            {
                "name": "messages",
                "display_name": "Messages",
                "type": "array of messages or message or string",
                "description": "Array of chat messages",
                "required": true
            },
            {
                "name": "tools",
                "display_name": "Tools",
                "type": "tool",
                "description": "Array of tools to use",
                "default": null,
                "allow_multiple": true
            },
            {
                "name": "temperature",
                "display_name": "Temperature",
                "type": "number",
                "description": "Controls randomness (0-2)",
                "default": null
            },
            {
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "type": "number",
                "description": "Maximum tokens to generate",
                "default": null
            },
            {
                "name": "top_p",
                "display_name": "Top P",
                "type": "number",
                "description": "Controls diversity via nucleus sampling",
                "default": null
            },
            {
                "name": "frequency_penalty",
                "display_name": "Frequency Penalty",
                "type": "number",
                "description": "Reduces repetition (-2 to 2)",
                "default": null
            },
            {
                "name": "include_reasoning",
                "display_name": "Include Reasoning",
                "type": "boolean",
                "description": "Include reasoning in response",
                "default": null
            },
            {
                "name": "presence_penalty",
                "display_name": "Presence Penalty",
                "type": "number",
                "description": "Encourages new topics (-2 to 2)",
                "default": null
            },
            {
                "name": "reasoning",
                "display_name": "Reasoning",
                "type": "boolean",
                "description": "Internal reasoning mode",
                "default": null
            },
            {
                "name": "response_format",
                "display_name": "Response Format",
                "type": "string or object",
                "description": "Output format specification",
                "default": null
            },
            {
                "name": "seed",
                "display_name": "Seed",
                "type": "number",
                "description": "Deterministic outputs",
                "default": null
            },
            {
                "name": "stop",
                "display_name": "Stop",
                "type": "string or array",
                "description": "Custom stop sequences",
                "default": null
            },
            {
                "name": "tool_choice",
                "display_name": "Tool Choice",
                "type": "string",
                "description": "Tool selection control",
                "default": null
            }
        ],
        "outputs": [
            {
                "name": "content",
                "display_name": "Content",
                "can_stream": true,
                "type": "string",
                "description": "The content portion of the generated response message."
            },
            {
                "name": "message",
                "display_name": "Message",
                "type": "message",
                "can_stream": true,
                "description": "The full generated response message."
            },
            {
                "name": "role",
                "display_name": "Role",
                "can_stream": true,
                "type": "string",
                "description": "Role of the response (usually 'assistant')"
            },
            {
                "name": "tool_calls",
                "display_name": "Tool Calls",
                "type": "array of tools",
                "description": "Tool calls made by the model"
            },
            {
                "name": "finish_reason",
                "display_name": "Finish Reason",
                "type": "string",
                "description": "Why the completion finished"
            },
            {
                "name": "usage",
                "display_name": "Token Usage",
                "type": "object",
                "description": "Token usage statistics"
            },
            {
                "name": "cost_total",
                "display_name": "Total Cost",
                "type": "number",
                "description": "Total cost for processing this request (USD)"
            },
            {
                "name": "cost_itemized",
                "display_name": "Itemized Cost",
                "type": "array",
                "description": "Detailed breakdown of costs"
            },
            {
                "name": "logprobs",
                "display_name": "Log Probabilities",
                "type": "object",
                "description": "Token probabilities and logprobs from the model"
            },
            {
                "name": "reasoning",
                "display_name": "Reasoning",
                "type": "string",
                "description": "The detailed reasoning chain from the model"
            },
            {
                "name": "refusal",
                "display_name": "Refusal",
                "type": "string",
                "description": "Model refusal response (if any)"
            }
        ],
        "pricing": {
            "reference": "https://openrouter.ai/models",
            "items": [
                {
                    "key": "input_cost_per_million",
                    "label": "Input Tokens (per 1M)",
                    "cost": 0.077968332,
                    "currency": "USD"
                },
                {
                    "key": "output_cost_per_million",
                    "label": "Output Tokens (per 1M)",
                    "cost": 0.31202496,
                    "currency": "USD"
                }
            ]
        },
        "id": "qwen-qwen3-235b-a22b-thinking-2507"
    },
    {
        "display_name": "Qwen: Qwen3 30B A3B",
        "description": "Qwen3, the latest generation in the Qwen large language model series, features both dense and mixture-of-experts (MoE) architectures to excel in reasoning, multilingual support, and advanced agent tasks. Its unique ability to switch seamlessly between a thinking mode for complex reasoning and a non-thinking mode for efficient dialogue ensures versatile, high-quality performance.\n\nSignificantly outperforming prior models like QwQ and Qwen2.5, Qwen3 delivers superior mathematics, coding, commonsense reasoning, creative writing, and interactive dialogue capabilities. The Qwen3-30B-A3B variant includes 30.5 billion parameters (3.3 billion activated), 48 layers, 128 experts (8 activated per task), and supports up to 131K token contexts with YaRN, setting a new standard among open-source models.",
        "category": "llm",
        "provider": "qwen",
        "accepts_plugins": true,
        "model_id": "qwen/qwen3-30b-a3b",
        "context_length": 40960,
        "supported_parameters": [
            "frequency_penalty",
            "include_reasoning",
            "logit_bias",
            "logprobs",
            "max_tokens",
            "min_p",
            "presence_penalty",
            "reasoning",
            "repetition_penalty",
            "response_format",
            "seed",
            "stop",
            "structured_outputs",
            "temperature",
            "tool_choice",
            "tools",
            "top_k",
            "top_logprobs",
            "top_p"
        ],
        "inputs": [
            {
                "name": "system_prompt",
                "display_name": "System Prompt",
                "type": "string or message",
                "description": "System prompt for the model",
                "default": null
            },
            {
                "name": "messages",
                "display_name": "Messages",
                "type": "array of messages or message or string",
                "description": "Array of chat messages",
                "required": true
            },
            {
                "name": "tools",
                "display_name": "Tools",
                "type": "tool",
                "description": "Array of tools to use",
                "default": null,
                "allow_multiple": true
            },
            {
                "name": "temperature",
                "display_name": "Temperature",
                "type": "number",
                "description": "Controls randomness (0-2)",
                "default": null
            },
            {
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "type": "number",
                "description": "Maximum tokens to generate",
                "default": null
            },
            {
                "name": "top_p",
                "display_name": "Top P",
                "type": "number",
                "description": "Controls diversity via nucleus sampling",
                "default": null
            },
            {
                "name": "frequency_penalty",
                "display_name": "Frequency Penalty",
                "type": "number",
                "description": "Reduces repetition (-2 to 2)",
                "default": null
            },
            {
                "name": "include_reasoning",
                "display_name": "Include Reasoning",
                "type": "boolean",
                "description": "Include reasoning in response",
                "default": null
            },
            {
                "name": "presence_penalty",
                "display_name": "Presence Penalty",
                "type": "number",
                "description": "Encourages new topics (-2 to 2)",
                "default": null
            },
            {
                "name": "reasoning",
                "display_name": "Reasoning",
                "type": "boolean",
                "description": "Internal reasoning mode",
                "default": null
            },
            {
                "name": "response_format",
                "display_name": "Response Format",
                "type": "string or object",
                "description": "Output format specification",
                "default": null
            },
            {
                "name": "seed",
                "display_name": "Seed",
                "type": "number",
                "description": "Deterministic outputs",
                "default": null
            },
            {
                "name": "stop",
                "display_name": "Stop",
                "type": "string or array",
                "description": "Custom stop sequences",
                "default": null
            },
            {
                "name": "structured_outputs",
                "display_name": "Structured Outputs",
                "type": "string or object",
                "description": "JSON schema enforcement",
                "default": null
            },
            {
                "name": "tool_choice",
                "display_name": "Tool Choice",
                "type": "string",
                "description": "Tool selection control",
                "default": null
            }
        ],
        "outputs": [
            {
                "name": "content",
                "display_name": "Content",
                "can_stream": true,
                "type": "string",
                "description": "The content portion of the generated response message."
            },
            {
                "name": "message",
                "display_name": "Message",
                "type": "message",
                "can_stream": true,
                "description": "The full generated response message."
            },
            {
                "name": "role",
                "display_name": "Role",
                "can_stream": true,
                "type": "string",
                "description": "Role of the response (usually 'assistant')"
            },
            {
                "name": "tool_calls",
                "display_name": "Tool Calls",
                "type": "array of tools",
                "description": "Tool calls made by the model"
            },
            {
                "name": "finish_reason",
                "display_name": "Finish Reason",
                "type": "string",
                "description": "Why the completion finished"
            },
            {
                "name": "usage",
                "display_name": "Token Usage",
                "type": "object",
                "description": "Token usage statistics"
            },
            {
                "name": "cost_total",
                "display_name": "Total Cost",
                "type": "number",
                "description": "Total cost for processing this request (USD)"
            },
            {
                "name": "cost_itemized",
                "display_name": "Itemized Cost",
                "type": "array",
                "description": "Detailed breakdown of costs"
            },
            {
                "name": "logprobs",
                "display_name": "Log Probabilities",
                "type": "object",
                "description": "Token probabilities and logprobs from the model"
            },
            {
                "name": "reasoning",
                "display_name": "Reasoning",
                "type": "string",
                "description": "The detailed reasoning chain from the model"
            },
            {
                "name": "refusal",
                "display_name": "Refusal",
                "type": "string",
                "description": "Model refusal response (if any)"
            }
        ],
        "pricing": {
            "reference": "https://openrouter.ai/models",
            "items": [
                {
                    "key": "input_cost_per_million",
                    "label": "Input Tokens (per 1M)",
                    "cost": 0.01999188,
                    "currency": "USD"
                },
                {
                    "key": "output_cost_per_million",
                    "label": "Output Tokens (per 1M)",
                    "cost": 0.0800064,
                    "currency": "USD"
                }
            ]
        },
        "id": "qwen-qwen3-30b-a3b"
    },
    {
        "display_name": "Qwen: Qwen3 30B A3B (free)",
        "description": "Qwen3, the latest generation in the Qwen large language model series, features both dense and mixture-of-experts (MoE) architectures to excel in reasoning, multilingual support, and advanced agent tasks. Its unique ability to switch seamlessly between a thinking mode for complex reasoning and a non-thinking mode for efficient dialogue ensures versatile, high-quality performance.\n\nSignificantly outperforming prior models like QwQ and Qwen2.5, Qwen3 delivers superior mathematics, coding, commonsense reasoning, creative writing, and interactive dialogue capabilities. The Qwen3-30B-A3B variant includes 30.5 billion parameters (3.3 billion activated), 48 layers, 128 experts (8 activated per task), and supports up to 131K token contexts with YaRN, setting a new standard among open-source models.",
        "category": "llm",
        "provider": "qwen",
        "accepts_plugins": false,
        "model_id": "qwen/qwen3-30b-a3b:free",
        "context_length": 40960,
        "supported_parameters": [
            "frequency_penalty",
            "include_reasoning",
            "logit_bias",
            "logprobs",
            "max_tokens",
            "min_p",
            "presence_penalty",
            "reasoning",
            "repetition_penalty",
            "seed",
            "stop",
            "temperature",
            "top_k",
            "top_logprobs",
            "top_p"
        ],
        "inputs": [
            {
                "name": "system_prompt",
                "display_name": "System Prompt",
                "type": "string or message",
                "description": "System prompt for the model",
                "default": null
            },
            {
                "name": "messages",
                "display_name": "Messages",
                "type": "array of messages or message or string",
                "description": "Array of chat messages",
                "required": true
            },
            {
                "name": "temperature",
                "display_name": "Temperature",
                "type": "number",
                "description": "Controls randomness (0-2)",
                "default": null
            },
            {
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "type": "number",
                "description": "Maximum tokens to generate",
                "default": null
            },
            {
                "name": "top_p",
                "display_name": "Top P",
                "type": "number",
                "description": "Controls diversity via nucleus sampling",
                "default": null
            },
            {
                "name": "frequency_penalty",
                "display_name": "Frequency Penalty",
                "type": "number",
                "description": "Reduces repetition (-2 to 2)",
                "default": null
            },
            {
                "name": "include_reasoning",
                "display_name": "Include Reasoning",
                "type": "boolean",
                "description": "Include reasoning in response",
                "default": null
            },
            {
                "name": "presence_penalty",
                "display_name": "Presence Penalty",
                "type": "number",
                "description": "Encourages new topics (-2 to 2)",
                "default": null
            },
            {
                "name": "reasoning",
                "display_name": "Reasoning",
                "type": "boolean",
                "description": "Internal reasoning mode",
                "default": null
            },
            {
                "name": "seed",
                "display_name": "Seed",
                "type": "number",
                "description": "Deterministic outputs",
                "default": null
            },
            {
                "name": "stop",
                "display_name": "Stop",
                "type": "string or array",
                "description": "Custom stop sequences",
                "default": null
            }
        ],
        "outputs": [
            {
                "name": "content",
                "display_name": "Content",
                "can_stream": true,
                "type": "string",
                "description": "The content portion of the generated response message."
            },
            {
                "name": "message",
                "display_name": "Message",
                "type": "message",
                "can_stream": true,
                "description": "The full generated response message."
            },
            {
                "name": "role",
                "display_name": "Role",
                "can_stream": true,
                "type": "string",
                "description": "Role of the response (usually 'assistant')"
            },
            {
                "name": "finish_reason",
                "display_name": "Finish Reason",
                "type": "string",
                "description": "Why the completion finished"
            },
            {
                "name": "usage",
                "display_name": "Token Usage",
                "type": "object",
                "description": "Token usage statistics"
            },
            {
                "name": "cost_total",
                "display_name": "Total Cost",
                "type": "number",
                "description": "Total cost for processing this request (USD)"
            },
            {
                "name": "cost_itemized",
                "display_name": "Itemized Cost",
                "type": "array",
                "description": "Detailed breakdown of costs"
            },
            {
                "name": "logprobs",
                "display_name": "Log Probabilities",
                "type": "object",
                "description": "Token probabilities and logprobs from the model"
            },
            {
                "name": "reasoning",
                "display_name": "Reasoning",
                "type": "string",
                "description": "The detailed reasoning chain from the model"
            },
            {
                "name": "refusal",
                "display_name": "Refusal",
                "type": "string",
                "description": "Model refusal response (if any)"
            }
        ],
        "pricing": {
            "reference": "https://openrouter.ai/models",
            "items": [
                {
                    "key": "input_cost_per_million",
                    "label": "Input Tokens (per 1M)",
                    "cost": 0,
                    "currency": "USD"
                },
                {
                    "key": "output_cost_per_million",
                    "label": "Output Tokens (per 1M)",
                    "cost": 0,
                    "currency": "USD"
                }
            ]
        },
        "id": "qwen-qwen3-30b-a3b-free"
    },
    {
        "display_name": "Qwen: Qwen3 30B A3B Instruct 2507",
        "description": "Qwen3-30B-A3B-Instruct-2507 is a 30.5B-parameter mixture-of-experts language model from Qwen, with 3.3B active parameters per inference. It operates in non-thinking mode and is designed for high-quality instruction following, multilingual understanding, and agentic tool use. Post-trained on instruction data, it demonstrates competitive performance across reasoning (AIME, ZebraLogic), coding (MultiPL-E, LiveCodeBench), and alignment (IFEval, WritingBench) benchmarks. It outperforms its non-instruct variant on subjective and open-ended tasks while retaining strong factual and coding performance.",
        "category": "llm",
        "provider": "qwen",
        "accepts_plugins": false,
        "model_id": "qwen/qwen3-30b-a3b-instruct-2507",
        "context_length": 131072,
        "supported_parameters": [
            "max_tokens",
            "presence_penalty",
            "response_format",
            "seed",
            "temperature",
            "top_p"
        ],
        "inputs": [
            {
                "name": "prompt",
                "display_name": "Prompt",
                "type": "string",
                "description": "Text prompt for completion",
                "required": true
            },
            {
                "name": "temperature",
                "display_name": "Temperature",
                "type": "number",
                "description": "Controls randomness (0-2)",
                "default": null
            },
            {
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "type": "number",
                "description": "Maximum tokens to generate",
                "default": null
            },
            {
                "name": "top_p",
                "display_name": "Top P",
                "type": "number",
                "description": "Controls diversity via nucleus sampling",
                "default": null
            },
            {
                "name": "presence_penalty",
                "display_name": "Presence Penalty",
                "type": "number",
                "description": "Encourages new topics (-2 to 2)",
                "default": null
            },
            {
                "name": "response_format",
                "display_name": "Response Format",
                "type": "string or object",
                "description": "Output format specification",
                "default": null
            },
            {
                "name": "seed",
                "display_name": "Seed",
                "type": "number",
                "description": "Deterministic outputs",
                "default": null
            }
        ],
        "outputs": [
            {
                "name": "content",
                "display_name": "Content",
                "can_stream": true,
                "type": "string",
                "description": "The generated completion text"
            },
            {
                "name": "finish_reason",
                "display_name": "Finish Reason",
                "type": "string",
                "description": "Why the completion finished"
            },
            {
                "name": "usage",
                "display_name": "Token Usage",
                "type": "object",
                "description": "Token usage statistics"
            },
            {
                "name": "cost_total",
                "display_name": "Total Cost",
                "type": "number",
                "description": "Total cost for processing this request (USD)"
            },
            {
                "name": "cost_itemized",
                "display_name": "Itemized Cost",
                "type": "array",
                "description": "Detailed breakdown of costs"
            }
        ],
        "pricing": {
            "reference": "https://openrouter.ai/models",
            "items": [
                {
                    "key": "input_cost_per_million",
                    "label": "Input Tokens (per 1M)",
                    "cost": 0.19999999999999998,
                    "currency": "USD"
                },
                {
                    "key": "output_cost_per_million",
                    "label": "Output Tokens (per 1M)",
                    "cost": 0.7999999999999999,
                    "currency": "USD"
                }
            ]
        },
        "id": "qwen-qwen3-30b-a3b-instruct-2507"
    },
    {
        "display_name": "Qwen: Qwen3 32B",
        "description": "Qwen3-32B is a dense 32.8B parameter causal language model from the Qwen3 series, optimized for both complex reasoning and efficient dialogue. It supports seamless switching between a \"thinking\" mode for tasks like math, coding, and logical inference, and a \"non-thinking\" mode for faster, general-purpose conversation. The model demonstrates strong performance in instruction-following, agent tool use, creative writing, and multilingual tasks across 100+ languages and dialects. It natively handles 32K token contexts and can extend to 131K tokens using YaRN-based scaling. ",
        "category": "llm",
        "provider": "qwen",
        "accepts_plugins": true,
        "model_id": "qwen/qwen3-32b",
        "context_length": 40960,
        "supported_parameters": [
            "frequency_penalty",
            "include_reasoning",
            "logit_bias",
            "logprobs",
            "max_tokens",
            "min_p",
            "presence_penalty",
            "reasoning",
            "repetition_penalty",
            "response_format",
            "seed",
            "stop",
            "structured_outputs",
            "temperature",
            "tool_choice",
            "tools",
            "top_k",
            "top_logprobs",
            "top_p"
        ],
        "inputs": [
            {
                "name": "system_prompt",
                "display_name": "System Prompt",
                "type": "string or message",
                "description": "System prompt for the model",
                "default": null
            },
            {
                "name": "messages",
                "display_name": "Messages",
                "type": "array of messages or message or string",
                "description": "Array of chat messages",
                "required": true
            },
            {
                "name": "tools",
                "display_name": "Tools",
                "type": "tool",
                "description": "Array of tools to use",
                "default": null,
                "allow_multiple": true
            },
            {
                "name": "temperature",
                "display_name": "Temperature",
                "type": "number",
                "description": "Controls randomness (0-2)",
                "default": null
            },
            {
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "type": "number",
                "description": "Maximum tokens to generate",
                "default": null
            },
            {
                "name": "top_p",
                "display_name": "Top P",
                "type": "number",
                "description": "Controls diversity via nucleus sampling",
                "default": null
            },
            {
                "name": "frequency_penalty",
                "display_name": "Frequency Penalty",
                "type": "number",
                "description": "Reduces repetition (-2 to 2)",
                "default": null
            },
            {
                "name": "include_reasoning",
                "display_name": "Include Reasoning",
                "type": "boolean",
                "description": "Include reasoning in response",
                "default": null
            },
            {
                "name": "presence_penalty",
                "display_name": "Presence Penalty",
                "type": "number",
                "description": "Encourages new topics (-2 to 2)",
                "default": null
            },
            {
                "name": "reasoning",
                "display_name": "Reasoning",
                "type": "boolean",
                "description": "Internal reasoning mode",
                "default": null
            },
            {
                "name": "response_format",
                "display_name": "Response Format",
                "type": "string or object",
                "description": "Output format specification",
                "default": null
            },
            {
                "name": "seed",
                "display_name": "Seed",
                "type": "number",
                "description": "Deterministic outputs",
                "default": null
            },
            {
                "name": "stop",
                "display_name": "Stop",
                "type": "string or array",
                "description": "Custom stop sequences",
                "default": null
            },
            {
                "name": "structured_outputs",
                "display_name": "Structured Outputs",
                "type": "string or object",
                "description": "JSON schema enforcement",
                "default": null
            },
            {
                "name": "tool_choice",
                "display_name": "Tool Choice",
                "type": "string",
                "description": "Tool selection control",
                "default": null
            }
        ],
        "outputs": [
            {
                "name": "content",
                "display_name": "Content",
                "can_stream": true,
                "type": "string",
                "description": "The content portion of the generated response message."
            },
            {
                "name": "message",
                "display_name": "Message",
                "type": "message",
                "can_stream": true,
                "description": "The full generated response message."
            },
            {
                "name": "role",
                "display_name": "Role",
                "can_stream": true,
                "type": "string",
                "description": "Role of the response (usually 'assistant')"
            },
            {
                "name": "tool_calls",
                "display_name": "Tool Calls",
                "type": "array of tools",
                "description": "Tool calls made by the model"
            },
            {
                "name": "finish_reason",
                "display_name": "Finish Reason",
                "type": "string",
                "description": "Why the completion finished"
            },
            {
                "name": "usage",
                "display_name": "Token Usage",
                "type": "object",
                "description": "Token usage statistics"
            },
            {
                "name": "cost_total",
                "display_name": "Total Cost",
                "type": "number",
                "description": "Total cost for processing this request (USD)"
            },
            {
                "name": "cost_itemized",
                "display_name": "Itemized Cost",
                "type": "array",
                "description": "Detailed breakdown of costs"
            },
            {
                "name": "logprobs",
                "display_name": "Log Probabilities",
                "type": "object",
                "description": "Token probabilities and logprobs from the model"
            },
            {
                "name": "reasoning",
                "display_name": "Reasoning",
                "type": "string",
                "description": "The detailed reasoning chain from the model"
            },
            {
                "name": "refusal",
                "display_name": "Refusal",
                "type": "string",
                "description": "Model refusal response (if any)"
            }
        ],
        "pricing": {
            "reference": "https://openrouter.ai/models",
            "items": [
                {
                    "key": "input_cost_per_million",
                    "label": "Input Tokens (per 1M)",
                    "cost": 0.017992691999999998,
                    "currency": "USD"
                },
                {
                    "key": "output_cost_per_million",
                    "label": "Output Tokens (per 1M)",
                    "cost": 0.07200576,
                    "currency": "USD"
                }
            ]
        },
        "id": "qwen-qwen3-32b"
    },
    {
        "display_name": "Qwen: Qwen3 4B (free)",
        "description": "Qwen3-4B is a 4 billion parameter dense language model from the Qwen3 series, designed to support both general-purpose and reasoning-intensive tasks. It introduces a dual-mode architecture—thinking and non-thinking—allowing dynamic switching between high-precision logical reasoning and efficient dialogue generation. This makes it well-suited for multi-turn chat, instruction following, and complex agent workflows.",
        "category": "llm",
        "provider": "qwen",
        "accepts_plugins": true,
        "model_id": "qwen/qwen3-4b:free",
        "context_length": 40960,
        "supported_parameters": [
            "frequency_penalty",
            "include_reasoning",
            "max_tokens",
            "presence_penalty",
            "reasoning",
            "response_format",
            "stop",
            "structured_outputs",
            "temperature",
            "tool_choice",
            "tools",
            "top_k",
            "top_p"
        ],
        "inputs": [
            {
                "name": "system_prompt",
                "display_name": "System Prompt",
                "type": "string or message",
                "description": "System prompt for the model",
                "default": null
            },
            {
                "name": "messages",
                "display_name": "Messages",
                "type": "array of messages or message or string",
                "description": "Array of chat messages",
                "required": true
            },
            {
                "name": "tools",
                "display_name": "Tools",
                "type": "tool",
                "description": "Array of tools to use",
                "default": null,
                "allow_multiple": true
            },
            {
                "name": "temperature",
                "display_name": "Temperature",
                "type": "number",
                "description": "Controls randomness (0-2)",
                "default": null
            },
            {
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "type": "number",
                "description": "Maximum tokens to generate",
                "default": null
            },
            {
                "name": "top_p",
                "display_name": "Top P",
                "type": "number",
                "description": "Controls diversity via nucleus sampling",
                "default": null
            },
            {
                "name": "frequency_penalty",
                "display_name": "Frequency Penalty",
                "type": "number",
                "description": "Reduces repetition (-2 to 2)",
                "default": null
            },
            {
                "name": "include_reasoning",
                "display_name": "Include Reasoning",
                "type": "boolean",
                "description": "Include reasoning in response",
                "default": null
            },
            {
                "name": "presence_penalty",
                "display_name": "Presence Penalty",
                "type": "number",
                "description": "Encourages new topics (-2 to 2)",
                "default": null
            },
            {
                "name": "reasoning",
                "display_name": "Reasoning",
                "type": "boolean",
                "description": "Internal reasoning mode",
                "default": null
            },
            {
                "name": "response_format",
                "display_name": "Response Format",
                "type": "string or object",
                "description": "Output format specification",
                "default": null
            },
            {
                "name": "stop",
                "display_name": "Stop",
                "type": "string or array",
                "description": "Custom stop sequences",
                "default": null
            },
            {
                "name": "structured_outputs",
                "display_name": "Structured Outputs",
                "type": "string or object",
                "description": "JSON schema enforcement",
                "default": null
            },
            {
                "name": "tool_choice",
                "display_name": "Tool Choice",
                "type": "string",
                "description": "Tool selection control",
                "default": null
            }
        ],
        "outputs": [
            {
                "name": "content",
                "display_name": "Content",
                "can_stream": true,
                "type": "string",
                "description": "The content portion of the generated response message."
            },
            {
                "name": "message",
                "display_name": "Message",
                "type": "message",
                "can_stream": true,
                "description": "The full generated response message."
            },
            {
                "name": "role",
                "display_name": "Role",
                "can_stream": true,
                "type": "string",
                "description": "Role of the response (usually 'assistant')"
            },
            {
                "name": "tool_calls",
                "display_name": "Tool Calls",
                "type": "array of tools",
                "description": "Tool calls made by the model"
            },
            {
                "name": "finish_reason",
                "display_name": "Finish Reason",
                "type": "string",
                "description": "Why the completion finished"
            },
            {
                "name": "usage",
                "display_name": "Token Usage",
                "type": "object",
                "description": "Token usage statistics"
            },
            {
                "name": "cost_total",
                "display_name": "Total Cost",
                "type": "number",
                "description": "Total cost for processing this request (USD)"
            },
            {
                "name": "cost_itemized",
                "display_name": "Itemized Cost",
                "type": "array",
                "description": "Detailed breakdown of costs"
            },
            {
                "name": "reasoning",
                "display_name": "Reasoning",
                "type": "string",
                "description": "The detailed reasoning chain from the model"
            },
            {
                "name": "refusal",
                "display_name": "Refusal",
                "type": "string",
                "description": "Model refusal response (if any)"
            }
        ],
        "pricing": {
            "reference": "https://openrouter.ai/models",
            "items": [
                {
                    "key": "input_cost_per_million",
                    "label": "Input Tokens (per 1M)",
                    "cost": 0,
                    "currency": "USD"
                },
                {
                    "key": "output_cost_per_million",
                    "label": "Output Tokens (per 1M)",
                    "cost": 0,
                    "currency": "USD"
                }
            ]
        },
        "id": "qwen-qwen3-4b-free"
    },
    {
        "display_name": "Qwen: Qwen3 8B",
        "description": "Qwen3-8B is a dense 8.2B parameter causal language model from the Qwen3 series, designed for both reasoning-heavy tasks and efficient dialogue. It supports seamless switching between \"thinking\" mode for math, coding, and logical inference, and \"non-thinking\" mode for general conversation. The model is fine-tuned for instruction-following, agent integration, creative writing, and multilingual use across 100+ languages and dialects. It natively supports a 32K token context window and can extend to 131K tokens with YaRN scaling.",
        "category": "llm",
        "provider": "qwen",
        "accepts_plugins": false,
        "model_id": "qwen/qwen3-8b",
        "context_length": 128000,
        "supported_parameters": [
            "frequency_penalty",
            "include_reasoning",
            "logit_bias",
            "max_tokens",
            "min_p",
            "presence_penalty",
            "reasoning",
            "repetition_penalty",
            "seed",
            "stop",
            "temperature",
            "top_k",
            "top_p"
        ],
        "inputs": [
            {
                "name": "system_prompt",
                "display_name": "System Prompt",
                "type": "string or message",
                "description": "System prompt for the model",
                "default": null
            },
            {
                "name": "messages",
                "display_name": "Messages",
                "type": "array of messages or message or string",
                "description": "Array of chat messages",
                "required": true
            },
            {
                "name": "temperature",
                "display_name": "Temperature",
                "type": "number",
                "description": "Controls randomness (0-2)",
                "default": null
            },
            {
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "type": "number",
                "description": "Maximum tokens to generate",
                "default": null
            },
            {
                "name": "top_p",
                "display_name": "Top P",
                "type": "number",
                "description": "Controls diversity via nucleus sampling",
                "default": null
            },
            {
                "name": "frequency_penalty",
                "display_name": "Frequency Penalty",
                "type": "number",
                "description": "Reduces repetition (-2 to 2)",
                "default": null
            },
            {
                "name": "include_reasoning",
                "display_name": "Include Reasoning",
                "type": "boolean",
                "description": "Include reasoning in response",
                "default": null
            },
            {
                "name": "presence_penalty",
                "display_name": "Presence Penalty",
                "type": "number",
                "description": "Encourages new topics (-2 to 2)",
                "default": null
            },
            {
                "name": "reasoning",
                "display_name": "Reasoning",
                "type": "boolean",
                "description": "Internal reasoning mode",
                "default": null
            },
            {
                "name": "seed",
                "display_name": "Seed",
                "type": "number",
                "description": "Deterministic outputs",
                "default": null
            },
            {
                "name": "stop",
                "display_name": "Stop",
                "type": "string or array",
                "description": "Custom stop sequences",
                "default": null
            }
        ],
        "outputs": [
            {
                "name": "content",
                "display_name": "Content",
                "can_stream": true,
                "type": "string",
                "description": "The content portion of the generated response message."
            },
            {
                "name": "message",
                "display_name": "Message",
                "type": "message",
                "can_stream": true,
                "description": "The full generated response message."
            },
            {
                "name": "role",
                "display_name": "Role",
                "can_stream": true,
                "type": "string",
                "description": "Role of the response (usually 'assistant')"
            },
            {
                "name": "finish_reason",
                "display_name": "Finish Reason",
                "type": "string",
                "description": "Why the completion finished"
            },
            {
                "name": "usage",
                "display_name": "Token Usage",
                "type": "object",
                "description": "Token usage statistics"
            },
            {
                "name": "cost_total",
                "display_name": "Total Cost",
                "type": "number",
                "description": "Total cost for processing this request (USD)"
            },
            {
                "name": "cost_itemized",
                "display_name": "Itemized Cost",
                "type": "array",
                "description": "Detailed breakdown of costs"
            },
            {
                "name": "reasoning",
                "display_name": "Reasoning",
                "type": "string",
                "description": "The detailed reasoning chain from the model"
            },
            {
                "name": "refusal",
                "display_name": "Refusal",
                "type": "string",
                "description": "Model refusal response (if any)"
            }
        ],
        "pricing": {
            "reference": "https://openrouter.ai/models",
            "items": [
                {
                    "key": "input_cost_per_million",
                    "label": "Input Tokens (per 1M)",
                    "cost": 0.035,
                    "currency": "USD"
                },
                {
                    "key": "output_cost_per_million",
                    "label": "Output Tokens (per 1M)",
                    "cost": 0.13799999999999998,
                    "currency": "USD"
                }
            ]
        },
        "id": "qwen-qwen3-8b"
    },
    {
        "display_name": "Qwen: Qwen3 8B (free)",
        "description": "Qwen3-8B is a dense 8.2B parameter causal language model from the Qwen3 series, designed for both reasoning-heavy tasks and efficient dialogue. It supports seamless switching between \"thinking\" mode for math, coding, and logical inference, and \"non-thinking\" mode for general conversation. The model is fine-tuned for instruction-following, agent integration, creative writing, and multilingual use across 100+ languages and dialects. It natively supports a 32K token context window and can extend to 131K tokens with YaRN scaling.",
        "category": "llm",
        "provider": "qwen",
        "accepts_plugins": false,
        "model_id": "qwen/qwen3-8b:free",
        "context_length": 40960,
        "supported_parameters": [
            "frequency_penalty",
            "include_reasoning",
            "logit_bias",
            "logprobs",
            "max_tokens",
            "min_p",
            "presence_penalty",
            "reasoning",
            "repetition_penalty",
            "seed",
            "stop",
            "temperature",
            "top_k",
            "top_logprobs",
            "top_p"
        ],
        "inputs": [
            {
                "name": "system_prompt",
                "display_name": "System Prompt",
                "type": "string or message",
                "description": "System prompt for the model",
                "default": null
            },
            {
                "name": "messages",
                "display_name": "Messages",
                "type": "array of messages or message or string",
                "description": "Array of chat messages",
                "required": true
            },
            {
                "name": "temperature",
                "display_name": "Temperature",
                "type": "number",
                "description": "Controls randomness (0-2)",
                "default": null
            },
            {
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "type": "number",
                "description": "Maximum tokens to generate",
                "default": null
            },
            {
                "name": "top_p",
                "display_name": "Top P",
                "type": "number",
                "description": "Controls diversity via nucleus sampling",
                "default": null
            },
            {
                "name": "frequency_penalty",
                "display_name": "Frequency Penalty",
                "type": "number",
                "description": "Reduces repetition (-2 to 2)",
                "default": null
            },
            {
                "name": "include_reasoning",
                "display_name": "Include Reasoning",
                "type": "boolean",
                "description": "Include reasoning in response",
                "default": null
            },
            {
                "name": "presence_penalty",
                "display_name": "Presence Penalty",
                "type": "number",
                "description": "Encourages new topics (-2 to 2)",
                "default": null
            },
            {
                "name": "reasoning",
                "display_name": "Reasoning",
                "type": "boolean",
                "description": "Internal reasoning mode",
                "default": null
            },
            {
                "name": "seed",
                "display_name": "Seed",
                "type": "number",
                "description": "Deterministic outputs",
                "default": null
            },
            {
                "name": "stop",
                "display_name": "Stop",
                "type": "string or array",
                "description": "Custom stop sequences",
                "default": null
            }
        ],
        "outputs": [
            {
                "name": "content",
                "display_name": "Content",
                "can_stream": true,
                "type": "string",
                "description": "The content portion of the generated response message."
            },
            {
                "name": "message",
                "display_name": "Message",
                "type": "message",
                "can_stream": true,
                "description": "The full generated response message."
            },
            {
                "name": "role",
                "display_name": "Role",
                "can_stream": true,
                "type": "string",
                "description": "Role of the response (usually 'assistant')"
            },
            {
                "name": "finish_reason",
                "display_name": "Finish Reason",
                "type": "string",
                "description": "Why the completion finished"
            },
            {
                "name": "usage",
                "display_name": "Token Usage",
                "type": "object",
                "description": "Token usage statistics"
            },
            {
                "name": "cost_total",
                "display_name": "Total Cost",
                "type": "number",
                "description": "Total cost for processing this request (USD)"
            },
            {
                "name": "cost_itemized",
                "display_name": "Itemized Cost",
                "type": "array",
                "description": "Detailed breakdown of costs"
            },
            {
                "name": "logprobs",
                "display_name": "Log Probabilities",
                "type": "object",
                "description": "Token probabilities and logprobs from the model"
            },
            {
                "name": "reasoning",
                "display_name": "Reasoning",
                "type": "string",
                "description": "The detailed reasoning chain from the model"
            },
            {
                "name": "refusal",
                "display_name": "Refusal",
                "type": "string",
                "description": "Model refusal response (if any)"
            }
        ],
        "pricing": {
            "reference": "https://openrouter.ai/models",
            "items": [
                {
                    "key": "input_cost_per_million",
                    "label": "Input Tokens (per 1M)",
                    "cost": 0,
                    "currency": "USD"
                },
                {
                    "key": "output_cost_per_million",
                    "label": "Output Tokens (per 1M)",
                    "cost": 0,
                    "currency": "USD"
                }
            ]
        },
        "id": "qwen-qwen3-8b-free"
    },
    {
        "display_name": "Qwen: Qwen3 Coder ",
        "description": "Qwen3-Coder-480B-A35B-Instruct is a Mixture-of-Experts (MoE) code generation model developed by the Qwen team. It is optimized for agentic coding tasks such as function calling, tool use, and long-context reasoning over repositories. The model features 480 billion total parameters, with 35 billion active per forward pass (8 out of 160 experts).\n\nPricing for the Alibaba endpoints varies by context length. Once a request is greater than 128k input tokens, the higher pricing is used.",
        "category": "llm",
        "provider": "qwen",
        "accepts_plugins": true,
        "model_id": "qwen/qwen3-coder",
        "context_length": 262144,
        "supported_parameters": [
            "frequency_penalty",
            "logit_bias",
            "logprobs",
            "max_tokens",
            "min_p",
            "presence_penalty",
            "repetition_penalty",
            "response_format",
            "seed",
            "stop",
            "structured_outputs",
            "temperature",
            "tool_choice",
            "tools",
            "top_k",
            "top_logprobs",
            "top_p"
        ],
        "inputs": [
            {
                "name": "system_prompt",
                "display_name": "System Prompt",
                "type": "string or message",
                "description": "System prompt for the model",
                "default": null
            },
            {
                "name": "messages",
                "display_name": "Messages",
                "type": "array of messages or message or string",
                "description": "Array of chat messages",
                "required": true
            },
            {
                "name": "tools",
                "display_name": "Tools",
                "type": "tool",
                "description": "Array of tools to use",
                "default": null,
                "allow_multiple": true
            },
            {
                "name": "temperature",
                "display_name": "Temperature",
                "type": "number",
                "description": "Controls randomness (0-2)",
                "default": null
            },
            {
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "type": "number",
                "description": "Maximum tokens to generate",
                "default": null
            },
            {
                "name": "top_p",
                "display_name": "Top P",
                "type": "number",
                "description": "Controls diversity via nucleus sampling",
                "default": null
            },
            {
                "name": "frequency_penalty",
                "display_name": "Frequency Penalty",
                "type": "number",
                "description": "Reduces repetition (-2 to 2)",
                "default": null
            },
            {
                "name": "presence_penalty",
                "display_name": "Presence Penalty",
                "type": "number",
                "description": "Encourages new topics (-2 to 2)",
                "default": null
            },
            {
                "name": "response_format",
                "display_name": "Response Format",
                "type": "string or object",
                "description": "Output format specification",
                "default": null
            },
            {
                "name": "seed",
                "display_name": "Seed",
                "type": "number",
                "description": "Deterministic outputs",
                "default": null
            },
            {
                "name": "stop",
                "display_name": "Stop",
                "type": "string or array",
                "description": "Custom stop sequences",
                "default": null
            },
            {
                "name": "structured_outputs",
                "display_name": "Structured Outputs",
                "type": "string or object",
                "description": "JSON schema enforcement",
                "default": null
            },
            {
                "name": "tool_choice",
                "display_name": "Tool Choice",
                "type": "string",
                "description": "Tool selection control",
                "default": null
            }
        ],
        "outputs": [
            {
                "name": "content",
                "display_name": "Content",
                "can_stream": true,
                "type": "string",
                "description": "The content portion of the generated response message."
            },
            {
                "name": "message",
                "display_name": "Message",
                "type": "message",
                "can_stream": true,
                "description": "The full generated response message."
            },
            {
                "name": "role",
                "display_name": "Role",
                "can_stream": true,
                "type": "string",
                "description": "Role of the response (usually 'assistant')"
            },
            {
                "name": "tool_calls",
                "display_name": "Tool Calls",
                "type": "array of tools",
                "description": "Tool calls made by the model"
            },
            {
                "name": "finish_reason",
                "display_name": "Finish Reason",
                "type": "string",
                "description": "Why the completion finished"
            },
            {
                "name": "usage",
                "display_name": "Token Usage",
                "type": "object",
                "description": "Token usage statistics"
            },
            {
                "name": "cost_total",
                "display_name": "Total Cost",
                "type": "number",
                "description": "Total cost for processing this request (USD)"
            },
            {
                "name": "cost_itemized",
                "display_name": "Itemized Cost",
                "type": "array",
                "description": "Detailed breakdown of costs"
            },
            {
                "name": "logprobs",
                "display_name": "Log Probabilities",
                "type": "object",
                "description": "Token probabilities and logprobs from the model"
            }
        ],
        "pricing": {
            "reference": "https://openrouter.ai/models",
            "items": [
                {
                    "key": "input_cost_per_million",
                    "label": "Input Tokens (per 1M)",
                    "cost": 0.19999999999999998,
                    "currency": "USD"
                },
                {
                    "key": "output_cost_per_million",
                    "label": "Output Tokens (per 1M)",
                    "cost": 0.7999999999999999,
                    "currency": "USD"
                }
            ]
        },
        "id": "qwen-qwen3-coder"
    },
    {
        "display_name": "Qwen: Qwen3 Coder  (free)",
        "description": "Qwen3-Coder-480B-A35B-Instruct is a Mixture-of-Experts (MoE) code generation model developed by the Qwen team. It is optimized for agentic coding tasks such as function calling, tool use, and long-context reasoning over repositories. The model features 480 billion total parameters, with 35 billion active per forward pass (8 out of 160 experts).\n\nPricing for the Alibaba endpoints varies by context length. Once a request is greater than 128k input tokens, the higher pricing is used.",
        "category": "llm",
        "provider": "qwen",
        "accepts_plugins": true,
        "model_id": "qwen/qwen3-coder:free",
        "context_length": 262144,
        "supported_parameters": [
            "frequency_penalty",
            "logit_bias",
            "logprobs",
            "max_tokens",
            "min_p",
            "presence_penalty",
            "repetition_penalty",
            "seed",
            "stop",
            "temperature",
            "tool_choice",
            "tools",
            "top_k",
            "top_logprobs",
            "top_p"
        ],
        "inputs": [
            {
                "name": "system_prompt",
                "display_name": "System Prompt",
                "type": "string or message",
                "description": "System prompt for the model",
                "default": null
            },
            {
                "name": "messages",
                "display_name": "Messages",
                "type": "array of messages or message or string",
                "description": "Array of chat messages",
                "required": true
            },
            {
                "name": "tools",
                "display_name": "Tools",
                "type": "tool",
                "description": "Array of tools to use",
                "default": null,
                "allow_multiple": true
            },
            {
                "name": "temperature",
                "display_name": "Temperature",
                "type": "number",
                "description": "Controls randomness (0-2)",
                "default": null
            },
            {
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "type": "number",
                "description": "Maximum tokens to generate",
                "default": null
            },
            {
                "name": "top_p",
                "display_name": "Top P",
                "type": "number",
                "description": "Controls diversity via nucleus sampling",
                "default": null
            },
            {
                "name": "frequency_penalty",
                "display_name": "Frequency Penalty",
                "type": "number",
                "description": "Reduces repetition (-2 to 2)",
                "default": null
            },
            {
                "name": "presence_penalty",
                "display_name": "Presence Penalty",
                "type": "number",
                "description": "Encourages new topics (-2 to 2)",
                "default": null
            },
            {
                "name": "seed",
                "display_name": "Seed",
                "type": "number",
                "description": "Deterministic outputs",
                "default": null
            },
            {
                "name": "stop",
                "display_name": "Stop",
                "type": "string or array",
                "description": "Custom stop sequences",
                "default": null
            },
            {
                "name": "tool_choice",
                "display_name": "Tool Choice",
                "type": "string",
                "description": "Tool selection control",
                "default": null
            }
        ],
        "outputs": [
            {
                "name": "content",
                "display_name": "Content",
                "can_stream": true,
                "type": "string",
                "description": "The content portion of the generated response message."
            },
            {
                "name": "message",
                "display_name": "Message",
                "type": "message",
                "can_stream": true,
                "description": "The full generated response message."
            },
            {
                "name": "role",
                "display_name": "Role",
                "can_stream": true,
                "type": "string",
                "description": "Role of the response (usually 'assistant')"
            },
            {
                "name": "tool_calls",
                "display_name": "Tool Calls",
                "type": "array of tools",
                "description": "Tool calls made by the model"
            },
            {
                "name": "finish_reason",
                "display_name": "Finish Reason",
                "type": "string",
                "description": "Why the completion finished"
            },
            {
                "name": "usage",
                "display_name": "Token Usage",
                "type": "object",
                "description": "Token usage statistics"
            },
            {
                "name": "cost_total",
                "display_name": "Total Cost",
                "type": "number",
                "description": "Total cost for processing this request (USD)"
            },
            {
                "name": "cost_itemized",
                "display_name": "Itemized Cost",
                "type": "array",
                "description": "Detailed breakdown of costs"
            },
            {
                "name": "logprobs",
                "display_name": "Log Probabilities",
                "type": "object",
                "description": "Token probabilities and logprobs from the model"
            }
        ],
        "pricing": {
            "reference": "https://openrouter.ai/models",
            "items": [
                {
                    "key": "input_cost_per_million",
                    "label": "Input Tokens (per 1M)",
                    "cost": 0,
                    "currency": "USD"
                },
                {
                    "key": "output_cost_per_million",
                    "label": "Output Tokens (per 1M)",
                    "cost": 0,
                    "currency": "USD"
                }
            ]
        },
        "id": "qwen-qwen3-coder-free"
    },
    {
        "display_name": "Qwen: QwQ 32B",
        "description": "QwQ is the reasoning model of the Qwen series. Compared with conventional instruction-tuned models, QwQ, which is capable of thinking and reasoning, can achieve significantly enhanced performance in downstream tasks, especially hard problems. QwQ-32B is the medium-sized reasoning model, which is capable of achieving competitive performance against state-of-the-art reasoning models, e.g., DeepSeek-R1, o1-mini.",
        "category": "llm",
        "provider": "qwen",
        "accepts_plugins": false,
        "model_id": "qwen/qwq-32b",
        "context_length": 131072,
        "supported_parameters": [
            "frequency_penalty",
            "include_reasoning",
            "logit_bias",
            "logprobs",
            "max_tokens",
            "min_p",
            "presence_penalty",
            "reasoning",
            "repetition_penalty",
            "response_format",
            "seed",
            "stop",
            "structured_outputs",
            "temperature",
            "top_k",
            "top_logprobs",
            "top_p"
        ],
        "inputs": [
            {
                "name": "system_prompt",
                "display_name": "System Prompt",
                "type": "string or message",
                "description": "System prompt for the model",
                "default": null
            },
            {
                "name": "messages",
                "display_name": "Messages",
                "type": "array of messages or message or string",
                "description": "Array of chat messages",
                "required": true
            },
            {
                "name": "temperature",
                "display_name": "Temperature",
                "type": "number",
                "description": "Controls randomness (0-2)",
                "default": null
            },
            {
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "type": "number",
                "description": "Maximum tokens to generate",
                "default": null
            },
            {
                "name": "top_p",
                "display_name": "Top P",
                "type": "number",
                "description": "Controls diversity via nucleus sampling",
                "default": null
            },
            {
                "name": "frequency_penalty",
                "display_name": "Frequency Penalty",
                "type": "number",
                "description": "Reduces repetition (-2 to 2)",
                "default": null
            },
            {
                "name": "include_reasoning",
                "display_name": "Include Reasoning",
                "type": "boolean",
                "description": "Include reasoning in response",
                "default": null
            },
            {
                "name": "presence_penalty",
                "display_name": "Presence Penalty",
                "type": "number",
                "description": "Encourages new topics (-2 to 2)",
                "default": null
            },
            {
                "name": "reasoning",
                "display_name": "Reasoning",
                "type": "boolean",
                "description": "Internal reasoning mode",
                "default": null
            },
            {
                "name": "response_format",
                "display_name": "Response Format",
                "type": "string or object",
                "description": "Output format specification",
                "default": null
            },
            {
                "name": "seed",
                "display_name": "Seed",
                "type": "number",
                "description": "Deterministic outputs",
                "default": null
            },
            {
                "name": "stop",
                "display_name": "Stop",
                "type": "string or array",
                "description": "Custom stop sequences",
                "default": null
            },
            {
                "name": "structured_outputs",
                "display_name": "Structured Outputs",
                "type": "string or object",
                "description": "JSON schema enforcement",
                "default": null
            }
        ],
        "outputs": [
            {
                "name": "content",
                "display_name": "Content",
                "can_stream": true,
                "type": "string",
                "description": "The content portion of the generated response message."
            },
            {
                "name": "message",
                "display_name": "Message",
                "type": "message",
                "can_stream": true,
                "description": "The full generated response message."
            },
            {
                "name": "role",
                "display_name": "Role",
                "can_stream": true,
                "type": "string",
                "description": "Role of the response (usually 'assistant')"
            },
            {
                "name": "finish_reason",
                "display_name": "Finish Reason",
                "type": "string",
                "description": "Why the completion finished"
            },
            {
                "name": "usage",
                "display_name": "Token Usage",
                "type": "object",
                "description": "Token usage statistics"
            },
            {
                "name": "cost_total",
                "display_name": "Total Cost",
                "type": "number",
                "description": "Total cost for processing this request (USD)"
            },
            {
                "name": "cost_itemized",
                "display_name": "Itemized Cost",
                "type": "array",
                "description": "Detailed breakdown of costs"
            },
            {
                "name": "logprobs",
                "display_name": "Log Probabilities",
                "type": "object",
                "description": "Token probabilities and logprobs from the model"
            },
            {
                "name": "reasoning",
                "display_name": "Reasoning",
                "type": "string",
                "description": "The detailed reasoning chain from the model"
            },
            {
                "name": "refusal",
                "display_name": "Refusal",
                "type": "string",
                "description": "Model refusal response (if any)"
            }
        ],
        "pricing": {
            "reference": "https://openrouter.ai/models",
            "items": [
                {
                    "key": "input_cost_per_million",
                    "label": "Input Tokens (per 1M)",
                    "cost": 0.075,
                    "currency": "USD"
                },
                {
                    "key": "output_cost_per_million",
                    "label": "Output Tokens (per 1M)",
                    "cost": 0.15,
                    "currency": "USD"
                }
            ]
        },
        "id": "qwen-qwq-32b"
    },
    {
        "display_name": "Qwen: QwQ 32B (free)",
        "description": "QwQ is the reasoning model of the Qwen series. Compared with conventional instruction-tuned models, QwQ, which is capable of thinking and reasoning, can achieve significantly enhanced performance in downstream tasks, especially hard problems. QwQ-32B is the medium-sized reasoning model, which is capable of achieving competitive performance against state-of-the-art reasoning models, e.g., DeepSeek-R1, o1-mini.",
        "category": "llm",
        "provider": "qwen",
        "accepts_plugins": false,
        "model_id": "qwen/qwq-32b:free",
        "context_length": 32768,
        "supported_parameters": [
            "frequency_penalty",
            "max_tokens",
            "presence_penalty",
            "response_format",
            "stop",
            "structured_outputs",
            "temperature",
            "top_k",
            "top_p"
        ],
        "inputs": [
            {
                "name": "system_prompt",
                "display_name": "System Prompt",
                "type": "string or message",
                "description": "System prompt for the model",
                "default": null
            },
            {
                "name": "messages",
                "display_name": "Messages",
                "type": "array of messages or message or string",
                "description": "Array of chat messages",
                "required": true
            },
            {
                "name": "temperature",
                "display_name": "Temperature",
                "type": "number",
                "description": "Controls randomness (0-2)",
                "default": null
            },
            {
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "type": "number",
                "description": "Maximum tokens to generate",
                "default": null
            },
            {
                "name": "top_p",
                "display_name": "Top P",
                "type": "number",
                "description": "Controls diversity via nucleus sampling",
                "default": null
            },
            {
                "name": "frequency_penalty",
                "display_name": "Frequency Penalty",
                "type": "number",
                "description": "Reduces repetition (-2 to 2)",
                "default": null
            },
            {
                "name": "presence_penalty",
                "display_name": "Presence Penalty",
                "type": "number",
                "description": "Encourages new topics (-2 to 2)",
                "default": null
            },
            {
                "name": "response_format",
                "display_name": "Response Format",
                "type": "string or object",
                "description": "Output format specification",
                "default": null
            },
            {
                "name": "stop",
                "display_name": "Stop",
                "type": "string or array",
                "description": "Custom stop sequences",
                "default": null
            },
            {
                "name": "structured_outputs",
                "display_name": "Structured Outputs",
                "type": "string or object",
                "description": "JSON schema enforcement",
                "default": null
            }
        ],
        "outputs": [
            {
                "name": "content",
                "display_name": "Content",
                "can_stream": true,
                "type": "string",
                "description": "The content portion of the generated response message."
            },
            {
                "name": "message",
                "display_name": "Message",
                "type": "message",
                "can_stream": true,
                "description": "The full generated response message."
            },
            {
                "name": "role",
                "display_name": "Role",
                "can_stream": true,
                "type": "string",
                "description": "Role of the response (usually 'assistant')"
            },
            {
                "name": "finish_reason",
                "display_name": "Finish Reason",
                "type": "string",
                "description": "Why the completion finished"
            },
            {
                "name": "usage",
                "display_name": "Token Usage",
                "type": "object",
                "description": "Token usage statistics"
            },
            {
                "name": "cost_total",
                "display_name": "Total Cost",
                "type": "number",
                "description": "Total cost for processing this request (USD)"
            },
            {
                "name": "cost_itemized",
                "display_name": "Itemized Cost",
                "type": "array",
                "description": "Detailed breakdown of costs"
            }
        ],
        "pricing": {
            "reference": "https://openrouter.ai/models",
            "items": [
                {
                    "key": "input_cost_per_million",
                    "label": "Input Tokens (per 1M)",
                    "cost": 0,
                    "currency": "USD"
                },
                {
                    "key": "output_cost_per_million",
                    "label": "Output Tokens (per 1M)",
                    "cost": 0,
                    "currency": "USD"
                }
            ]
        },
        "id": "qwen-qwq-32b-free"
    },
    {
        "display_name": "Qwen: QwQ 32B Preview",
        "description": "QwQ-32B-Preview is an experimental research model focused on AI reasoning capabilities developed by the Qwen Team. As a preview release, it demonstrates promising analytical abilities while having several important limitations:\n\n1. **Language Mixing and Code-Switching**: The model may mix languages or switch between them unexpectedly, affecting response clarity.\n2. **Recursive Reasoning Loops**: The model may enter circular reasoning patterns, leading to lengthy responses without a conclusive answer.\n3. **Safety and Ethical Considerations**: The model requires enhanced safety measures to ensure reliable and secure performance, and users should exercise caution when deploying it.\n4. **Performance and Benchmark Limitations**: The model excels in math and coding but has room for improvement in other areas, such as common sense reasoning and nuanced language understanding.\n\n",
        "category": "llm",
        "provider": "qwen",
        "accepts_plugins": false,
        "model_id": "qwen/qwq-32b-preview",
        "context_length": 32768,
        "supported_parameters": [
            "frequency_penalty",
            "logit_bias",
            "logprobs",
            "max_tokens",
            "min_p",
            "presence_penalty",
            "repetition_penalty",
            "seed",
            "stop",
            "temperature",
            "top_k",
            "top_logprobs",
            "top_p"
        ],
        "inputs": [
            {
                "name": "system_prompt",
                "display_name": "System Prompt",
                "type": "string or message",
                "description": "System prompt for the model",
                "default": null
            },
            {
                "name": "messages",
                "display_name": "Messages",
                "type": "array of messages or message or string",
                "description": "Array of chat messages",
                "required": true
            },
            {
                "name": "temperature",
                "display_name": "Temperature",
                "type": "number",
                "description": "Controls randomness (0-2)",
                "default": null
            },
            {
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "type": "number",
                "description": "Maximum tokens to generate",
                "default": null
            },
            {
                "name": "top_p",
                "display_name": "Top P",
                "type": "number",
                "description": "Controls diversity via nucleus sampling",
                "default": null
            },
            {
                "name": "frequency_penalty",
                "display_name": "Frequency Penalty",
                "type": "number",
                "description": "Reduces repetition (-2 to 2)",
                "default": null
            },
            {
                "name": "presence_penalty",
                "display_name": "Presence Penalty",
                "type": "number",
                "description": "Encourages new topics (-2 to 2)",
                "default": null
            },
            {
                "name": "seed",
                "display_name": "Seed",
                "type": "number",
                "description": "Deterministic outputs",
                "default": null
            },
            {
                "name": "stop",
                "display_name": "Stop",
                "type": "string or array",
                "description": "Custom stop sequences",
                "default": null
            }
        ],
        "outputs": [
            {
                "name": "content",
                "display_name": "Content",
                "can_stream": true,
                "type": "string",
                "description": "The content portion of the generated response message."
            },
            {
                "name": "message",
                "display_name": "Message",
                "type": "message",
                "can_stream": true,
                "description": "The full generated response message."
            },
            {
                "name": "role",
                "display_name": "Role",
                "can_stream": true,
                "type": "string",
                "description": "Role of the response (usually 'assistant')"
            },
            {
                "name": "finish_reason",
                "display_name": "Finish Reason",
                "type": "string",
                "description": "Why the completion finished"
            },
            {
                "name": "usage",
                "display_name": "Token Usage",
                "type": "object",
                "description": "Token usage statistics"
            },
            {
                "name": "cost_total",
                "display_name": "Total Cost",
                "type": "number",
                "description": "Total cost for processing this request (USD)"
            },
            {
                "name": "cost_itemized",
                "display_name": "Itemized Cost",
                "type": "array",
                "description": "Detailed breakdown of costs"
            },
            {
                "name": "logprobs",
                "display_name": "Log Probabilities",
                "type": "object",
                "description": "Token probabilities and logprobs from the model"
            }
        ],
        "pricing": {
            "reference": "https://openrouter.ai/models",
            "items": [
                {
                    "key": "input_cost_per_million",
                    "label": "Input Tokens (per 1M)",
                    "cost": 0.19999999999999998,
                    "currency": "USD"
                },
                {
                    "key": "output_cost_per_million",
                    "label": "Output Tokens (per 1M)",
                    "cost": 0.19999999999999998,
                    "currency": "USD"
                }
            ]
        },
        "id": "qwen-qwq-32b-preview"
    },
    {
        "display_name": "Random Error",
        "description": "Randomly throws an error based on probability, useful for testing error handling and flow robustness.",
        "icon": "zap",
        "category": "testing",
        "is_constant": false,
        "needs_key_from": [],
        "inputs": [
            {
                "name": "value",
                "display_name": "Value",
                "type": "any",
                "description": "The value to return if no error is thrown.",
                "required": true
            },
            {
                "name": "errorProbability",
                "display_name": "Error Probability",
                "type": "number",
                "description": "Probability of throwing an error (0.0 = never, 1.0 = always, 0.5 = 50% chance).",
                "required": false
            },
            {
                "name": "errorMessage",
                "display_name": "Error Message",
                "type": "string",
                "description": "Custom error message to throw when an error occurs.",
                "required": false
            },
            {
                "name": "errorType",
                "display_name": "Error Type",
                "type": "string",
                "description": "Custom error type/name for the Error object.",
                "required": false
            }
        ],
        "outputs": [
            {
                "name": "result",
                "display_name": "Result",
                "type": "any",
                "description": "The input value if no error is thrown."
            }
        ],
        "settings": [],
        "timeout": 3000,
        "retry_limit": 3,
        "id": "random-error"
    },
    {
        "display_name": "Random Number",
        "description": "Generates random numbers with configurable range and distribution",
        "icon": "dice",
        "category": "math",
        "is_constant": true,
        "is_plugin": true,
        "inputs": [
            {
                "name": "min",
                "display_name": "Minimum",
                "type": "number",
                "description": "The minimum value (for uniform and integer distributions)",
                "default": 0
            },
            {
                "name": "max",
                "display_name": "Maximum",
                "type": "number",
                "description": "The maximum value (for uniform and integer distributions)",
                "default": 1
            },
            {
                "name": "mean",
                "display_name": "Mean",
                "type": "number",
                "description": "The mean value (for normal distribution)",
                "default": 0
            },
            {
                "name": "seed",
                "display_name": "Seed",
                "type": "number",
                "description": "Optional seed for reproducible random numbers",
                "required": false
            },
            {
                "name": "distribution",
                "display_name": "Distribution",
                "type": "string",
                "description": "The type of random distribution to use",
                "options": [
                    "uniform",
                    "normal",
                    "integer"
                ],
                "default": "uniform"
            },
            {
                "name": "stddev",
                "display_name": "Standard Deviation",
                "type": "number",
                "description": "The standard deviation (for normal distribution)",
                "default": 1
            }
        ],
        "outputs": [
            {
                "name": "value",
                "display_name": "Value",
                "type": "number",
                "description": "The generated random number"
            }
        ],
        "settings": [],
        "timeout": 3000,
        "retry_limit": 3,
        "id": "random-number"
    },
    {
        "display_name": "Range",
        "description": "Calculates range statistics of numbers",
        "category": "math",
        "inputs": [
            {
                "name": "numbers",
                "display_name": "Numbers",
                "description": "Array of numbers to analyze",
                "type": "array",
                "required": true
            }
        ],
        "outputs": [
            {
                "name": "min",
                "display_name": "Minimum",
                "description": "Smallest value",
                "type": "number"
            },
            {
                "name": "max",
                "display_name": "Maximum",
                "description": "Largest value",
                "type": "number"
            },
            {
                "name": "range",
                "display_name": "Range",
                "description": "Difference between max and min",
                "type": "number"
            }
        ],
        "id": "range"
    },
    {
        "display_name": "Response Format",
        "description": "Define a JSON Schema response format for structured outputs from LLMs.",
        "icon": "fa-code",
        "category": "prompting",
        "custom_render_height": 200,
        "is_constant": true,
        "is_resizable": true,
        "inputs": [
            {
                "name": "name",
                "display_name": "Name",
                "type": "string",
                "description": "Optional override for the name of the response format, used to identify the schema."
            },
            {
                "name": "strict",
                "display_name": "Strict",
                "type": "boolean",
                "description": "Optional override for strict mode. When true, the model must follow the schema exactly."
            },
            {
                "name": "schema",
                "display_name": "Schema",
                "type": "object",
                "description": "Optional override for the JSON Schema definition that the model response must follow."
            }
        ],
        "outputs": [
            {
                "name": "response_format",
                "display_name": "Response Format",
                "type": "object",
                "description": "The response format object definition for structured outputs."
            }
        ],
        "settings": [
            {
                "name": "name",
                "display_name": "Name",
                "type": "string",
                "description": "The name of the response format, used to identify the schema.",
                "default": "response"
            },
            {
                "name": "strict",
                "display_name": "Strict",
                "type": "boolean",
                "description": "When true, the model must follow the schema exactly. When false, the model can be more flexible.",
                "default": true
            },
            {
                "name": "schema",
                "display_name": "Schema",
                "type": "object",
                "description": "The JSON Schema definition that the model response must follow."
            }
        ],
        "timeout": 3000,
        "retry_limit": 3,
        "id": "response-format"
    },
    {
        "display_name": "Round",
        "description": "Rounds a number to nearest integer",
        "category": "math",
        "inputs": [
            {
                "name": "number",
                "display_name": "Number",
                "description": "Number to round",
                "type": "number",
                "required": true
            }
        ],
        "outputs": [
            {
                "name": "result",
                "display_name": "Result",
                "description": "Rounded number",
                "type": "number"
            }
        ],
        "id": "round"
    },
    {
        "display_name": "Self Healing Error",
        "description": "Throws an error initially but succeeds on retry, useful for testing retry logic and error recovery.",
        "icon": "refresh-cw",
        "category": "testing",
        "is_constant": false,
        "needs_key_from": [],
        "inputs": [
            {
                "name": "value",
                "display_name": "Value",
                "type": "any",
                "description": "The value to return after healing.",
                "required": true
            },
            {
                "name": "failCount",
                "display_name": "Fail Count",
                "type": "number",
                "description": "Number of times to fail before succeeding (default: 1).",
                "required": false
            },
            {
                "name": "errorMessage",
                "display_name": "Error Message",
                "type": "string",
                "description": "Custom error message to throw during failures.",
                "required": false
            }
        ],
        "outputs": [
            {
                "name": "result",
                "display_name": "Result",
                "type": "any",
                "description": "The input value after the node has healed."
            }
        ],
        "settings": [],
        "timeout": 3000,
        "retry_limit": 3,
        "id": "self-healing-error"
    },
    {
        "display_name": "Semantic Search",
        "description": "Search knowledge base using semantic similarity and vector embeddings",
        "category": "knowledge",
        "is_constant": false,
        "is_plugin": true,
        "is_output": false,
        "needs_key_from": [
            "openai"
        ],
        "inputs": [
            {
                "name": "query",
                "display_name": "Search Query",
                "type": "string",
                "description": "Text query to search for semantically similar content",
                "required": true
            },
            {
                "name": "limit",
                "display_name": "Result Limit",
                "type": "number",
                "description": "Maximum number of results to return",
                "default": 10
            },
            {
                "name": "similarity_threshold",
                "display_name": "Similarity Threshold",
                "type": "number",
                "description": "Minimum similarity score (0.0 to 1.0)",
                "default": 0
            },
            {
                "name": "document_id",
                "display_name": "Document ID Filter",
                "type": "string",
                "description": "Optional: Filter results to specific document",
                "default": null
            }
        ],
        "outputs": [
            {
                "name": "results",
                "display_name": "Search Results",
                "type": "array",
                "description": "Array of search results with similarity scores"
            },
            {
                "name": "count",
                "display_name": "Result Count",
                "type": "number",
                "description": "Number of results returned"
            },
            {
                "name": "success",
                "display_name": "Success",
                "type": "boolean",
                "description": "Whether the search completed successfully"
            },
            {
                "name": "error",
                "display_name": "Error",
                "type": "string",
                "description": "Error message if search failed"
            }
        ],
        "settings": [
            {
                "name": "embedding_model",
                "display_name": "Embedding Model",
                "type": "string",
                "description": "Override the default embedding model",
                "default": null
            }
        ],
        "id": "semantic-search"
    },
    {
        "display_name": "Set Object Property",
        "description": "Set or add a key-value pair to an object, returning a new object with the property set. Can also create a new object from scratch if the input object is empty or null.",
        "icon": "fa-edit",
        "category": "data",
        "inputs": [
            {
                "name": "object",
                "display_name": "Object",
                "type": "object",
                "description": "The object to set the property on (can be null/empty to create a new object)",
                "required": true
            },
            {
                "name": "key",
                "display_name": "Key",
                "type": "string",
                "description": "The name of the property to set",
                "required": true
            },
            {
                "name": "value",
                "display_name": "Value",
                "type": "any",
                "description": "The value to set for the property",
                "required": true
            }
        ],
        "outputs": [
            {
                "name": "object",
                "display_name": "Object",
                "type": "object",
                "description": "The new object with the property set"
            },
            {
                "name": "key",
                "display_name": "Key",
                "type": "string",
                "description": "The key that was set"
            },
            {
                "name": "value",
                "display_name": "Value",
                "type": "any",
                "description": "The value that was set"
            },
            {
                "name": "was_new",
                "display_name": "Was New",
                "type": "boolean",
                "description": "Whether this was a new property (true) or overwrote an existing one (false)"
            }
        ],
        "settings": [
            {
                "name": "overwrite",
                "display_name": "Overwrite",
                "type": "boolean",
                "description": "Whether to overwrite existing properties (true) or only set if property doesn't exist (false)",
                "default": true
            }
        ],
        "timeout": 3000,
        "retry_limit": 3,
        "id": "set-object-property"
    },
    {
        "display_name": "Standard Deviation",
        "description": "Calculates standard deviation of numbers",
        "category": "math",
        "inputs": [
            {
                "name": "numbers",
                "display_name": "Numbers",
                "description": "Array of numbers to calculate standard deviation of",
                "type": "array of numbers",
                "required": true
            }
        ],
        "outputs": [
            {
                "name": "result",
                "display_name": "Result",
                "description": "Standard deviation",
                "type": "number"
            },
            {
                "name": "variance",
                "display_name": "Variance",
                "description": "Variance (standard deviation squared)",
                "type": "number"
            }
        ],
        "id": "standard-deviation"
    },
    {
        "display_name": "String",
        "description": "A simple string node that outputs a string",
        "icon": "string",
        "category": "text",
        "custom_render_height": 120,
        "is_constant": true,
        "is_resizable": true,
        "inputs": [
            {
                "name": "value",
                "display_name": "Value",
                "type": "string",
                "description": "Optional value to override the default value.",
                "required": false
            }
        ],
        "outputs": [
            {
                "name": "value",
                "display_name": "Value",
                "type": "string",
                "description": "The value of the string."
            }
        ],
        "settings": [
            {
                "name": "value",
                "display_name": "Value",
                "type": "string",
                "is_multiline": true,
                "description": "The value of the string.",
                "default": "Hello, world!"
            }
        ],
        "timeout": 3000,
        "retry_limit": 3,
        "id": "string"
    },
    {
        "display_name": "String Case Convert",
        "description": "Converts text to different letter cases",
        "category": "text",
        "inputs": [
            {
                "name": "text",
                "display_name": "Text",
                "description": "The text to convert",
                "type": "string",
                "required": true
            }
        ],
        "settings": [
            {
                "name": "case",
                "display_name": "Case",
                "description": "The case to convert to",
                "type": "string",
                "options": [
                    "upper",
                    "lower",
                    "title",
                    "sentence",
                    "camel",
                    "snake",
                    "kebab"
                ],
                "default": "lower"
            }
        ],
        "outputs": [
            {
                "name": "text",
                "display_name": "Text",
                "description": "The converted text",
                "type": "string"
            }
        ],
        "id": "string-case"
    },
    {
        "display_name": "String Concatenate",
        "description": "Joins two or more strings together",
        "category": "text",
        "inputs": [
            {
                "name": "string_a",
                "display_name": "String A",
                "description": "The string to concatenate first",
                "type": "string",
                "required": true
            },
            {
                "name": "string_b",
                "display_name": "String B",
                "description": "The string to concatenate second",
                "type": "string",
                "required": true
            }
        ],
        "outputs": [
            {
                "name": "text",
                "display_name": "Text",
                "description": "The combined string",
                "type": "string"
            }
        ],
        "id": "string-concat"
    },
    {
        "display_name": "String Contains",
        "description": "Checks if a string contains a specific substring",
        "category": "text",
        "inputs": [
            {
                "name": "text",
                "display_name": "Text",
                "description": "The text to search in",
                "type": "string",
                "required": true
            },
            {
                "name": "search",
                "display_name": "Search Text",
                "description": "The text to search for",
                "type": "string",
                "required": true
            }
        ],
        "settings": [
            {
                "name": "case_sensitive",
                "display_name": "Case Sensitive",
                "description": "Whether the search should match exact case",
                "type": "boolean",
                "default": true
            }
        ],
        "outputs": [
            {
                "name": "contains",
                "display_name": "Contains",
                "description": "Whether the text contains the search string",
                "type": "boolean"
            },
            {
                "name": "position",
                "display_name": "Position",
                "description": "The position where the search text was found (-1 if not found)",
                "type": "number"
            }
        ],
        "id": "string-contains"
    },
    {
        "display_name": "String Length",
        "description": "Counts the number of characters in a string",
        "category": "text",
        "inputs": [
            {
                "name": "text",
                "display_name": "Text",
                "description": "The string to measure",
                "type": "string",
                "required": true
            }
        ],
        "outputs": [
            {
                "name": "length",
                "display_name": "Length",
                "description": "The number of characters in the string",
                "type": "number"
            }
        ],
        "id": "string-length"
    },
    {
        "display_name": "String Match",
        "description": "Performs regex matching on text with capture groups",
        "category": "text",
        "inputs": [
            {
                "name": "text",
                "display_name": "Text",
                "description": "The text to match against",
                "type": "string",
                "required": true
            },
            {
                "name": "pattern",
                "display_name": "Pattern",
                "description": "Regular expression pattern",
                "type": "string",
                "required": true
            }
        ],
        "settings": [
            {
                "name": "case_sensitive",
                "display_name": "Case Sensitive",
                "description": "Whether the pattern is case sensitive",
                "type": "boolean",
                "default": true
            },
            {
                "name": "global",
                "display_name": "Global Match",
                "description": "Find all matches instead of just the first",
                "type": "boolean",
                "default": false
            }
        ],
        "outputs": [
            {
                "name": "matched",
                "display_name": "Matched",
                "description": "Whether the pattern matched",
                "type": "boolean"
            },
            {
                "name": "matches",
                "display_name": "Matches",
                "description": "Array of match results",
                "type": "array"
            },
            {
                "name": "groups",
                "display_name": "Groups",
                "description": "Captured groups from the first match",
                "type": "array"
            }
        ],
        "id": "string-match"
    },
    {
        "display_name": "String Replace",
        "description": "Replaces occurrences of text within a string",
        "category": "text",
        "inputs": [
            {
                "name": "text",
                "display_name": "Text",
                "description": "The string to perform replacements on",
                "type": "string",
                "required": true
            },
            {
                "name": "search",
                "display_name": "Search For",
                "description": "The text to find",
                "type": "string",
                "required": true
            },
            {
                "name": "replacement",
                "display_name": "Replace With",
                "description": "The text to replace with",
                "type": "string",
                "required": true
            }
        ],
        "settings": [
            {
                "name": "regex",
                "display_name": "Use Regex",
                "description": "Treat search text as regular expression",
                "type": "boolean",
                "default": false
            },
            {
                "name": "case_sensitive",
                "display_name": "Case Sensitive",
                "description": "Match exact case when searching",
                "type": "boolean",
                "default": true
            }
        ],
        "outputs": [
            {
                "name": "text",
                "display_name": "Text",
                "description": "The text after replacements",
                "type": "string"
            }
        ],
        "id": "string-replace"
    },
    {
        "display_name": "String Split",
        "description": "Splits a string into an array using a delimiter",
        "category": "text",
        "inputs": [
            {
                "name": "text",
                "display_name": "Text",
                "description": "The string to split",
                "type": "string",
                "required": true
            }
        ],
        "settings": [
            {
                "name": "delimiter",
                "display_name": "Delimiter",
                "description": "The character or string to split on",
                "type": "string",
                "default": " "
            },
            {
                "name": "limit",
                "display_name": "Limit",
                "description": "Maximum number of splits (optional)",
                "type": "number",
                "default": -1
            }
        ],
        "outputs": [
            {
                "name": "parts",
                "display_name": "Parts",
                "description": "Array of split string parts",
                "type": "array"
            }
        ],
        "id": "string-split"
    },
    {
        "display_name": "String Substring",
        "description": "Extracts a portion of text between start and end positions",
        "category": "text",
        "inputs": [
            {
                "name": "text",
                "display_name": "Text",
                "description": "The text to extract from",
                "type": "string",
                "required": true
            },
            {
                "name": "start",
                "display_name": "Start Index",
                "description": "Starting position (0-based)",
                "type": "number",
                "required": true
            },
            {
                "name": "end",
                "display_name": "End Index",
                "description": "Ending position (optional)",
                "type": "number",
                "required": false
            }
        ],
        "outputs": [
            {
                "name": "text",
                "display_name": "Text",
                "description": "The extracted substring",
                "type": "string"
            }
        ],
        "id": "string-substring"
    },
    {
        "display_name": "String Template",
        "description": "Fills a template string with variable values",
        "category": "text",
        "inputs": [
            {
                "name": "template",
                "display_name": "Template",
                "description": "The template string with {variable} placeholders",
                "type": "string",
                "required": true
            },
            {
                "name": "variables",
                "display_name": "Variables",
                "description": "Object containing variable values",
                "type": "object",
                "required": true
            }
        ],
        "settings": [
            {
                "name": "keep_missing",
                "display_name": "Keep Missing",
                "description": "Keep placeholders that don't have values instead of removing them",
                "type": "boolean",
                "default": false
            }
        ],
        "outputs": [
            {
                "name": "text",
                "display_name": "Text",
                "description": "The filled template string",
                "type": "string"
            }
        ],
        "id": "string-template"
    },
    {
        "display_name": "String Trim",
        "description": "Removes whitespace or specified characters from the start and/or end of text",
        "category": "text",
        "inputs": [
            {
                "name": "text",
                "display_name": "Text",
                "description": "The text to trim",
                "type": "string",
                "required": true
            },
            {
                "name": "chars",
                "display_name": "Characters",
                "description": "Specific characters to trim (optional)",
                "type": "string",
                "required": false
            }
        ],
        "settings": [
            {
                "name": "mode",
                "display_name": "Trim Mode",
                "description": "Which parts of the string to trim",
                "type": "string",
                "options": [
                    "both",
                    "start",
                    "end"
                ],
                "default": "both"
            }
        ],
        "outputs": [
            {
                "name": "text",
                "display_name": "Text",
                "description": "The trimmed text",
                "type": "string"
            }
        ],
        "id": "string-trim"
    },
    {
        "display_name": "Subtract",
        "description": "Subtracts second number from first",
        "category": "math",
        "is_plugin": true,
        "inputs": [
            {
                "name": "a",
                "display_name": "A",
                "description": "Number to subtract from",
                "type": "number",
                "required": true
            },
            {
                "name": "b",
                "display_name": "B",
                "description": "Number to subtract",
                "type": "number",
                "required": true
            }
        ],
        "outputs": [
            {
                "name": "result",
                "display_name": "Result",
                "description": "A minus B",
                "type": "number"
            }
        ],
        "id": "subtract"
    },
    {
        "display_name": "Switch",
        "description": "Routes data based on a value matching cases",
        "category": "logic",
        "inputs": [
            {
                "name": "value",
                "display_name": "Value",
                "description": "Value to compare against cases",
                "type": "any",
                "required": true
            },
            {
                "name": "cases",
                "display_name": "Cases",
                "description": "Array of possible values to match",
                "type": "array",
                "required": true
            },
            {
                "name": "outputs",
                "display_name": "Outputs",
                "description": "Array of values to output for each matching case",
                "type": "array"
            },
            {
                "name": "default_output",
                "display_name": "Default Output",
                "description": "Value to output if no case matches",
                "type": "any"
            }
        ],
        "outputs": [
            {
                "name": "result",
                "display_name": "Result",
                "description": "Output based on matched case",
                "type": "any"
            },
            {
                "name": "case_index",
                "display_name": "Case Index",
                "description": "Index of the matched case (or -1 for default)",
                "type": "number"
            },
            {
                "name": "matched",
                "display_name": "Matched",
                "description": "Whether any case was matched",
                "type": "boolean"
            }
        ],
        "dynamic_outputs": {
            "description": "Outputs for each case",
            "pattern": "case_{{index}}",
            "conditional": true
        },
        "id": "switch"
    },
    {
        "display_name": "System Prompt",
        "description": "Draft a text-based system prompt for an LLM, with configurable variables.",
        "icon": "fa-comment",
        "category": "prompting",
        "custom_render_height": 450,
        "width": 450,
        "is_constant": true,
        "is_resizable": true,
        "has_expanded_view": true,
        "inputs": [
            {
                "name": "variables",
                "display_name": "Variables",
                "type": "object",
                "allow_multiple": true,
                "description": "Connect key-value pairs to inject into any matched {{key}} in the text content."
            }
        ],
        "outputs": [
            {
                "name": "message",
                "display_name": "Message",
                "type": "message",
                "description": "The message object, containing the prompt text and system role."
            },
            {
                "name": "prompt",
                "display_name": "Prompt",
                "type": "string",
                "description": "The prompt text after variables have been injected."
            }
        ],
        "settings": [
            {
                "name": "content",
                "display_name": "Content",
                "type": "string",
                "description": "The content of the message, can be made of text, images, or other types.",
                "required": true
            }
        ],
        "timeout": 3000,
        "retry_limit": 3,
        "id": "system-prompt"
    },
    {
        "display_name": "Throw Error",
        "description": "Throws an error with a custom message and optional context for testing error handling.",
        "icon": "alert-triangle",
        "category": "testing",
        "is_constant": false,
        "needs_key_from": [],
        "inputs": [
            {
                "name": "message",
                "display_name": "Error Message",
                "type": "string",
                "description": "The error message to throw.",
                "required": true
            },
            {
                "name": "context",
                "display_name": "Additional Context",
                "type": "string",
                "description": "Optional additional context or details about the error.",
                "required": false
            },
            {
                "name": "errorType",
                "display_name": "Error Type",
                "type": "string",
                "description": "Optional custom error type/name for the Error object.",
                "required": false
            }
        ],
        "outputs": [],
        "settings": [],
        "timeout": 3000,
        "retry_limit": 1,
        "id": "throw-error"
    },
    {
        "display_name": "Token Count",
        "description": "Count tokens in text, messages, or arrays of messages using the cl100k_base tokenizer (used by GPT-4, GPT-3.5-turbo, and other OpenAI models).",
        "icon": "hash",
        "category": "text",
        "inputs": [
            {
                "name": "input",
                "display_name": "Input",
                "type": "string or message or array",
                "description": "Text string, Message object with {role, content}, or array of messages to count tokens for.",
                "required": true
            }
        ],
        "outputs": [
            {
                "name": "tokens",
                "display_name": "Token Count",
                "type": "number",
                "description": "Total number of tokens in the input"
            }
        ],
        "id": "token-count"
    },
    {
        "display_name": "Tokenizer",
        "description": "Convert text, messages, or arrays of messages into arrays of token numbers using cl200k_base or cl100k_base tokenizers.",
        "icon": "hash",
        "category": "text",
        "inputs": [
            {
                "name": "input",
                "display_name": "Input",
                "type": "string or message or array",
                "description": "Text string, Message object with {role, content}, or array of messages to tokenize.",
                "required": true
            }
        ],
        "outputs": [
            {
                "name": "tokens",
                "display_name": "Tokens",
                "type": "array",
                "description": "Array of token numbers representing the input"
            }
        ],
        "settings": [
            {
                "name": "tokenizer",
                "display_name": "Tokenizer",
                "type": "string",
                "description": "The tokenizer to use for tokenization",
                "default": "cl200k_base",
                "options": [
                    "cl200k_base",
                    "cl100k_base"
                ],
                "required": true
            }
        ],
        "id": "tokenizer"
    },
    {
        "display_name": "Tool",
        "description": "Define a tool / function call for a LLM to use.",
        "icon": "fa-comment",
        "category": "prompting",
        "custom_render_height": 200,
        "is_constant": true,
        "is_resizable": true,
        "inputs": [
            {
                "name": "name",
                "display_name": "Name",
                "type": "string",
                "description": "Optional override for the name of the tool, visible to the LLM and typically alphanumeric without spaces."
            },
            {
                "name": "description",
                "display_name": "Description",
                "type": "string",
                "description": "Optional override for a short description of the tool, visible to the LLM."
            },
            {
                "name": "parameters",
                "display_name": "Parameters",
                "type": "object",
                "description": "Optional override for the JSON Schema of the parameters for the tool."
            }
        ],
        "outputs": [
            {
                "name": "tool",
                "display_name": "Tool",
                "type": "tool",
                "description": "The tool object definition."
            }
        ],
        "settings": [
            {
                "name": "name",
                "display_name": "Name",
                "type": "string",
                "description": "The name of the tool, visible to the LLM and typically alphanumeric without spaces."
            },
            {
                "name": "description",
                "display_name": "Description",
                "type": "string",
                "description": "A short description of the tool, visible to the LLM."
            },
            {
                "name": "parameters",
                "display_name": "Parameters",
                "type": "object",
                "description": "The JSON Schema of the parameters for the tool, which the LLM will match when it calls the tool."
            }
        ],
        "timeout": 3000,
        "retry_limit": 3,
        "id": "tool"
    },
    {
        "display_name": "Truncate by Tokens",
        "description": "Keep only the most recent messages that fit within the specified token limit.",
        "icon": "scissors",
        "category": "messages",
        "inputs": [
            {
                "name": "messages",
                "display_name": "Messages",
                "type": "array",
                "description": "Array of message objects to truncate",
                "required": true
            },
            {
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "type": "number",
                "description": "Maximum number of tokens to keep",
                "required": true
            }
        ],
        "outputs": [
            {
                "name": "messages",
                "display_name": "Messages",
                "type": "array",
                "description": "Array containing messages that fit within the token limit"
            },
            {
                "name": "token_count",
                "display_name": "Token Count",
                "type": "number",
                "description": "Total number of tokens in the truncated messages"
            },
            {
                "name": "truncated",
                "display_name": "Truncated",
                "type": "boolean",
                "description": "Whether any messages were removed due to token limit"
            }
        ],
        "settings": [
            {
                "name": "tokenizer",
                "display_name": "Tokenizer",
                "type": "string",
                "description": "The tokenizer to use for counting tokens",
                "default": "cl200k_base",
                "options": [
                    "cl200k_base",
                    "cl100k_base"
                ],
                "required": true
            }
        ],
        "id": "truncate-by-tokens"
    },
    {
        "display_name": "Truncate by Tokens from Start",
        "description": "Keep only the first messages that fit within the specified token limit.",
        "icon": "scissors",
        "category": "messages",
        "inputs": [
            {
                "name": "messages",
                "display_name": "Messages",
                "type": "array",
                "description": "Array of message objects to truncate",
                "required": true
            },
            {
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "type": "number",
                "description": "Maximum number of tokens to keep",
                "required": true
            }
        ],
        "outputs": [
            {
                "name": "messages",
                "display_name": "Messages",
                "type": "array",
                "description": "Array containing messages that fit within the token limit"
            },
            {
                "name": "token_count",
                "display_name": "Token Count",
                "type": "number",
                "description": "Total number of tokens in the truncated messages"
            },
            {
                "name": "truncated",
                "display_name": "Truncated",
                "type": "boolean",
                "description": "Whether any messages were removed due to token limit"
            }
        ],
        "settings": [
            {
                "name": "tokenizer",
                "display_name": "Tokenizer",
                "type": "string",
                "description": "The tokenizer to use for counting tokens",
                "default": "cl200k_base",
                "options": [
                    "cl200k_base",
                    "cl100k_base"
                ],
                "required": true
            }
        ],
        "id": "truncate-by-tokens-from-start"
    },
    {
        "display_name": "Truncate by Tokens Preserve System",
        "description": "Always keep system messages, truncate other messages to fit within the specified token limit.",
        "icon": "shield",
        "category": "messages",
        "inputs": [
            {
                "name": "messages",
                "display_name": "Messages",
                "type": "array",
                "description": "Array of message objects to truncate",
                "required": true
            },
            {
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "type": "number",
                "description": "Maximum number of tokens to keep",
                "required": true
            }
        ],
        "outputs": [
            {
                "name": "messages",
                "display_name": "Messages",
                "type": "array",
                "description": "Array containing system messages and other messages that fit within the token limit"
            },
            {
                "name": "token_count",
                "display_name": "Token Count",
                "type": "number",
                "description": "Total number of tokens in the truncated messages"
            },
            {
                "name": "truncated",
                "display_name": "Truncated",
                "type": "boolean",
                "description": "Whether any non-system messages were removed due to token limit"
            },
            {
                "name": "system_count",
                "display_name": "System Count",
                "type": "number",
                "description": "Number of system messages preserved"
            }
        ],
        "settings": [
            {
                "name": "tokenizer",
                "display_name": "Tokenizer",
                "type": "string",
                "description": "The tokenizer to use for counting tokens",
                "default": "cl200k_base",
                "options": [
                    "cl200k_base",
                    "cl100k_base"
                ],
                "required": true
            },
            {
                "name": "count_system",
                "display_name": "Count System",
                "type": "boolean",
                "description": "Whether system messages count toward the token limit (false = always include system messages)",
                "default": false,
                "required": true
            }
        ],
        "id": "truncate-by-tokens-preserve-system"
    },
    {
        "display_name": "Untokenizer",
        "description": "Convert arrays of token numbers back into text strings using cl200k_base or cl100k_base tokenizers.",
        "icon": "hash",
        "category": "text",
        "inputs": [
            {
                "name": "tokens",
                "display_name": "Tokens",
                "type": "array",
                "description": "Array of token numbers to convert back to text.",
                "required": true
            }
        ],
        "outputs": [
            {
                "name": "text",
                "display_name": "Text",
                "type": "string",
                "description": "The decoded text string from the token array"
            }
        ],
        "settings": [
            {
                "name": "tokenizer",
                "display_name": "Tokenizer",
                "type": "string",
                "description": "The tokenizer to use for untokenization",
                "default": "cl200k_base",
                "options": [
                    "cl200k_base",
                    "cl100k_base"
                ],
                "required": true
            }
        ],
        "id": "untokenizer"
    },
    {
        "display_name": "xAI: Grok 2 1212",
        "description": "Grok 2 1212 introduces significant enhancements to accuracy, instruction adherence, and multilingual support, making it a powerful and flexible choice for developers seeking a highly steerable, intelligent model.",
        "category": "llm",
        "provider": "x-ai",
        "accepts_plugins": true,
        "model_id": "x-ai/grok-2-1212",
        "context_length": 131072,
        "supported_parameters": [
            "frequency_penalty",
            "logprobs",
            "max_tokens",
            "presence_penalty",
            "response_format",
            "seed",
            "stop",
            "temperature",
            "tool_choice",
            "tools",
            "top_logprobs",
            "top_p"
        ],
        "inputs": [
            {
                "name": "system_prompt",
                "display_name": "System Prompt",
                "type": "string or message",
                "description": "System prompt for the model",
                "default": null
            },
            {
                "name": "messages",
                "display_name": "Messages",
                "type": "array of messages or message or string",
                "description": "Array of chat messages",
                "required": true
            },
            {
                "name": "tools",
                "display_name": "Tools",
                "type": "tool",
                "description": "Array of tools to use",
                "default": null,
                "allow_multiple": true
            },
            {
                "name": "temperature",
                "display_name": "Temperature",
                "type": "number",
                "description": "Controls randomness (0-2)",
                "default": null
            },
            {
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "type": "number",
                "description": "Maximum tokens to generate",
                "default": null
            },
            {
                "name": "top_p",
                "display_name": "Top P",
                "type": "number",
                "description": "Controls diversity via nucleus sampling",
                "default": null
            },
            {
                "name": "frequency_penalty",
                "display_name": "Frequency Penalty",
                "type": "number",
                "description": "Reduces repetition (-2 to 2)",
                "default": null
            },
            {
                "name": "presence_penalty",
                "display_name": "Presence Penalty",
                "type": "number",
                "description": "Encourages new topics (-2 to 2)",
                "default": null
            },
            {
                "name": "response_format",
                "display_name": "Response Format",
                "type": "string or object",
                "description": "Output format specification",
                "default": null
            },
            {
                "name": "seed",
                "display_name": "Seed",
                "type": "number",
                "description": "Deterministic outputs",
                "default": null
            },
            {
                "name": "stop",
                "display_name": "Stop",
                "type": "string or array",
                "description": "Custom stop sequences",
                "default": null
            },
            {
                "name": "tool_choice",
                "display_name": "Tool Choice",
                "type": "string",
                "description": "Tool selection control",
                "default": null
            }
        ],
        "outputs": [
            {
                "name": "content",
                "display_name": "Content",
                "can_stream": true,
                "type": "string",
                "description": "The content portion of the generated response message."
            },
            {
                "name": "message",
                "display_name": "Message",
                "type": "message",
                "can_stream": true,
                "description": "The full generated response message."
            },
            {
                "name": "role",
                "display_name": "Role",
                "can_stream": true,
                "type": "string",
                "description": "Role of the response (usually 'assistant')"
            },
            {
                "name": "tool_calls",
                "display_name": "Tool Calls",
                "type": "array of tools",
                "description": "Tool calls made by the model"
            },
            {
                "name": "finish_reason",
                "display_name": "Finish Reason",
                "type": "string",
                "description": "Why the completion finished"
            },
            {
                "name": "usage",
                "display_name": "Token Usage",
                "type": "object",
                "description": "Token usage statistics"
            },
            {
                "name": "cost_total",
                "display_name": "Total Cost",
                "type": "number",
                "description": "Total cost for processing this request (USD)"
            },
            {
                "name": "cost_itemized",
                "display_name": "Itemized Cost",
                "type": "array",
                "description": "Detailed breakdown of costs"
            },
            {
                "name": "logprobs",
                "display_name": "Log Probabilities",
                "type": "object",
                "description": "Token probabilities and logprobs from the model"
            }
        ],
        "pricing": {
            "reference": "https://openrouter.ai/models",
            "items": [
                {
                    "key": "input_cost_per_million",
                    "label": "Input Tokens (per 1M)",
                    "cost": 2,
                    "currency": "USD"
                },
                {
                    "key": "output_cost_per_million",
                    "label": "Output Tokens (per 1M)",
                    "cost": 10,
                    "currency": "USD"
                }
            ]
        },
        "id": "x-ai-grok-2-1212"
    },
    {
        "display_name": "xAI: Grok 2 Vision 1212",
        "description": "Grok 2 Vision 1212 advances image-based AI with stronger visual comprehension, refined instruction-following, and multilingual support. From object recognition to style analysis, it empowers developers to build more intuitive, visually aware applications. Its enhanced steerability and reasoning establish a robust foundation for next-generation image solutions.\n\nTo read more about this model, check out [xAI's announcement](https://x.ai/blog/grok-1212).",
        "category": "llm",
        "provider": "x-ai",
        "accepts_plugins": false,
        "model_id": "x-ai/grok-2-vision-1212",
        "context_length": 32768,
        "supported_parameters": [
            "frequency_penalty",
            "logprobs",
            "max_tokens",
            "presence_penalty",
            "response_format",
            "seed",
            "stop",
            "temperature",
            "top_logprobs",
            "top_p"
        ],
        "inputs": [
            {
                "name": "prompt",
                "display_name": "Prompt",
                "type": "string",
                "description": "Text prompt for completion",
                "required": true
            },
            {
                "name": "temperature",
                "display_name": "Temperature",
                "type": "number",
                "description": "Controls randomness (0-2)",
                "default": null
            },
            {
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "type": "number",
                "description": "Maximum tokens to generate",
                "default": null
            },
            {
                "name": "top_p",
                "display_name": "Top P",
                "type": "number",
                "description": "Controls diversity via nucleus sampling",
                "default": null
            },
            {
                "name": "frequency_penalty",
                "display_name": "Frequency Penalty",
                "type": "number",
                "description": "Reduces repetition (-2 to 2)",
                "default": null
            },
            {
                "name": "presence_penalty",
                "display_name": "Presence Penalty",
                "type": "number",
                "description": "Encourages new topics (-2 to 2)",
                "default": null
            },
            {
                "name": "response_format",
                "display_name": "Response Format",
                "type": "string or object",
                "description": "Output format specification",
                "default": null
            },
            {
                "name": "seed",
                "display_name": "Seed",
                "type": "number",
                "description": "Deterministic outputs",
                "default": null
            },
            {
                "name": "stop",
                "display_name": "Stop",
                "type": "string or array",
                "description": "Custom stop sequences",
                "default": null
            }
        ],
        "outputs": [
            {
                "name": "content",
                "display_name": "Content",
                "can_stream": true,
                "type": "string",
                "description": "The generated completion text"
            },
            {
                "name": "finish_reason",
                "display_name": "Finish Reason",
                "type": "string",
                "description": "Why the completion finished"
            },
            {
                "name": "usage",
                "display_name": "Token Usage",
                "type": "object",
                "description": "Token usage statistics"
            },
            {
                "name": "cost_total",
                "display_name": "Total Cost",
                "type": "number",
                "description": "Total cost for processing this request (USD)"
            },
            {
                "name": "cost_itemized",
                "display_name": "Itemized Cost",
                "type": "array",
                "description": "Detailed breakdown of costs"
            },
            {
                "name": "logprobs",
                "display_name": "Log Probabilities",
                "type": "object",
                "description": "Token probabilities and logprobs from the model"
            }
        ],
        "pricing": {
            "reference": "https://openrouter.ai/models",
            "items": [
                {
                    "key": "input_cost_per_million",
                    "label": "Input Tokens (per 1M)",
                    "cost": 2,
                    "currency": "USD"
                },
                {
                    "key": "output_cost_per_million",
                    "label": "Output Tokens (per 1M)",
                    "cost": 10,
                    "currency": "USD"
                }
            ]
        },
        "id": "x-ai-grok-2-vision-1212"
    },
    {
        "display_name": "xAI: Grok 3",
        "description": "Grok 3 is the latest model from xAI. It's their flagship model that excels at enterprise use cases like data extraction, coding, and text summarization. Possesses deep domain knowledge in finance, healthcare, law, and science.\n\n",
        "category": "llm",
        "provider": "x-ai",
        "accepts_plugins": true,
        "model_id": "x-ai/grok-3",
        "context_length": 131072,
        "supported_parameters": [
            "frequency_penalty",
            "logprobs",
            "max_tokens",
            "presence_penalty",
            "response_format",
            "seed",
            "stop",
            "structured_outputs",
            "temperature",
            "tool_choice",
            "tools",
            "top_logprobs",
            "top_p"
        ],
        "inputs": [
            {
                "name": "system_prompt",
                "display_name": "System Prompt",
                "type": "string or message",
                "description": "System prompt for the model",
                "default": null
            },
            {
                "name": "messages",
                "display_name": "Messages",
                "type": "array of messages or message or string",
                "description": "Array of chat messages",
                "required": true
            },
            {
                "name": "tools",
                "display_name": "Tools",
                "type": "tool",
                "description": "Array of tools to use",
                "default": null,
                "allow_multiple": true
            },
            {
                "name": "temperature",
                "display_name": "Temperature",
                "type": "number",
                "description": "Controls randomness (0-2)",
                "default": null
            },
            {
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "type": "number",
                "description": "Maximum tokens to generate",
                "default": null
            },
            {
                "name": "top_p",
                "display_name": "Top P",
                "type": "number",
                "description": "Controls diversity via nucleus sampling",
                "default": null
            },
            {
                "name": "frequency_penalty",
                "display_name": "Frequency Penalty",
                "type": "number",
                "description": "Reduces repetition (-2 to 2)",
                "default": null
            },
            {
                "name": "presence_penalty",
                "display_name": "Presence Penalty",
                "type": "number",
                "description": "Encourages new topics (-2 to 2)",
                "default": null
            },
            {
                "name": "response_format",
                "display_name": "Response Format",
                "type": "string or object",
                "description": "Output format specification",
                "default": null
            },
            {
                "name": "seed",
                "display_name": "Seed",
                "type": "number",
                "description": "Deterministic outputs",
                "default": null
            },
            {
                "name": "stop",
                "display_name": "Stop",
                "type": "string or array",
                "description": "Custom stop sequences",
                "default": null
            },
            {
                "name": "structured_outputs",
                "display_name": "Structured Outputs",
                "type": "string or object",
                "description": "JSON schema enforcement",
                "default": null
            },
            {
                "name": "tool_choice",
                "display_name": "Tool Choice",
                "type": "string",
                "description": "Tool selection control",
                "default": null
            }
        ],
        "outputs": [
            {
                "name": "content",
                "display_name": "Content",
                "can_stream": true,
                "type": "string",
                "description": "The content portion of the generated response message."
            },
            {
                "name": "message",
                "display_name": "Message",
                "type": "message",
                "can_stream": true,
                "description": "The full generated response message."
            },
            {
                "name": "role",
                "display_name": "Role",
                "can_stream": true,
                "type": "string",
                "description": "Role of the response (usually 'assistant')"
            },
            {
                "name": "tool_calls",
                "display_name": "Tool Calls",
                "type": "array of tools",
                "description": "Tool calls made by the model"
            },
            {
                "name": "finish_reason",
                "display_name": "Finish Reason",
                "type": "string",
                "description": "Why the completion finished"
            },
            {
                "name": "usage",
                "display_name": "Token Usage",
                "type": "object",
                "description": "Token usage statistics"
            },
            {
                "name": "cost_total",
                "display_name": "Total Cost",
                "type": "number",
                "description": "Total cost for processing this request (USD)"
            },
            {
                "name": "cost_itemized",
                "display_name": "Itemized Cost",
                "type": "array",
                "description": "Detailed breakdown of costs"
            },
            {
                "name": "logprobs",
                "display_name": "Log Probabilities",
                "type": "object",
                "description": "Token probabilities and logprobs from the model"
            }
        ],
        "pricing": {
            "reference": "https://openrouter.ai/models",
            "items": [
                {
                    "key": "input_cost_per_million",
                    "label": "Input Tokens (per 1M)",
                    "cost": 3,
                    "currency": "USD"
                },
                {
                    "key": "output_cost_per_million",
                    "label": "Output Tokens (per 1M)",
                    "cost": 15,
                    "currency": "USD"
                }
            ]
        },
        "id": "x-ai-grok-3"
    },
    {
        "display_name": "xAI: Grok 3 Beta",
        "description": "Grok 3 is the latest model from xAI. It's their flagship model that excels at enterprise use cases like data extraction, coding, and text summarization. Possesses deep domain knowledge in finance, healthcare, law, and science.\n\nExcels in structured tasks and benchmarks like GPQA, LCB, and MMLU-Pro where it outperforms Grok 3 Mini even on high thinking. \n\nNote: That there are two xAI endpoints for this model. By default when using this model we will always route you to the base endpoint. If you want the fast endpoint you can add `provider: { sort: throughput}`, to sort by throughput instead. \n",
        "category": "llm",
        "provider": "x-ai",
        "accepts_plugins": true,
        "model_id": "x-ai/grok-3-beta",
        "context_length": 131072,
        "supported_parameters": [
            "frequency_penalty",
            "logprobs",
            "max_tokens",
            "presence_penalty",
            "response_format",
            "seed",
            "stop",
            "temperature",
            "tool_choice",
            "tools",
            "top_logprobs",
            "top_p"
        ],
        "inputs": [
            {
                "name": "system_prompt",
                "display_name": "System Prompt",
                "type": "string or message",
                "description": "System prompt for the model",
                "default": null
            },
            {
                "name": "messages",
                "display_name": "Messages",
                "type": "array of messages or message or string",
                "description": "Array of chat messages",
                "required": true
            },
            {
                "name": "tools",
                "display_name": "Tools",
                "type": "tool",
                "description": "Array of tools to use",
                "default": null,
                "allow_multiple": true
            },
            {
                "name": "temperature",
                "display_name": "Temperature",
                "type": "number",
                "description": "Controls randomness (0-2)",
                "default": null
            },
            {
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "type": "number",
                "description": "Maximum tokens to generate",
                "default": null
            },
            {
                "name": "top_p",
                "display_name": "Top P",
                "type": "number",
                "description": "Controls diversity via nucleus sampling",
                "default": null
            },
            {
                "name": "frequency_penalty",
                "display_name": "Frequency Penalty",
                "type": "number",
                "description": "Reduces repetition (-2 to 2)",
                "default": null
            },
            {
                "name": "presence_penalty",
                "display_name": "Presence Penalty",
                "type": "number",
                "description": "Encourages new topics (-2 to 2)",
                "default": null
            },
            {
                "name": "response_format",
                "display_name": "Response Format",
                "type": "string or object",
                "description": "Output format specification",
                "default": null
            },
            {
                "name": "seed",
                "display_name": "Seed",
                "type": "number",
                "description": "Deterministic outputs",
                "default": null
            },
            {
                "name": "stop",
                "display_name": "Stop",
                "type": "string or array",
                "description": "Custom stop sequences",
                "default": null
            },
            {
                "name": "tool_choice",
                "display_name": "Tool Choice",
                "type": "string",
                "description": "Tool selection control",
                "default": null
            }
        ],
        "outputs": [
            {
                "name": "content",
                "display_name": "Content",
                "can_stream": true,
                "type": "string",
                "description": "The content portion of the generated response message."
            },
            {
                "name": "message",
                "display_name": "Message",
                "type": "message",
                "can_stream": true,
                "description": "The full generated response message."
            },
            {
                "name": "role",
                "display_name": "Role",
                "can_stream": true,
                "type": "string",
                "description": "Role of the response (usually 'assistant')"
            },
            {
                "name": "tool_calls",
                "display_name": "Tool Calls",
                "type": "array of tools",
                "description": "Tool calls made by the model"
            },
            {
                "name": "finish_reason",
                "display_name": "Finish Reason",
                "type": "string",
                "description": "Why the completion finished"
            },
            {
                "name": "usage",
                "display_name": "Token Usage",
                "type": "object",
                "description": "Token usage statistics"
            },
            {
                "name": "cost_total",
                "display_name": "Total Cost",
                "type": "number",
                "description": "Total cost for processing this request (USD)"
            },
            {
                "name": "cost_itemized",
                "display_name": "Itemized Cost",
                "type": "array",
                "description": "Detailed breakdown of costs"
            },
            {
                "name": "logprobs",
                "display_name": "Log Probabilities",
                "type": "object",
                "description": "Token probabilities and logprobs from the model"
            }
        ],
        "pricing": {
            "reference": "https://openrouter.ai/models",
            "items": [
                {
                    "key": "input_cost_per_million",
                    "label": "Input Tokens (per 1M)",
                    "cost": 3,
                    "currency": "USD"
                },
                {
                    "key": "output_cost_per_million",
                    "label": "Output Tokens (per 1M)",
                    "cost": 15,
                    "currency": "USD"
                }
            ]
        },
        "id": "x-ai-grok-3-beta"
    },
    {
        "display_name": "xAI: Grok 3 Mini",
        "description": "A lightweight model that thinks before responding. Fast, smart, and great for logic-based tasks that do not require deep domain knowledge. The raw thinking traces are accessible.",
        "category": "llm",
        "provider": "x-ai",
        "accepts_plugins": true,
        "model_id": "x-ai/grok-3-mini",
        "context_length": 131072,
        "supported_parameters": [
            "include_reasoning",
            "logprobs",
            "max_tokens",
            "reasoning",
            "response_format",
            "seed",
            "stop",
            "structured_outputs",
            "temperature",
            "tool_choice",
            "tools",
            "top_logprobs",
            "top_p"
        ],
        "inputs": [
            {
                "name": "system_prompt",
                "display_name": "System Prompt",
                "type": "string or message",
                "description": "System prompt for the model",
                "default": null
            },
            {
                "name": "messages",
                "display_name": "Messages",
                "type": "array of messages or message or string",
                "description": "Array of chat messages",
                "required": true
            },
            {
                "name": "tools",
                "display_name": "Tools",
                "type": "tool",
                "description": "Array of tools to use",
                "default": null,
                "allow_multiple": true
            },
            {
                "name": "temperature",
                "display_name": "Temperature",
                "type": "number",
                "description": "Controls randomness (0-2)",
                "default": null
            },
            {
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "type": "number",
                "description": "Maximum tokens to generate",
                "default": null
            },
            {
                "name": "top_p",
                "display_name": "Top P",
                "type": "number",
                "description": "Controls diversity via nucleus sampling",
                "default": null
            },
            {
                "name": "include_reasoning",
                "display_name": "Include Reasoning",
                "type": "boolean",
                "description": "Include reasoning in response",
                "default": null
            },
            {
                "name": "reasoning",
                "display_name": "Reasoning",
                "type": "boolean",
                "description": "Internal reasoning mode",
                "default": null
            },
            {
                "name": "response_format",
                "display_name": "Response Format",
                "type": "string or object",
                "description": "Output format specification",
                "default": null
            },
            {
                "name": "seed",
                "display_name": "Seed",
                "type": "number",
                "description": "Deterministic outputs",
                "default": null
            },
            {
                "name": "stop",
                "display_name": "Stop",
                "type": "string or array",
                "description": "Custom stop sequences",
                "default": null
            },
            {
                "name": "structured_outputs",
                "display_name": "Structured Outputs",
                "type": "string or object",
                "description": "JSON schema enforcement",
                "default": null
            },
            {
                "name": "tool_choice",
                "display_name": "Tool Choice",
                "type": "string",
                "description": "Tool selection control",
                "default": null
            }
        ],
        "outputs": [
            {
                "name": "content",
                "display_name": "Content",
                "can_stream": true,
                "type": "string",
                "description": "The content portion of the generated response message."
            },
            {
                "name": "message",
                "display_name": "Message",
                "type": "message",
                "can_stream": true,
                "description": "The full generated response message."
            },
            {
                "name": "role",
                "display_name": "Role",
                "can_stream": true,
                "type": "string",
                "description": "Role of the response (usually 'assistant')"
            },
            {
                "name": "tool_calls",
                "display_name": "Tool Calls",
                "type": "array of tools",
                "description": "Tool calls made by the model"
            },
            {
                "name": "finish_reason",
                "display_name": "Finish Reason",
                "type": "string",
                "description": "Why the completion finished"
            },
            {
                "name": "usage",
                "display_name": "Token Usage",
                "type": "object",
                "description": "Token usage statistics"
            },
            {
                "name": "cost_total",
                "display_name": "Total Cost",
                "type": "number",
                "description": "Total cost for processing this request (USD)"
            },
            {
                "name": "cost_itemized",
                "display_name": "Itemized Cost",
                "type": "array",
                "description": "Detailed breakdown of costs"
            },
            {
                "name": "logprobs",
                "display_name": "Log Probabilities",
                "type": "object",
                "description": "Token probabilities and logprobs from the model"
            },
            {
                "name": "reasoning",
                "display_name": "Reasoning",
                "type": "string",
                "description": "The detailed reasoning chain from the model"
            },
            {
                "name": "refusal",
                "display_name": "Refusal",
                "type": "string",
                "description": "Model refusal response (if any)"
            }
        ],
        "pricing": {
            "reference": "https://openrouter.ai/models",
            "items": [
                {
                    "key": "input_cost_per_million",
                    "label": "Input Tokens (per 1M)",
                    "cost": 0.3,
                    "currency": "USD"
                },
                {
                    "key": "output_cost_per_million",
                    "label": "Output Tokens (per 1M)",
                    "cost": 0.5,
                    "currency": "USD"
                }
            ]
        },
        "id": "x-ai-grok-3-mini"
    },
    {
        "display_name": "xAI: Grok 3 Mini Beta",
        "description": "Grok 3 Mini is a lightweight, smaller thinking model. Unlike traditional models that generate answers immediately, Grok 3 Mini thinks before responding. It’s ideal for reasoning-heavy tasks that don’t demand extensive domain knowledge, and shines in math-specific and quantitative use cases, such as solving challenging puzzles or math problems.\n\nTransparent \"thinking\" traces accessible. Defaults to low reasoning, can boost with setting `reasoning: { effort: \"high\" }`\n\nNote: That there are two xAI endpoints for this model. By default when using this model we will always route you to the base endpoint. If you want the fast endpoint you can add `provider: { sort: throughput}`, to sort by throughput instead. \n",
        "category": "llm",
        "provider": "x-ai",
        "accepts_plugins": true,
        "model_id": "x-ai/grok-3-mini-beta",
        "context_length": 131072,
        "supported_parameters": [
            "include_reasoning",
            "logprobs",
            "max_tokens",
            "reasoning",
            "response_format",
            "seed",
            "stop",
            "temperature",
            "tool_choice",
            "tools",
            "top_logprobs",
            "top_p"
        ],
        "inputs": [
            {
                "name": "system_prompt",
                "display_name": "System Prompt",
                "type": "string or message",
                "description": "System prompt for the model",
                "default": null
            },
            {
                "name": "messages",
                "display_name": "Messages",
                "type": "array of messages or message or string",
                "description": "Array of chat messages",
                "required": true
            },
            {
                "name": "tools",
                "display_name": "Tools",
                "type": "tool",
                "description": "Array of tools to use",
                "default": null,
                "allow_multiple": true
            },
            {
                "name": "temperature",
                "display_name": "Temperature",
                "type": "number",
                "description": "Controls randomness (0-2)",
                "default": null
            },
            {
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "type": "number",
                "description": "Maximum tokens to generate",
                "default": null
            },
            {
                "name": "top_p",
                "display_name": "Top P",
                "type": "number",
                "description": "Controls diversity via nucleus sampling",
                "default": null
            },
            {
                "name": "include_reasoning",
                "display_name": "Include Reasoning",
                "type": "boolean",
                "description": "Include reasoning in response",
                "default": null
            },
            {
                "name": "reasoning",
                "display_name": "Reasoning",
                "type": "boolean",
                "description": "Internal reasoning mode",
                "default": null
            },
            {
                "name": "response_format",
                "display_name": "Response Format",
                "type": "string or object",
                "description": "Output format specification",
                "default": null
            },
            {
                "name": "seed",
                "display_name": "Seed",
                "type": "number",
                "description": "Deterministic outputs",
                "default": null
            },
            {
                "name": "stop",
                "display_name": "Stop",
                "type": "string or array",
                "description": "Custom stop sequences",
                "default": null
            },
            {
                "name": "tool_choice",
                "display_name": "Tool Choice",
                "type": "string",
                "description": "Tool selection control",
                "default": null
            }
        ],
        "outputs": [
            {
                "name": "content",
                "display_name": "Content",
                "can_stream": true,
                "type": "string",
                "description": "The content portion of the generated response message."
            },
            {
                "name": "message",
                "display_name": "Message",
                "type": "message",
                "can_stream": true,
                "description": "The full generated response message."
            },
            {
                "name": "role",
                "display_name": "Role",
                "can_stream": true,
                "type": "string",
                "description": "Role of the response (usually 'assistant')"
            },
            {
                "name": "tool_calls",
                "display_name": "Tool Calls",
                "type": "array of tools",
                "description": "Tool calls made by the model"
            },
            {
                "name": "finish_reason",
                "display_name": "Finish Reason",
                "type": "string",
                "description": "Why the completion finished"
            },
            {
                "name": "usage",
                "display_name": "Token Usage",
                "type": "object",
                "description": "Token usage statistics"
            },
            {
                "name": "cost_total",
                "display_name": "Total Cost",
                "type": "number",
                "description": "Total cost for processing this request (USD)"
            },
            {
                "name": "cost_itemized",
                "display_name": "Itemized Cost",
                "type": "array",
                "description": "Detailed breakdown of costs"
            },
            {
                "name": "logprobs",
                "display_name": "Log Probabilities",
                "type": "object",
                "description": "Token probabilities and logprobs from the model"
            },
            {
                "name": "reasoning",
                "display_name": "Reasoning",
                "type": "string",
                "description": "The detailed reasoning chain from the model"
            },
            {
                "name": "refusal",
                "display_name": "Refusal",
                "type": "string",
                "description": "Model refusal response (if any)"
            }
        ],
        "pricing": {
            "reference": "https://openrouter.ai/models",
            "items": [
                {
                    "key": "input_cost_per_million",
                    "label": "Input Tokens (per 1M)",
                    "cost": 0.3,
                    "currency": "USD"
                },
                {
                    "key": "output_cost_per_million",
                    "label": "Output Tokens (per 1M)",
                    "cost": 0.5,
                    "currency": "USD"
                }
            ]
        },
        "id": "x-ai-grok-3-mini-beta"
    },
    {
        "display_name": "xAI: Grok 4",
        "description": "Grok 4 is xAI's latest reasoning model with a 256k context window. It supports parallel tool calling, structured outputs, and both image and text inputs. Note that reasoning is not exposed, reasoning cannot be disabled, and the reasoning effort cannot be specified. Pricing increases once the total tokens in a given request is greater than 128k tokens. See more details on the [xAI docs](https://docs.x.ai/docs/models/grok-4-0709)",
        "category": "llm",
        "provider": "x-ai",
        "accepts_plugins": true,
        "model_id": "x-ai/grok-4",
        "context_length": 256000,
        "supported_parameters": [
            "include_reasoning",
            "logprobs",
            "max_tokens",
            "reasoning",
            "response_format",
            "seed",
            "structured_outputs",
            "temperature",
            "tool_choice",
            "tools",
            "top_logprobs",
            "top_p"
        ],
        "inputs": [
            {
                "name": "system_prompt",
                "display_name": "System Prompt",
                "type": "string or message",
                "description": "System prompt for the model",
                "default": null
            },
            {
                "name": "messages",
                "display_name": "Messages",
                "type": "array of messages or message or string",
                "description": "Array of chat messages",
                "required": true
            },
            {
                "name": "tools",
                "display_name": "Tools",
                "type": "tool",
                "description": "Array of tools to use",
                "default": null,
                "allow_multiple": true
            },
            {
                "name": "temperature",
                "display_name": "Temperature",
                "type": "number",
                "description": "Controls randomness (0-2)",
                "default": null
            },
            {
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "type": "number",
                "description": "Maximum tokens to generate",
                "default": null
            },
            {
                "name": "top_p",
                "display_name": "Top P",
                "type": "number",
                "description": "Controls diversity via nucleus sampling",
                "default": null
            },
            {
                "name": "include_reasoning",
                "display_name": "Include Reasoning",
                "type": "boolean",
                "description": "Include reasoning in response",
                "default": null
            },
            {
                "name": "reasoning",
                "display_name": "Reasoning",
                "type": "boolean",
                "description": "Internal reasoning mode",
                "default": null
            },
            {
                "name": "response_format",
                "display_name": "Response Format",
                "type": "string or object",
                "description": "Output format specification",
                "default": null
            },
            {
                "name": "seed",
                "display_name": "Seed",
                "type": "number",
                "description": "Deterministic outputs",
                "default": null
            },
            {
                "name": "structured_outputs",
                "display_name": "Structured Outputs",
                "type": "string or object",
                "description": "JSON schema enforcement",
                "default": null
            },
            {
                "name": "tool_choice",
                "display_name": "Tool Choice",
                "type": "string",
                "description": "Tool selection control",
                "default": null
            }
        ],
        "outputs": [
            {
                "name": "content",
                "display_name": "Content",
                "can_stream": true,
                "type": "string",
                "description": "The content portion of the generated response message."
            },
            {
                "name": "message",
                "display_name": "Message",
                "type": "message",
                "can_stream": true,
                "description": "The full generated response message."
            },
            {
                "name": "role",
                "display_name": "Role",
                "can_stream": true,
                "type": "string",
                "description": "Role of the response (usually 'assistant')"
            },
            {
                "name": "tool_calls",
                "display_name": "Tool Calls",
                "type": "array of tools",
                "description": "Tool calls made by the model"
            },
            {
                "name": "finish_reason",
                "display_name": "Finish Reason",
                "type": "string",
                "description": "Why the completion finished"
            },
            {
                "name": "usage",
                "display_name": "Token Usage",
                "type": "object",
                "description": "Token usage statistics"
            },
            {
                "name": "cost_total",
                "display_name": "Total Cost",
                "type": "number",
                "description": "Total cost for processing this request (USD)"
            },
            {
                "name": "cost_itemized",
                "display_name": "Itemized Cost",
                "type": "array",
                "description": "Detailed breakdown of costs"
            },
            {
                "name": "logprobs",
                "display_name": "Log Probabilities",
                "type": "object",
                "description": "Token probabilities and logprobs from the model"
            },
            {
                "name": "reasoning",
                "display_name": "Reasoning",
                "type": "string",
                "description": "The detailed reasoning chain from the model"
            },
            {
                "name": "refusal",
                "display_name": "Refusal",
                "type": "string",
                "description": "Model refusal response (if any)"
            }
        ],
        "pricing": {
            "reference": "https://openrouter.ai/models",
            "items": [
                {
                    "key": "input_cost_per_million",
                    "label": "Input Tokens (per 1M)",
                    "cost": 3,
                    "currency": "USD"
                },
                {
                    "key": "output_cost_per_million",
                    "label": "Output Tokens (per 1M)",
                    "cost": 15,
                    "currency": "USD"
                }
            ]
        },
        "id": "x-ai-grok-4"
    },
    {
        "display_name": "xAI: Grok Vision Beta",
        "description": "Grok Vision Beta is xAI's experimental language model with vision capability.\n\n",
        "category": "llm",
        "provider": "x-ai",
        "accepts_plugins": false,
        "model_id": "x-ai/grok-vision-beta",
        "context_length": 8192,
        "supported_parameters": [
            "frequency_penalty",
            "logprobs",
            "max_tokens",
            "presence_penalty",
            "response_format",
            "seed",
            "stop",
            "temperature",
            "top_logprobs",
            "top_p"
        ],
        "inputs": [
            {
                "name": "prompt",
                "display_name": "Prompt",
                "type": "string",
                "description": "Text prompt for completion",
                "required": true
            },
            {
                "name": "temperature",
                "display_name": "Temperature",
                "type": "number",
                "description": "Controls randomness (0-2)",
                "default": null
            },
            {
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "type": "number",
                "description": "Maximum tokens to generate",
                "default": null
            },
            {
                "name": "top_p",
                "display_name": "Top P",
                "type": "number",
                "description": "Controls diversity via nucleus sampling",
                "default": null
            },
            {
                "name": "frequency_penalty",
                "display_name": "Frequency Penalty",
                "type": "number",
                "description": "Reduces repetition (-2 to 2)",
                "default": null
            },
            {
                "name": "presence_penalty",
                "display_name": "Presence Penalty",
                "type": "number",
                "description": "Encourages new topics (-2 to 2)",
                "default": null
            },
            {
                "name": "response_format",
                "display_name": "Response Format",
                "type": "string or object",
                "description": "Output format specification",
                "default": null
            },
            {
                "name": "seed",
                "display_name": "Seed",
                "type": "number",
                "description": "Deterministic outputs",
                "default": null
            },
            {
                "name": "stop",
                "display_name": "Stop",
                "type": "string or array",
                "description": "Custom stop sequences",
                "default": null
            }
        ],
        "outputs": [
            {
                "name": "content",
                "display_name": "Content",
                "can_stream": true,
                "type": "string",
                "description": "The generated completion text"
            },
            {
                "name": "finish_reason",
                "display_name": "Finish Reason",
                "type": "string",
                "description": "Why the completion finished"
            },
            {
                "name": "usage",
                "display_name": "Token Usage",
                "type": "object",
                "description": "Token usage statistics"
            },
            {
                "name": "cost_total",
                "display_name": "Total Cost",
                "type": "number",
                "description": "Total cost for processing this request (USD)"
            },
            {
                "name": "cost_itemized",
                "display_name": "Itemized Cost",
                "type": "array",
                "description": "Detailed breakdown of costs"
            },
            {
                "name": "logprobs",
                "display_name": "Log Probabilities",
                "type": "object",
                "description": "Token probabilities and logprobs from the model"
            }
        ],
        "pricing": {
            "reference": "https://openrouter.ai/models",
            "items": [
                {
                    "key": "input_cost_per_million",
                    "label": "Input Tokens (per 1M)",
                    "cost": 5,
                    "currency": "USD"
                },
                {
                    "key": "output_cost_per_million",
                    "label": "Output Tokens (per 1M)",
                    "cost": 15,
                    "currency": "USD"
                }
            ]
        },
        "id": "x-ai-grok-vision-beta"
    },
    {
        "display_name": "XNOR Gate",
        "description": "A logic gate that outputs true if inputs are the same, false if they are different",
        "category": "logic",
        "inputs": [
            {
                "name": "input1",
                "display_name": "Input 1",
                "description": "The first input for the XNOR gate",
                "type": "boolean",
                "required": true
            },
            {
                "name": "input2",
                "display_name": "Input 2",
                "description": "The second input for the XNOR gate",
                "type": "boolean",
                "required": true
            }
        ],
        "outputs": [
            {
                "name": "value",
                "display_name": "Value",
                "description": "The output value of the XNOR gate",
                "type": "boolean"
            }
        ],
        "id": "xnor-gate"
    },
    {
        "display_name": "XOR Gate",
        "description": "A logic gate that outputs true if inputs are different, false if they are the same",
        "category": "logic",
        "inputs": [
            {
                "name": "input1",
                "display_name": "Input 1",
                "description": "The first input for the XOR gate",
                "type": "boolean",
                "required": true
            },
            {
                "name": "input2",
                "display_name": "Input 2",
                "description": "The second input for the XOR gate",
                "type": "boolean",
                "required": true
            }
        ],
        "outputs": [
            {
                "name": "value",
                "display_name": "Value",
                "description": "The output value of the XOR gate",
                "type": "boolean"
            }
        ],
        "id": "xor-gate"
    }
]